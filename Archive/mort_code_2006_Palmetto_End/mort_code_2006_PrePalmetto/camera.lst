MP2COD 3.90, COFF to COD File Converter
Copyright (c) 2004 Microchip Technology Inc.
Listing File Generated: Sat Apr 01 11:54:18 2006


Address  Value    Disassembly              Source                                                                           File
-------  -------  -----------------------  -------------------------------------------------------------------------------  -----
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	TITLE:		camera.c                                                               C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	VERSION:	0.1 (Beta)                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	DATE:		1-Jan-2006                                                              C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	AUTHOR:		R. Kevin Watson                                                       C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *				kevinw@jpl.nasa.gov                                                         C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	COMMENTS:	This is the "streamlined" version of camera.c                        C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *				You are free to use this source code for any non-commercial                 C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *				use. Please do not make copies of this source code, modified                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *				or un-modified, publicly available on the internet or elsewhere             C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *				without permission. Thanks.                                                 C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *				Copyright ©2005-2006 R. Kevin Watson. All rights are reserved.              C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           ******************************************************************************** C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	CHANGE LOG:                                                                    C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	DATE         REV  DESCRIPTION                                                  C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	-----------  ---  ----------------------------------------------------------   C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	01-Jan-2006  0.1  RKW - Original code.                                         C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           #include <stdio.h>                                                               C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           #include "serial_ports.h"                                                        C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           #include "camera.h"                                                              C:\mort\mort_code_2006_PrePalmetto\camera.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           // This variable, when equal to one, indicates that the                          C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           // camera has successfully initialized and should be                             C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           // sending data. You can also force a re-initialization                          C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           // by setting this variable to zero by calling the                               C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           // function Reinitialize_Camera().                                               C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           unsigned char camera_initialized = 0;                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           unsigned int camera_t_packets = 0;                                               C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           unsigned int camera_acks = 0;                                                    C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           unsigned int camera_ncks = 0;                                                    C:\mort\mort_code_2006_PrePalmetto\camera.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           unsigned char camera_failed = 0;                                                 C:\mort\mort_code_2006_PrePalmetto\camera.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           // camera T packet structure                                                     C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           T_Packet_Data_Type T_Packet_Data;                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	FUNCTION:		Camera_Handler()                                                    C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	PURPOSE:		This function is responsable for camera initialization               C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *					and camera serial data interpretation. Once the camera                     C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *					is initialized and starts sending tracking data, this                      C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *					function will continuously update the global T_Packet_Data                 C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *					structure with the received tracking information.					                     C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	CALLED FROM:	user_routines.c/Process_Data_From_Master_uP()                     C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	PARAMETERS:		none                                                              C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	RETURNS:		nothing                                                              C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	COMMENTS:                                                                      C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\camera.c
00290e   cfd9     MOVFF     0xfd9,0xfe6    void Camera_Handler(void)                                                        C:\mort\mort_code_2006_PrePalmetto\camera.c
002910   ffe6                                                                                                               
002912   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
002914   ffd9                                                                                                               
002916   0e04     MOVLW     0x4                                                                                             
002918   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           	unsigned char return_value;                                                     C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           	unsigned char byte_count;                                                       C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           	unsigned char byte;                                                             C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           	unsigned char i;                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           	// if needed, (re)initialize the camera and if the                              C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           	// initialization process throws an error, retry                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           	// until it's successfully initializes                                          C:\mort\mort_code_2006_PrePalmetto\camera.c
00291a   0102     MOVLB     0x2            	if(camera_initialized == 0)                                                     C:\mort\mort_code_2006_PrePalmetto\camera.c
00291c   513c     MOVF      0x3c,0x0,0x1                                                                                    
00291e   e10b     BNZ       0x2936                                                                                          
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\camera.c
002920   d8f6     RCALL     0x2b0e         		return_value = Initialize_Camera();                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
002922   6edf     MOVWF     0xdf,0x0                                                                                        
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           		// is the camera done initializing and if so,                                  C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           		// did it initialize without an error?                                         C:\mort\mort_code_2006_PrePalmetto\camera.c
002924   04df     DECF      0xdf,0x0,0x0   		if(return_value == 1)                                                          C:\mort\mort_code_2006_PrePalmetto\camera.c
002926   e104     BNZ       0x2930                                                                                          
                                           		{                                                                              C:\mort\mort_code_2006_PrePalmetto\camera.c
002928   0102     MOVLB     0x2            			camera_initialized = 1;                                                       C:\mort\mort_code_2006_PrePalmetto\camera.c
00292a   0e01     MOVLW     0x1                                                                                             
00292c   6f3c     MOVWF     0x3c,0x1                                                                                        
                                           			//printf("\r\nCamera: Initialized normally\r\n");                             C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           		}                                                                              C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           		// is the camera done initializing and if so,                                  C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           		// did it return an error?                                                     C:\mort\mort_code_2006_PrePalmetto\camera.c
00292e   d003     BRA       0x2936         		else if(return_value > 1)                                                      C:\mort\mort_code_2006_PrePalmetto\camera.c
002930   50df     MOVF      0xdf,0x0,0x0                                                                                    
002932   0801     SUBLW     0x1                                                                                             
002934   e200     BC        0x2936                                                                                          
                                           		{                                                                              C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           		//	printf("\r\nCamera: Initialized abnormally with code %u\r\n", (unsigned int)return_value); C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           		}                                                                              C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\camera.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           	// find out how much data, if any, is present in                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           	// the camera serial port's received data queue?                                C:\mort\mort_code_2006_PrePalmetto\camera.c
002936   dae0     RCALL     0x2ef8         	byte_count = Camera_Serial_Port_Byte_Count();                                   C:\mort\mort_code_2006_PrePalmetto\camera.c
002938   6ee7     MOVWF     0xe7,0x0                                                                                        
00293a   0e01     MOVLW     0x1                                                                                             
00293c   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
00293e   ffdb                                                                                                               
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           	// have we received any data?                                                   C:\mort\mort_code_2006_PrePalmetto\camera.c
002940   50db     MOVF      0xdb,0x0,0x0   	if(byte_count > 0)                                                              C:\mort\mort_code_2006_PrePalmetto\camera.c
002942   0800     SUBLW     0x0                                                                                             
002944   e21a     BC        0x297a                                                                                          
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           		// we have fresh data, so read each received byte one                          C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           		// at a time and immediatly send it to the camera state                        C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           		// machine, which is responsable for parsing the camera                        C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           		// data packets                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
002946   0e03     MOVLW     0x3            		for(i=0; i<byte_count; i++)                                                    C:\mort\mort_code_2006_PrePalmetto\camera.c
002948   6adb     CLRF      0xdb,0x0                                                                                        
00294a   0e01     MOVLW     0x1                                                                                             
00294c   50db     MOVF      0xdb,0x0,0x0                                                                                    
00294e   6ef3     MOVWF     0xf3,0x0                                                                                        
002950   0e03     MOVLW     0x3                                                                                             
002952   cfdb     MOVFF     0xfdb,0xff4                                                                                     
002954   fff4                                                                                                               
002956   50f3     MOVF      0xf3,0x0,0x0                                                                                    
002958   5cf4     SUBWF     0xf4,0x0,0x0                                                                                    
00295a   e20c     BC        0x2974                                                                                          
00296e   0e03     MOVLW     0x3                                                                                             
002970   2adb     INCF      0xdb,0x1,0x0                                                                                    
002972   d7eb     BRA       0x294a                                                                                          
                                           		{                                                                              C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           			// get the next data byte                                                     C:\mort\mort_code_2006_PrePalmetto\camera.c
00295c   dad1     RCALL     0x2f00         			byte = Read_Camera_Serial_Port();                                             C:\mort\mort_code_2006_PrePalmetto\camera.c
00295e   6ee7     MOVWF     0xe7,0x0                                                                                        
002960   0e02     MOVLW     0x2                                                                                             
002962   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
002964   ffdb                                                                                                               
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           			// send the byte to the camera state machine                                  C:\mort\mort_code_2006_PrePalmetto\camera.c
002966   cfdb     MOVFF     0xfdb,0xfe6    			Camera_State_Machine(byte);                                                   C:\mort\mort_code_2006_PrePalmetto\camera.c
002968   ffe6                                                                                                               
00296a   d810     RCALL     0x298c                                                                                          
00296c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           		}                                                                              C:\mort\mort_code_2006_PrePalmetto\camera.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           		// Camera gave us at least 1 packet                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
002974   0102     MOVLB     0x2            		camera_failed = 0;                                                             C:\mort\mort_code_2006_PrePalmetto\camera.c
002976   6b43     CLRF      0x43,0x1                                                                                        
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\camera.c
002978   d003     BRA       0x2980         	else                                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           		// Camera gave us no packets                                                   C:\mort\mort_code_2006_PrePalmetto\camera.c
00297a   0102     MOVLB     0x2            		camera_failed = 1;                                                             C:\mort\mort_code_2006_PrePalmetto\camera.c
00297c   0e01     MOVLW     0x1                                                                                             
00297e   6f43     MOVWF     0x43,0x1                                                                                        
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\camera.c
002980   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
002982   ffe1                                                                                                               
002984   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002986   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
002988   ffd9                                                                                                               
00298a   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	FUNCTION:		Camera_State_Machine()                                              C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	PURPOSE:		Parses the camera serial data stream looking for data                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *					packets, ACKs and NCKS. When packets are complete the                      C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *					individual packet counter variable is incremented, and                     C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *					in the case of packets, the global data structure is                       C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *					updated with the new data.					                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	CALLED FROM:	Camera_Handler(), above                                           C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	PARAMETERS:		unsigned char of camera serial data                               C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	RETURNS:		nothing                                                              C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	COMMENTS:		Camera must be configured to output binary data,                    C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *					not ASCII. See Raw_Mode() function.                                        C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\camera.c
00298c   cfd9     MOVFF     0xfd9,0xfe6    void Camera_State_Machine(unsigned char byte)                                    C:\mort\mort_code_2006_PrePalmetto\camera.c
00298e   ffe6                                                                                                               
002990   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
002992   ffd9                                                                                                               
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           	static unsigned char state = UNSYNCHRONIZED;                                    C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           	static unsigned char packet_buffer[34];                                         C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           	static unsigned char packet_buffer_index;                                       C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           	static unsigned char packet_char_count;                                         C:\mort\mort_code_2006_PrePalmetto\camera.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
002994   0102     MOVLB     0x2            	switch(state)                                                                   C:\mort\mort_code_2006_PrePalmetto\camera.c
002996   5144     MOVF      0x44,0x0,0x1                                                                                    
002998   0a06     XORLW     0x6                                                                                             
00299a   e101     BNZ       0x299e                                                                                          
00299c   d08f     BRA       0x2abc                                                                                          
00299e   0a03     XORLW     0x3                                                                                             
0029a0   e068     BZ        0x2a72                                                                                          
0029a2   0a06     XORLW     0x6                                                                                             
0029a4   e034     BZ        0x2a0e                                                                                          
0029a6   0a01     XORLW     0x1                                                                                             
0029a8   e025     BZ        0x29f4                                                                                          
0029aa   0a03     XORLW     0x3                                                                                             
0029ac   e001     BZ        0x29b0                                                                                          
0029ae   d0ab     BRA       0x2b06                                                                                          
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           		case UNSYNCHRONIZED:                                                           C:\mort\mort_code_2006_PrePalmetto\camera.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
0029b0   0efe     MOVLW     0xfe           			if(byte == 255) // start of a new data packet?                                C:\mort\mort_code_2006_PrePalmetto\camera.c
0029b2   50db     MOVF      0xdb,0x0,0x0                                                                                    
0029b4   6e00     MOVWF     0x0,0x0                                                                                         
0029b6   6a01     CLRF      0x1,0x0                                                                                         
0029b8   0eff     MOVLW     0xff                                                                                            
0029ba   1800     XORWF     0x0,0x0,0x0                                                                                     
0029bc   e101     BNZ       0x29c0                                                                                          
0029be   5001     MOVF      0x1,0x0,0x0                                                                                     
0029c0   e103     BNZ       0x29c8                                                                                          
                                           			{                                                                             C:\mort\mort_code_2006_PrePalmetto\camera.c
0029c2   0e02     MOVLW     0x2            				state = DETERMINING_PACKET_TYPE;                                             C:\mort\mort_code_2006_PrePalmetto\camera.c
0029c4   6f44     MOVWF     0x44,0x1                                                                                        
                                           			}                                                                             C:\mort\mort_code_2006_PrePalmetto\camera.c
0029c6   d015     BRA       0x29f2         			else if(byte == 'A') // start of an ACK?                                      C:\mort\mort_code_2006_PrePalmetto\camera.c
0029c8   0efe     MOVLW     0xfe                                                                                            
0029ca   50db     MOVF      0xdb,0x0,0x0                                                                                    
0029cc   0841     SUBLW     0x41                                                                                            
0029ce   e107     BNZ       0x29de                                                                                          
                                           			{                                                                             C:\mort\mort_code_2006_PrePalmetto\camera.c
0029d0   0101     MOVLB     0x1            				packet_char_count = 2;                                                       C:\mort\mort_code_2006_PrePalmetto\camera.c
0029d2   0e02     MOVLW     0x2                                                                                             
0029d4   6fec     MOVWF     0xec,0x1                                                                                        
0029d6   0102     MOVLB     0x2            				state = RECEIVING_ACK;                                                       C:\mort\mort_code_2006_PrePalmetto\camera.c
0029d8   0e05     MOVLW     0x5                                                                                             
0029da   6f44     MOVWF     0x44,0x1                                                                                        
                                           			}                                                                             C:\mort\mort_code_2006_PrePalmetto\camera.c
0029dc   d00a     BRA       0x29f2         			else if(byte == 'N') // start of a NCK?                                       C:\mort\mort_code_2006_PrePalmetto\camera.c
0029de   0efe     MOVLW     0xfe                                                                                            
0029e0   50db     MOVF      0xdb,0x0,0x0                                                                                    
0029e2   084e     SUBLW     0x4e                                                                                            
0029e4   e106     BNZ       0x29f2                                                                                          
                                           			{                                                                             C:\mort\mort_code_2006_PrePalmetto\camera.c
0029e6   0101     MOVLB     0x1            				packet_char_count = 2;                                                       C:\mort\mort_code_2006_PrePalmetto\camera.c
0029e8   0e02     MOVLW     0x2                                                                                             
0029ea   6fec     MOVWF     0xec,0x1                                                                                        
0029ec   0102     MOVLB     0x2            				state = RECEIVING_NCK;                                                       C:\mort\mort_code_2006_PrePalmetto\camera.c
0029ee   0e06     MOVLW     0x6                                                                                             
0029f0   6f44     MOVWF     0x44,0x1                                                                                        
                                           			}                                                                             C:\mort\mort_code_2006_PrePalmetto\camera.c
0029f2   d089     BRA       0x2b06         			break;                                                                        C:\mort\mort_code_2006_PrePalmetto\camera.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           		case DETERMINING_PACKET_TYPE:                                                  C:\mort\mort_code_2006_PrePalmetto\camera.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
0029f4   0efe     MOVLW     0xfe           			if(byte == 'T') // are we receiving a "t packet"?                             C:\mort\mort_code_2006_PrePalmetto\camera.c
0029f6   50db     MOVF      0xdb,0x0,0x0                                                                                    
0029f8   0854     SUBLW     0x54                                                                                            
0029fa   e106     BNZ       0x2a08                                                                                          
                                           			{                                                                             C:\mort\mort_code_2006_PrePalmetto\camera.c
0029fc   0101     MOVLB     0x1            				packet_buffer_index = 0;                                                     C:\mort\mort_code_2006_PrePalmetto\camera.c
0029fe   6beb     CLRF      0xeb,0x1                                                                                        
002a00   0102     MOVLB     0x2            				state = RECEIVING_T_PACKET;                                                  C:\mort\mort_code_2006_PrePalmetto\camera.c
002a02   0e03     MOVLW     0x3                                                                                             
002a04   6f44     MOVWF     0x44,0x1                                                                                        
                                           			}                                                                             C:\mort\mort_code_2006_PrePalmetto\camera.c
002a06   d002     BRA       0x2a0c         			else // unknown packet type; go back to the unsynchronized state              C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           			{                                                                             C:\mort\mort_code_2006_PrePalmetto\camera.c
002a08   0e01     MOVLW     0x1            				state = UNSYNCHRONIZED;                                                      C:\mort\mort_code_2006_PrePalmetto\camera.c
002a0a   6f44     MOVWF     0x44,0x1                                                                                        
                                           			}                                                                             C:\mort\mort_code_2006_PrePalmetto\camera.c
002a0c   d07c     BRA       0x2b06         			break;                                                                        C:\mort\mort_code_2006_PrePalmetto\camera.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           		case RECEIVING_T_PACKET:                                                       C:\mort\mort_code_2006_PrePalmetto\camera.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
002a0e   0101     MOVLB     0x1            			if(packet_buffer_index < sizeof(T_Packet_Data_Type)) // still building the packet? C:\mort\mort_code_2006_PrePalmetto\camera.c
002a10   51eb     MOVF      0xeb,0x0,0x1                                                                                    
002a12   6e00     MOVWF     0x0,0x0                                                                                         
002a14   6a01     CLRF      0x1,0x0                                                                                         
002a16   0e08     MOVLW     0x8                                                                                             
002a18   5c00     SUBWF     0x0,0x0,0x0                                                                                     
002a1a   0e00     MOVLW     0x0                                                                                             
002a1c   5801     SUBWFB    0x1,0x0,0x0                                                                                     
002a1e   e20a     BC        0x2a34                                                                                          
                                           			{                                                                             C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           				// move packet character to our buffer                                       C:\mort\mort_code_2006_PrePalmetto\camera.c
002a20   51eb     MOVF      0xeb,0x0,0x1   				packet_buffer[packet_buffer_index] = byte;                                   C:\mort\mort_code_2006_PrePalmetto\camera.c
002a22   6aea     CLRF      0xea,0x0                                                                                        
002a24   0fc9     ADDLW     0xc9                                                                                            
002a26   6ee9     MOVWF     0xe9,0x0                                                                                        
002a28   0e01     MOVLW     0x1                                                                                             
002a2a   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
002a2c   0efe     MOVLW     0xfe                                                                                            
002a2e   cfdb     MOVFF     0xfdb,0xfef                                                                                     
002a30   ffef                                                                                                               
002a32   2beb     INCF      0xeb,0x1,0x1   				packet_buffer_index++;                                                       C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           			}                                                                             C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           			                                                                              C:\mort\mort_code_2006_PrePalmetto\camera.c
002a34   51eb     MOVF      0xeb,0x0,0x1   			if(packet_buffer_index == sizeof(T_Packet_Data_Type)) // complete packet?     C:\mort\mort_code_2006_PrePalmetto\camera.c
002a36   6e00     MOVWF     0x0,0x0                                                                                         
002a38   6a01     CLRF      0x1,0x0                                                                                         
002a3a   0e08     MOVLW     0x8                                                                                             
002a3c   1800     XORWF     0x0,0x0,0x0                                                                                     
002a3e   e101     BNZ       0x2a42                                                                                          
002a40   5001     MOVF      0x1,0x0,0x0                                                                                     
002a42   e116     BNZ       0x2a70                                                                                          
                                           			{                                                                             C:\mort\mort_code_2006_PrePalmetto\camera.c
002a44   c1c9     MOVFF     0x1c9,0x1c1    				T_Packet_Data.mx = packet_buffer[0];                                         C:\mort\mort_code_2006_PrePalmetto\camera.c
002a46   f1c1                                                                                                               
002a48   c1ca     MOVFF     0x1ca,0x1c2    				T_Packet_Data.my = packet_buffer[1];                                         C:\mort\mort_code_2006_PrePalmetto\camera.c
002a4a   f1c2                                                                                                               
002a4c   c1cb     MOVFF     0x1cb,0x1c3    				T_Packet_Data.x1 = packet_buffer[2];                                         C:\mort\mort_code_2006_PrePalmetto\camera.c
002a4e   f1c3                                                                                                               
002a50   c1cc     MOVFF     0x1cc,0x1c4    				T_Packet_Data.y1 = packet_buffer[3];                                         C:\mort\mort_code_2006_PrePalmetto\camera.c
002a52   f1c4                                                                                                               
002a54   c1cd     MOVFF     0x1cd,0x1c5    				T_Packet_Data.x2 = packet_buffer[4];                                         C:\mort\mort_code_2006_PrePalmetto\camera.c
002a56   f1c5                                                                                                               
002a58   c1ce     MOVFF     0x1ce,0x1c6    				T_Packet_Data.y2 = packet_buffer[5];                                         C:\mort\mort_code_2006_PrePalmetto\camera.c
002a5a   f1c6                                                                                                               
002a5c   c1cf     MOVFF     0x1cf,0x1c7    				T_Packet_Data.pixels = packet_buffer[6];                                     C:\mort\mort_code_2006_PrePalmetto\camera.c
002a5e   f1c7                                                                                                               
002a60   c1d0     MOVFF     0x1d0,0x1c8    				T_Packet_Data.confidence = packet_buffer[7];                                 C:\mort\mort_code_2006_PrePalmetto\camera.c
002a62   f1c8                                                                                                               
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
002a64   0102     MOVLB     0x2            				camera_t_packets++;                                                          C:\mort\mort_code_2006_PrePalmetto\camera.c
002a66   2b3d     INCF      0x3d,0x1,0x1                                                                                    
002a68   0e00     MOVLW     0x0                                                                                             
002a6a   233e     ADDWFC    0x3e,0x1,0x1                                                                                    
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
002a6c   0e01     MOVLW     0x1            				state = UNSYNCHRONIZED; // we're done; go back to the unsynchronized state   C:\mort\mort_code_2006_PrePalmetto\camera.c
002a6e   6f44     MOVWF     0x44,0x1                                                                                        
                                           			}                                                                             C:\mort\mort_code_2006_PrePalmetto\camera.c
002a70   d04a     BRA       0x2b06         			break;                                                                        C:\mort\mort_code_2006_PrePalmetto\camera.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           		case RECEIVING_ACK:                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
002a72   0e02     MOVLW     0x2            			if(packet_char_count == 2 && byte == 'C') // second character a C?            C:\mort\mort_code_2006_PrePalmetto\camera.c
002a74   0101     MOVLB     0x1                                                                                             
002a76   5dec     SUBWF     0xec,0x0,0x1                                                                                    
002a78   e106     BNZ       0x2a86                                                                                          
002a7a   0efe     MOVLW     0xfe                                                                                            
002a7c   50db     MOVF      0xdb,0x0,0x0                                                                                    
002a7e   0843     SUBLW     0x43                                                                                            
002a80   e102     BNZ       0x2a86                                                                                          
                                           			{                                                                             C:\mort\mort_code_2006_PrePalmetto\camera.c
002a82   2bec     INCF      0xec,0x1,0x1   				packet_char_count++;                                                         C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           			}                                                                             C:\mort\mort_code_2006_PrePalmetto\camera.c
002a84   d01a     BRA       0x2aba         			else if(packet_char_count == 3 && byte == 'K') // third character a K?        C:\mort\mort_code_2006_PrePalmetto\camera.c
002a86   0e03     MOVLW     0x3                                                                                             
002a88   5dec     SUBWF     0xec,0x0,0x1                                                                                    
002a8a   e106     BNZ       0x2a98                                                                                          
002a8c   0efe     MOVLW     0xfe                                                                                            
002a8e   50db     MOVF      0xdb,0x0,0x0                                                                                    
002a90   084b     SUBLW     0x4b                                                                                            
002a92   e102     BNZ       0x2a98                                                                                          
                                           			{                                                                             C:\mort\mort_code_2006_PrePalmetto\camera.c
002a94   2bec     INCF      0xec,0x1,0x1   				packet_char_count++;                                                         C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           			}                                                                             C:\mort\mort_code_2006_PrePalmetto\camera.c
002a96   d011     BRA       0x2aba         			else if(packet_char_count == 4 && byte == '\r') // fourth character a return? C:\mort\mort_code_2006_PrePalmetto\camera.c
002a98   0e04     MOVLW     0x4                                                                                             
002a9a   5dec     SUBWF     0xec,0x0,0x1                                                                                    
002a9c   e10b     BNZ       0x2ab4                                                                                          
002a9e   0efe     MOVLW     0xfe                                                                                            
002aa0   50db     MOVF      0xdb,0x0,0x0                                                                                    
002aa2   080d     SUBLW     0xd                                                                                             
002aa4   e107     BNZ       0x2ab4                                                                                          
                                           			{                                                                             C:\mort\mort_code_2006_PrePalmetto\camera.c
002aa6   0102     MOVLB     0x2            				camera_acks++;                                                               C:\mort\mort_code_2006_PrePalmetto\camera.c
002aa8   2b3f     INCF      0x3f,0x1,0x1                                                                                    
002aaa   0e00     MOVLW     0x0                                                                                             
002aac   2340     ADDWFC    0x40,0x1,0x1                                                                                    
002aae   0e01     MOVLW     0x1            				state = UNSYNCHRONIZED;                                                      C:\mort\mort_code_2006_PrePalmetto\camera.c
002ab0   6f44     MOVWF     0x44,0x1                                                                                        
                                           			}                                                                             C:\mort\mort_code_2006_PrePalmetto\camera.c
002ab2   d003     BRA       0x2aba         			else                                                                          C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           			{                                                                             C:\mort\mort_code_2006_PrePalmetto\camera.c
002ab4   0102     MOVLB     0x2            				state = UNSYNCHRONIZED;                                                      C:\mort\mort_code_2006_PrePalmetto\camera.c
002ab6   0e01     MOVLW     0x1                                                                                             
002ab8   6f44     MOVWF     0x44,0x1                                                                                        
                                           			}                                                                             C:\mort\mort_code_2006_PrePalmetto\camera.c
002aba   d025     BRA       0x2b06         			break;                                                                        C:\mort\mort_code_2006_PrePalmetto\camera.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           		case RECEIVING_NCK:                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
002abc   0e02     MOVLW     0x2            			if(packet_char_count == 2 && byte == 'C') // second character a C?            C:\mort\mort_code_2006_PrePalmetto\camera.c
002abe   0101     MOVLB     0x1                                                                                             
002ac0   5dec     SUBWF     0xec,0x0,0x1                                                                                    
002ac2   e106     BNZ       0x2ad0                                                                                          
002ac4   0efe     MOVLW     0xfe                                                                                            
002ac6   50db     MOVF      0xdb,0x0,0x0                                                                                    
002ac8   0843     SUBLW     0x43                                                                                            
002aca   e102     BNZ       0x2ad0                                                                                          
                                           			{                                                                             C:\mort\mort_code_2006_PrePalmetto\camera.c
002acc   2bec     INCF      0xec,0x1,0x1   				packet_char_count++;                                                         C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           			}                                                                             C:\mort\mort_code_2006_PrePalmetto\camera.c
002ace   d01a     BRA       0x2b04         			else if(packet_char_count == 3 && byte == 'K') // third character a K?        C:\mort\mort_code_2006_PrePalmetto\camera.c
002ad0   0e03     MOVLW     0x3                                                                                             
002ad2   5dec     SUBWF     0xec,0x0,0x1                                                                                    
002ad4   e106     BNZ       0x2ae2                                                                                          
002ad6   0efe     MOVLW     0xfe                                                                                            
002ad8   50db     MOVF      0xdb,0x0,0x0                                                                                    
002ada   084b     SUBLW     0x4b                                                                                            
002adc   e102     BNZ       0x2ae2                                                                                          
                                           			{                                                                             C:\mort\mort_code_2006_PrePalmetto\camera.c
002ade   2bec     INCF      0xec,0x1,0x1   				packet_char_count++;                                                         C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           			}                                                                             C:\mort\mort_code_2006_PrePalmetto\camera.c
002ae0   d011     BRA       0x2b04         			else if(packet_char_count == 4 && byte == '\r') // fourth character a return? C:\mort\mort_code_2006_PrePalmetto\camera.c
002ae2   0e04     MOVLW     0x4                                                                                             
002ae4   5dec     SUBWF     0xec,0x0,0x1                                                                                    
002ae6   e10b     BNZ       0x2afe                                                                                          
002ae8   0efe     MOVLW     0xfe                                                                                            
002aea   50db     MOVF      0xdb,0x0,0x0                                                                                    
002aec   080d     SUBLW     0xd                                                                                             
002aee   e107     BNZ       0x2afe                                                                                          
                                           			{                                                                             C:\mort\mort_code_2006_PrePalmetto\camera.c
002af0   0102     MOVLB     0x2            				camera_ncks++;                                                               C:\mort\mort_code_2006_PrePalmetto\camera.c
002af2   2b41     INCF      0x41,0x1,0x1                                                                                    
002af4   0e00     MOVLW     0x0                                                                                             
002af6   2342     ADDWFC    0x42,0x1,0x1                                                                                    
002af8   0e01     MOVLW     0x1            				state = UNSYNCHRONIZED;                                                      C:\mort\mort_code_2006_PrePalmetto\camera.c
002afa   6f44     MOVWF     0x44,0x1                                                                                        
                                           			}                                                                             C:\mort\mort_code_2006_PrePalmetto\camera.c
002afc   d003     BRA       0x2b04         			else                                                                          C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           			{                                                                             C:\mort\mort_code_2006_PrePalmetto\camera.c
002afe   0102     MOVLB     0x2            				state = UNSYNCHRONIZED;                                                      C:\mort\mort_code_2006_PrePalmetto\camera.c
002b00   0e01     MOVLW     0x1                                                                                             
002b02   6f44     MOVWF     0x44,0x1                                                                                        
                                           			}                                                                             C:\mort\mort_code_2006_PrePalmetto\camera.c
002b04   d000     BRA       0x2b06         			break;	                                                                       C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\camera.c
002b06   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
002b08   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
002b0a   ffd9                                                                                                               
002b0c   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	FUNCTION:		Initialize_Camera()                                                 C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	PURPOSE:		This function is responsable for initializing the                    C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *					camera.                                                                    C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	CALLED FROM:	Camera_Handler(), below.                                          C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	PARAMETERS:		None.                                                             C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	RETURNS:		0: Initialization in progress.                                       C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *					1: Initialization has completed.                                           C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *					2-127: Camera returned a NCK and the returned value                        C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *					indicates the state that caused the NCK.                                   C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *					128-255: Camera didn't return a ACK or NCK within                          C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *					the time allowed. The returned value is the value                          C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *					128 added to the state that failed. The amount of                          C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *					time allowed is set by the MAX_ACK_LOOP_COUNT                              C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *					parameter found in camera.h.					                                          C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	COMMENTS:		Camera_acks and camera_ncks are incremented by the                  C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *					function Camera_State_Machine() which is called by                         C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *					Process_Camera_Data() to process data sent by the                          C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *					camera.                                                                    C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *					                                                                           C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\camera.c
002b0e   cfd9     MOVFF     0xfd9,0xfe6    unsigned char Initialize_Camera(void)                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
002b10   ffe6                                                                                                               
002b12   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
002b14   ffd9                                                                                                               
002b16   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           	static unsigned char boot_initialization_flag = 1;                              C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           	static unsigned char initialize_flag = 1;                                       C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           	static unsigned char state;                                                     C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           	static unsigned char wait_for_ack;                                              C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           	static unsigned int loop_count;                                                 C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           	static unsigned char return_value;                                              C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           	unsigned char returned_value;                                                   C:\mort\mort_code_2006_PrePalmetto\camera.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           	// stuff to do after the camera goes through a power-on reset                   C:\mort\mort_code_2006_PrePalmetto\camera.c
002b18   0102     MOVLB     0x2            	if(boot_initialization_flag == 1)                                               C:\mort\mort_code_2006_PrePalmetto\camera.c
002b1a   0545     DECF      0x45,0x0,0x1                                                                                    
002b1c   e107     BNZ       0x2b2c                                                                                          
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           		// get the camera's attention                                                  C:\mort\mort_code_2006_PrePalmetto\camera.c
002b1e   d98b     RCALL     0x2e36         		Camera_Idle();                                                                 C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           		// set the command & packet transfer mode                                      C:\mort\mort_code_2006_PrePalmetto\camera.c
002b20   0e05     MOVLW     0x5            		Raw_Mode(5);                                                                   C:\mort\mort_code_2006_PrePalmetto\camera.c
002b22   6ee6     MOVWF     0xe6,0x0                                                                                        
002b24   d994     RCALL     0x2e4e                                                                                          
002b26   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           		// don't execute this code again until the next power on reset                 C:\mort\mort_code_2006_PrePalmetto\camera.c
002b28   0102     MOVLB     0x2            		boot_initialization_flag = 0;                                                  C:\mort\mort_code_2006_PrePalmetto\camera.c
002b2a   6b45     CLRF      0x45,0x1                                                                                        
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\camera.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           	// do we need to (re)initialize the state machine?                              C:\mort\mort_code_2006_PrePalmetto\camera.c
002b2c   0546     DECF      0x46,0x0,0x1   	if(initialize_flag == 1)                                                        C:\mort\mort_code_2006_PrePalmetto\camera.c
002b2e   e10d     BNZ       0x2b4a                                                                                          
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\camera.c
002b30   6b46     CLRF      0x46,0x1       		initialize_flag = 0;                                                           C:\mort\mort_code_2006_PrePalmetto\camera.c
002b32   0101     MOVLB     0x1            		wait_for_ack = 0;                                                              C:\mort\mort_code_2006_PrePalmetto\camera.c
002b34   6bee     CLRF      0xee,0x1                                                                                        
002b36   0e01     MOVLW     0x1            		state = STATE_ONE;                                                             C:\mort\mort_code_2006_PrePalmetto\camera.c
002b38   6fed     MOVWF     0xed,0x1                                                                                        
002b3a   6bef     CLRF      0xef,0x1       		loop_count = 0;                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
002b3c   6bf0     CLRF      0xf0,0x1                                                                                        
002b3e   6bf1     CLRF      0xf1,0x1       		return_value = 0;                                                              C:\mort\mort_code_2006_PrePalmetto\camera.c
002b40   0102     MOVLB     0x2            		camera_acks = 0;                                                               C:\mort\mort_code_2006_PrePalmetto\camera.c
002b42   6b3f     CLRF      0x3f,0x1                                                                                        
002b44   6b40     CLRF      0x40,0x1                                                                                        
002b46   6b41     CLRF      0x41,0x1       		camera_ncks = 0;                                                               C:\mort\mort_code_2006_PrePalmetto\camera.c
002b48   6b42     CLRF      0x42,0x1                                                                                        
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\camera.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           	// do we need to wait for an ACK from the camera?                               C:\mort\mort_code_2006_PrePalmetto\camera.c
002b4a   0101     MOVLB     0x1            	if(wait_for_ack == 1)                                                           C:\mort\mort_code_2006_PrePalmetto\camera.c
002b4c   05ee     DECF      0xee,0x0,0x1                                                                                    
002b4e   e129     BNZ       0x2ba2                                                                                          
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\camera.c
002b50   0102     MOVLB     0x2            		if(camera_acks >= 1) // got ACK?                                               C:\mort\mort_code_2006_PrePalmetto\camera.c
002b52   0e01     MOVLW     0x1                                                                                             
002b54   5d3f     SUBWF     0x3f,0x0,0x1                                                                                    
002b56   0e00     MOVLW     0x0                                                                                             
002b58   5940     SUBWFB    0x40,0x0,0x1                                                                                    
002b5a   e305     BNC       0x2b66                                                                                          
                                           		{                                                                              C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           			// we're no longer waiting for an ACK                                         C:\mort\mort_code_2006_PrePalmetto\camera.c
002b5c   0101     MOVLB     0x1            			wait_for_ack = 0;                                                             C:\mort\mort_code_2006_PrePalmetto\camera.c
002b5e   6bee     CLRF      0xee,0x1                                                                                        
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           			// reset the loop counter                                                     C:\mort\mort_code_2006_PrePalmetto\camera.c
002b60   6bef     CLRF      0xef,0x1       			loop_count = 0;                                                               C:\mort\mort_code_2006_PrePalmetto\camera.c
002b62   6bf0     CLRF      0xf0,0x1                                                                                        
                                           		}                                                                              C:\mort\mort_code_2006_PrePalmetto\camera.c
002b64   d01d     BRA       0x2ba0         		else if(camera_ncks >= 1) // got NCK?                                          C:\mort\mort_code_2006_PrePalmetto\camera.c
002b66   0e01     MOVLW     0x1                                                                                             
002b68   5d41     SUBWF     0x41,0x0,0x1                                                                                    
002b6a   0e00     MOVLW     0x0                                                                                             
002b6c   5942     SUBWFB    0x42,0x0,0x1                                                                                    
002b6e   e304     BNC       0x2b78                                                                                          
                                           		{                                                                              C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           			// return with a value that signals an error happened                         C:\mort\mort_code_2006_PrePalmetto\camera.c
002b70   0101     MOVLB     0x1            			return_value = state - 1;                                                     C:\mort\mort_code_2006_PrePalmetto\camera.c
002b72   05ed     DECF      0xed,0x0,0x1                                                                                    
002b74   6ff1     MOVWF     0xf1,0x1                                                                                        
                                           		}                                                                              C:\mort\mort_code_2006_PrePalmetto\camera.c
002b76   d014     BRA       0x2ba0         		else if(loop_count >= MAX_ACK_LOOP_COUNT) // have we waited too long?          C:\mort\mort_code_2006_PrePalmetto\camera.c
002b78   0101     MOVLB     0x1                                                                                             
002b7a   0e0a     MOVLW     0xa                                                                                             
002b7c   5def     SUBWF     0xef,0x0,0x1                                                                                    
002b7e   0e00     MOVLW     0x0                                                                                             
002b80   59f0     SUBWFB    0xf0,0x0,0x1                                                                                    
002b82   e30b     BNC       0x2b9a                                                                                          
                                           		{                                                                              C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           			// return with a value that signals an error happened                         C:\mort\mort_code_2006_PrePalmetto\camera.c
002b84   0e80     MOVLW     0x80           			return_value = state + 128 - 1;                                               C:\mort\mort_code_2006_PrePalmetto\camera.c
002b86   25ed     ADDWF     0xed,0x0,0x1                                                                                    
002b88   6e00     MOVWF     0x0,0x0                                                                                         
002b8a   6a01     CLRF      0x1,0x0                                                                                         
002b8c   0e00     MOVLW     0x0                                                                                             
002b8e   2201     ADDWFC    0x1,0x1,0x0                                                                                     
002b90   0600     DECF      0x0,0x1,0x0                                                                                     
002b92   5a01     SUBWFB    0x1,0x1,0x0                                                                                     
002b94   c000     MOVFF     0x0,0x1f1                                                                                       
002b96   f1f1                                                                                                               
                                           		}                                                                              C:\mort\mort_code_2006_PrePalmetto\camera.c
002b98   d003     BRA       0x2ba0         		else                                                                           C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           		{                                                                              C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           			// if we fall through to here it means that that we've sent a                 C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           			// command to the camera, and we're still waiting to receive                  C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           			// an ACK/NCK or time-out, so other than incrementing the loop                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           			// counter, we don't do anything and continue to wait...                      C:\mort\mort_code_2006_PrePalmetto\camera.c
002b9a   2bef     INCF      0xef,0x1,0x1   			loop_count++;                                                                 C:\mort\mort_code_2006_PrePalmetto\camera.c
002b9c   0e00     MOVLW     0x0                                                                                             
002b9e   23f0     ADDWFC    0xf0,0x1,0x1                                                                                    
                                           		}                                                                              C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\camera.c
002ba0   d10a     BRA       0x2db6         	else                                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\camera.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           		// if debugging mode is on, send camera initialization information             C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           		// to the terminal (the DEBUG() macro is defined in camera.h                   C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           	//	printf("Camera: Initialization state = %u\r\n", (unsigned int)state);        C:\mort\mort_code_2006_PrePalmetto\camera.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           		// reset the ACK/NCK counters                                                  C:\mort\mort_code_2006_PrePalmetto\camera.c
002ba2   0102     MOVLB     0x2            		camera_acks = 0;                                                               C:\mort\mort_code_2006_PrePalmetto\camera.c
002ba4   6b3f     CLRF      0x3f,0x1                                                                                        
002ba6   6b40     CLRF      0x40,0x1                                                                                        
002ba8   6b41     CLRF      0x41,0x1       		camera_ncks = 0;                                                               C:\mort\mort_code_2006_PrePalmetto\camera.c
002baa   6b42     CLRF      0x42,0x1                                                                                        
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
002bac   0101     MOVLB     0x1            		switch(state)                                                                  C:\mort\mort_code_2006_PrePalmetto\camera.c
002bae   51ed     MOVF      0xed,0x0,0x1                                                                                    
002bb0   0a12     XORLW     0x12                                                                                            
002bb2   e101     BNZ       0x2bb6                                                                                          
002bb4   d0fd     BRA       0x2db0                                                                                          
002bb6   0a03     XORLW     0x3                                                                                             
002bb8   e101     BNZ       0x2bbc                                                                                          
002bba   d0e3     BRA       0x2d82                                                                                          
002bbc   0a01     XORLW     0x1                                                                                             
002bbe   e101     BNZ       0x2bc2                                                                                          
002bc0   d0d6     BRA       0x2d6e                                                                                          
002bc2   0a1f     XORLW     0x1f                                                                                            
002bc4   e101     BNZ       0x2bc8                                                                                          
002bc6   d0c6     BRA       0x2d54                                                                                          
002bc8   0a01     XORLW     0x1                                                                                             
002bca   e101     BNZ       0x2bce                                                                                          
002bcc   d0b6     BRA       0x2d3a                                                                                          
002bce   0a03     XORLW     0x3                                                                                             
002bd0   e101     BNZ       0x2bd4                                                                                          
002bd2   d0a6     BRA       0x2d20                                                                                          
002bd4   0a01     XORLW     0x1                                                                                             
002bd6   e101     BNZ       0x2bda                                                                                          
002bd8   d096     BRA       0x2d06                                                                                          
002bda   0a07     XORLW     0x7                                                                                             
002bdc   e101     BNZ       0x2be0                                                                                          
002bde   d086     BRA       0x2cec                                                                                          
002be0   0a01     XORLW     0x1                                                                                             
002be2   e101     BNZ       0x2be6                                                                                          
002be4   d078     BRA       0x2cd6                                                                                          
002be6   0a03     XORLW     0x3                                                                                             
002be8   e069     BZ        0x2cbc                                                                                          
002bea   0a01     XORLW     0x1                                                                                             
002bec   e05a     BZ        0x2ca2                                                                                          
002bee   0a0f     XORLW     0xf                                                                                             
002bf0   e04b     BZ        0x2c88                                                                                          
002bf2   0a01     XORLW     0x1                                                                                             
002bf4   e03c     BZ        0x2c6e                                                                                          
002bf6   0a03     XORLW     0x3                                                                                             
002bf8   e02d     BZ        0x2c54                                                                                          
002bfa   0a01     XORLW     0x1                                                                                             
002bfc   e01e     BZ        0x2c3a                                                                                          
002bfe   0a07     XORLW     0x7                                                                                             
002c00   e00f     BZ        0x2c20                                                                                          
002c02   0a01     XORLW     0x1                                                                                             
002c04   e009     BZ        0x2c18                                                                                          
002c06   0a03     XORLW     0x3                                                                                             
002c08   e001     BZ        0x2c0c                                                                                          
002c0a   d0d5     BRA       0x2db6                                                                                          
                                           		{                                                                              C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           			case STATE_ONE:                                                               C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           				// get the camera's attention                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
002c0c   d914     RCALL     0x2e36         				Camera_Idle();                                                               C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           				// next state                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
002c0e   0101     MOVLB     0x1            				state = STATE_TWO;                                                           C:\mort\mort_code_2006_PrePalmetto\camera.c
002c10   0e02     MOVLW     0x2                                                                                             
002c12   6fed     MOVWF     0xed,0x1                                                                                        
                                           				// don't wait for an ACK before transitioning to the next state              C:\mort\mort_code_2006_PrePalmetto\camera.c
002c14   6bee     CLRF      0xee,0x1       				wait_for_ack = 0;                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
002c16   d0cf     BRA       0x2db6         				break;                                                                       C:\mort\mort_code_2006_PrePalmetto\camera.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           			case STATE_TWO:                                                               C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           				// next state                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
002c18   0e03     MOVLW     0x3            				state = STATE_THREE;                                                         C:\mort\mort_code_2006_PrePalmetto\camera.c
002c1a   6fed     MOVWF     0xed,0x1                                                                                        
                                           				// don't wait for an ACK before transitioning to the next state              C:\mort\mort_code_2006_PrePalmetto\camera.c
002c1c   6bee     CLRF      0xee,0x1       				wait_for_ack = 0;                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
002c1e   d0cb     BRA       0x2db6         				break;                                                                       C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           	                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           			case STATE_THREE:                                                             C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           				// initialize the Common Control I register                                  C:\mort\mort_code_2006_PrePalmetto\camera.c
002c20   0e80     MOVLW     0x80           				Write_Camera_Module_Register(COMI_ADDRESS, COMI_DEFAULT);                    C:\mort\mort_code_2006_PrePalmetto\camera.c
002c22   6ee6     MOVWF     0xe6,0x0                                                                                        
002c24   0e29     MOVLW     0x29                                                                                            
002c26   6ee6     MOVWF     0xe6,0x0                                                                                        
002c28   d949     RCALL     0x2ebc                                                                                          
002c2a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002c2c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
002c2e   0101     MOVLB     0x1            				state = STATE_FOUR;                                                          C:\mort\mort_code_2006_PrePalmetto\camera.c
002c30   0e04     MOVLW     0x4                                                                                             
002c32   6fed     MOVWF     0xed,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\mort\mort_code_2006_PrePalmetto\camera.c
002c34   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
002c36   6fee     MOVWF     0xee,0x1                                                                                        
002c38   d0be     BRA       0x2db6         				break;                                                                       C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           	                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           			case STATE_FOUR:                                                              C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           				// initialize the Common Control B register                                  C:\mort\mort_code_2006_PrePalmetto\camera.c
002c3a   0e20     MOVLW     0x20           				Write_Camera_Module_Register(COMB_ADDRESS, COMB_DEFAULT);                    C:\mort\mort_code_2006_PrePalmetto\camera.c
002c3c   6ee6     MOVWF     0xe6,0x0                                                                                        
002c3e   0e13     MOVLW     0x13                                                                                            
002c40   6ee6     MOVWF     0xe6,0x0                                                                                        
002c42   d93c     RCALL     0x2ebc                                                                                          
002c44   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002c46   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
002c48   0101     MOVLB     0x1            				state = STATE_FIVE;                                                          C:\mort\mort_code_2006_PrePalmetto\camera.c
002c4a   0e05     MOVLW     0x5                                                                                             
002c4c   6fed     MOVWF     0xed,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\mort\mort_code_2006_PrePalmetto\camera.c
002c4e   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
002c50   6fee     MOVWF     0xee,0x1                                                                                        
002c52   d0b1     BRA       0x2db6         				break;                                                                       C:\mort\mort_code_2006_PrePalmetto\camera.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           			case STATE_FIVE:                                                              C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           				// initialize the Common Control J register to power-on state                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           				// to disable the banding filter, which must be done before                  C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           				// setting the Frame Rate Adjust register 2 (EHSL)                           C:\mort\mort_code_2006_PrePalmetto\camera.c
002c54   0e84     MOVLW     0x84           				Write_Camera_Module_Register(COMJ_ADDRESS, COMJ_DEFAULT);                    C:\mort\mort_code_2006_PrePalmetto\camera.c
002c56   6ee6     MOVWF     0xe6,0x0                                                                                        
002c58   0e2d     MOVLW     0x2d                                                                                            
002c5a   6ee6     MOVWF     0xe6,0x0                                                                                        
002c5c   d92f     RCALL     0x2ebc                                                                                          
002c5e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002c60   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
002c62   0101     MOVLB     0x1            				state = STATE_SIX;                                                           C:\mort\mort_code_2006_PrePalmetto\camera.c
002c64   0e06     MOVLW     0x6                                                                                             
002c66   6fed     MOVWF     0xed,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\mort\mort_code_2006_PrePalmetto\camera.c
002c68   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
002c6a   6fee     MOVWF     0xee,0x1                                                                                        
002c6c   d0a4     BRA       0x2db6         				break;                                                                       C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           		                                                                               C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           			case STATE_SIX:                                                               C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           				// initialize the Frame Rate Adjust register 1                               C:\mort\mort_code_2006_PrePalmetto\camera.c
002c6e   0e80     MOVLW     0x80           				Write_Camera_Module_Register(EHSH_ADDRESS, EHSH_DEFAULT);                    C:\mort\mort_code_2006_PrePalmetto\camera.c
002c70   6ee6     MOVWF     0xe6,0x0                                                                                        
002c72   0e2a     MOVLW     0x2a                                                                                            
002c74   6ee6     MOVWF     0xe6,0x0                                                                                        
002c76   d922     RCALL     0x2ebc                                                                                          
002c78   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002c7a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
002c7c   0101     MOVLB     0x1            				state = STATE_SEVEN;                                                         C:\mort\mort_code_2006_PrePalmetto\camera.c
002c7e   0e07     MOVLW     0x7                                                                                             
002c80   6fed     MOVWF     0xed,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\mort\mort_code_2006_PrePalmetto\camera.c
002c82   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
002c84   6fee     MOVWF     0xee,0x1                                                                                        
002c86   d097     BRA       0x2db6         				break;                                                                       C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           		                                                                               C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           			case STATE_SEVEN:                                                             C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           				// initialize the Frame Rate Adjust register 2                               C:\mort\mort_code_2006_PrePalmetto\camera.c
002c88   0e20     MOVLW     0x20           				Write_Camera_Module_Register(EHSL_ADDRESS, EHSL_DEFAULT);                    C:\mort\mort_code_2006_PrePalmetto\camera.c
002c8a   6ee6     MOVWF     0xe6,0x0                                                                                        
002c8c   0e2b     MOVLW     0x2b                                                                                            
002c8e   6ee6     MOVWF     0xe6,0x0                                                                                        
002c90   d915     RCALL     0x2ebc                                                                                          
002c92   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002c94   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
002c96   0101     MOVLB     0x1            				state = STATE_EIGHT;                                                         C:\mort\mort_code_2006_PrePalmetto\camera.c
002c98   0e08     MOVLW     0x8                                                                                             
002c9a   6fed     MOVWF     0xed,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\mort\mort_code_2006_PrePalmetto\camera.c
002c9c   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
002c9e   6fee     MOVWF     0xee,0x1                                                                                        
002ca0   d08a     BRA       0x2db6         				break;                                                                       C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           		                                                                               C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           			case STATE_EIGHT:                                                             C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           				// initialize the Common Control J register                                  C:\mort\mort_code_2006_PrePalmetto\camera.c
002ca2   0e84     MOVLW     0x84           				Write_Camera_Module_Register(COMJ_ADDRESS, COMJ_DEFAULT);                    C:\mort\mort_code_2006_PrePalmetto\camera.c
002ca4   6ee6     MOVWF     0xe6,0x0                                                                                        
002ca6   0e2d     MOVLW     0x2d                                                                                            
002ca8   6ee6     MOVWF     0xe6,0x0                                                                                        
002caa   d908     RCALL     0x2ebc                                                                                          
002cac   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002cae   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
002cb0   0101     MOVLB     0x1            				state = STATE_NINE;                                                          C:\mort\mort_code_2006_PrePalmetto\camera.c
002cb2   0e09     MOVLW     0x9                                                                                             
002cb4   6fed     MOVWF     0xed,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\mort\mort_code_2006_PrePalmetto\camera.c
002cb6   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
002cb8   6fee     MOVWF     0xee,0x1                                                                                        
002cba   d07d     BRA       0x2db6         				break;                                                                       C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           		                                                                               C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           			case STATE_NINE:                                                              C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           				// initialize the Common Control A register                                  C:\mort\mort_code_2006_PrePalmetto\camera.c
002cbc   0e20     MOVLW     0x20           				Write_Camera_Module_Register(COMA_ADDRESS, COMA_DEFAULT);                    C:\mort\mort_code_2006_PrePalmetto\camera.c
002cbe   6ee6     MOVWF     0xe6,0x0                                                                                        
002cc0   0e12     MOVLW     0x12                                                                                            
002cc2   6ee6     MOVWF     0xe6,0x0                                                                                        
002cc4   d8fb     RCALL     0x2ebc                                                                                          
002cc6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002cc8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
002cca   0101     MOVLB     0x1            				state = STATE_TEN;                                                           C:\mort\mort_code_2006_PrePalmetto\camera.c
002ccc   0e0a     MOVLW     0xa                                                                                             
002cce   6fed     MOVWF     0xed,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\mort\mort_code_2006_PrePalmetto\camera.c
002cd0   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
002cd2   6fee     MOVWF     0xee,0x1                                                                                        
002cd4   d070     BRA       0x2db6         				break;                                                                       C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           		                                                                               C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           			case STATE_TEN:                                                               C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           				// initialize the Automatic Gain Control register                            C:\mort\mort_code_2006_PrePalmetto\camera.c
002cd6   6ae6     CLRF      0xe6,0x0       				Write_Camera_Module_Register(AGC_ADDRESS, AGC_DEFAULT);                      C:\mort\mort_code_2006_PrePalmetto\camera.c
002cd8   6ae6     CLRF      0xe6,0x0                                                                                        
002cda   d8f0     RCALL     0x2ebc                                                                                          
002cdc   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002cde   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
002ce0   0101     MOVLB     0x1            				state = STATE_ELEVEN;                                                        C:\mort\mort_code_2006_PrePalmetto\camera.c
002ce2   0e0b     MOVLW     0xb                                                                                             
002ce4   6fed     MOVWF     0xed,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\mort\mort_code_2006_PrePalmetto\camera.c
002ce6   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
002ce8   6fee     MOVWF     0xee,0x1                                                                                        
002cea   d065     BRA       0x2db6         				break;                                                                       C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           		                                                                               C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           			case STATE_ELEVEN:                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           				// initialize the Blue Gain Control register                                 C:\mort\mort_code_2006_PrePalmetto\camera.c
002cec   0e80     MOVLW     0x80           				Write_Camera_Module_Register(BLU_ADDRESS, BLU_DEFAULT);                      C:\mort\mort_code_2006_PrePalmetto\camera.c
002cee   6ee6     MOVWF     0xe6,0x0                                                                                        
002cf0   0e01     MOVLW     0x1                                                                                             
002cf2   6ee6     MOVWF     0xe6,0x0                                                                                        
002cf4   d8e3     RCALL     0x2ebc                                                                                          
002cf6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002cf8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
002cfa   0101     MOVLB     0x1            				state = STATE_TWELVE;                                                        C:\mort\mort_code_2006_PrePalmetto\camera.c
002cfc   0e0c     MOVLW     0xc                                                                                             
002cfe   6fed     MOVWF     0xed,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\mort\mort_code_2006_PrePalmetto\camera.c
002d00   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
002d02   6fee     MOVWF     0xee,0x1                                                                                        
002d04   d058     BRA       0x2db6         				break;                                                                       C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           		                                                                               C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           			case STATE_TWELVE:                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           				// initialize the Red Gain Control register                                  C:\mort\mort_code_2006_PrePalmetto\camera.c
002d06   0e80     MOVLW     0x80           				Write_Camera_Module_Register(RED_ADDRESS, RED_DEFAULT);                      C:\mort\mort_code_2006_PrePalmetto\camera.c
002d08   6ee6     MOVWF     0xe6,0x0                                                                                        
002d0a   0e02     MOVLW     0x2                                                                                             
002d0c   6ee6     MOVWF     0xe6,0x0                                                                                        
002d0e   d8d6     RCALL     0x2ebc                                                                                          
002d10   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002d12   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
002d14   0101     MOVLB     0x1            				state = STATE_THIRTEEN;                                                      C:\mort\mort_code_2006_PrePalmetto\camera.c
002d16   0e0d     MOVLW     0xd                                                                                             
002d18   6fed     MOVWF     0xed,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\mort\mort_code_2006_PrePalmetto\camera.c
002d1a   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
002d1c   6fee     MOVWF     0xee,0x1                                                                                        
002d1e   d04b     BRA       0x2db6         				break;                                                                       C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           		                                                                               C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           			case STATE_THIRTEEN:                                                          C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           				// initialize the Saturation Control register                                C:\mort\mort_code_2006_PrePalmetto\camera.c
002d20   0e64     MOVLW     0x64           				Write_Camera_Module_Register(SAT_ADDRESS, SAT_DEFAULT);                      C:\mort\mort_code_2006_PrePalmetto\camera.c
002d22   6ee6     MOVWF     0xe6,0x0                                                                                        
002d24   0e03     MOVLW     0x3                                                                                             
002d26   6ee6     MOVWF     0xe6,0x0                                                                                        
002d28   d8c9     RCALL     0x2ebc                                                                                          
002d2a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002d2c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
002d2e   0101     MOVLB     0x1            				state = STATE_FOURTEEN;                                                      C:\mort\mort_code_2006_PrePalmetto\camera.c
002d30   0e0e     MOVLW     0xe                                                                                             
002d32   6fed     MOVWF     0xed,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\mort\mort_code_2006_PrePalmetto\camera.c
002d34   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
002d36   6fee     MOVWF     0xee,0x1                                                                                        
002d38   d03e     BRA       0x2db6         				break;                                                                       C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           		                                                                               C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           			case STATE_FOURTEEN:                                                          C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           				// initialize the Brightness Control register                                C:\mort\mort_code_2006_PrePalmetto\camera.c
002d3a   0e01     MOVLW     0x1            				Write_Camera_Module_Register(BRT_ADDRESS, BRT_DEFAULT);                      C:\mort\mort_code_2006_PrePalmetto\camera.c
002d3c   6ee6     MOVWF     0xe6,0x0                                                                                        
002d3e   0e06     MOVLW     0x6                                                                                             
002d40   6ee6     MOVWF     0xe6,0x0                                                                                        
002d42   d8bc     RCALL     0x2ebc                                                                                          
002d44   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002d46   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
002d48   0101     MOVLB     0x1            				state = STATE_FIFTEEN;                                                       C:\mort\mort_code_2006_PrePalmetto\camera.c
002d4a   0e0f     MOVLW     0xf                                                                                             
002d4c   6fed     MOVWF     0xed,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\mort\mort_code_2006_PrePalmetto\camera.c
002d4e   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
002d50   6fee     MOVWF     0xee,0x1                                                                                        
002d52   d031     BRA       0x2db6         				break;                                                                       C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           		                                                                               C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           			case STATE_FIFTEEN:                                                           C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           				// initialize the Automatic Exposure Control register                        C:\mort\mort_code_2006_PrePalmetto\camera.c
002d54   0e01     MOVLW     0x1            				Write_Camera_Module_Register(AEC_ADDRESS, AEC_DEFAULT);                      C:\mort\mort_code_2006_PrePalmetto\camera.c
002d56   6ee6     MOVWF     0xe6,0x0                                                                                        
002d58   0e10     MOVLW     0x10                                                                                            
002d5a   6ee6     MOVWF     0xe6,0x0                                                                                        
002d5c   d8af     RCALL     0x2ebc                                                                                          
002d5e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002d60   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
002d62   0101     MOVLB     0x1            				state = STATE_SIXTEEN;                                                       C:\mort\mort_code_2006_PrePalmetto\camera.c
002d64   0e10     MOVLW     0x10                                                                                            
002d66   6fed     MOVWF     0xed,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\mort\mort_code_2006_PrePalmetto\camera.c
002d68   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
002d6a   6fee     MOVWF     0xee,0x1                                                                                        
002d6c   d024     BRA       0x2db6         				break;                                                                       C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           		                                                                               C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           			case STATE_SIXTEEN:                                                           C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           				// initialize the Noise Filter value                                         C:\mort\mort_code_2006_PrePalmetto\camera.c
002d6e   0e01     MOVLW     0x1            				Noise_Filter(NF_DEFAULT);                                                    C:\mort\mort_code_2006_PrePalmetto\camera.c
002d70   6ee6     MOVWF     0xe6,0x0                                                                                        
002d72   d88b     RCALL     0x2e8a                                                                                          
002d74   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
002d76   0101     MOVLB     0x1            				state = STATE_SEVENTEEN;                                                     C:\mort\mort_code_2006_PrePalmetto\camera.c
002d78   0e11     MOVLW     0x11                                                                                            
002d7a   6fed     MOVWF     0xed,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\mort\mort_code_2006_PrePalmetto\camera.c
002d7c   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
002d7e   6fee     MOVWF     0xee,0x1                                                                                        
002d80   d01a     BRA       0x2db6         				break;                                                                       C:\mort\mort_code_2006_PrePalmetto\camera.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           			case STATE_SEVENTEEN:                                                         C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           				// send the TC or Track Color command                                        C:\mort\mort_code_2006_PrePalmetto\camera.c
002d92   0e6e     MOVLW     0x6e           				Track_Color(R_MIN_DEFAULT, R_MAX_DEFAULT,                                    C:\mort\mort_code_2006_PrePalmetto\camera.c
002d94   6ee6     MOVWF     0xe6,0x0                                                                                        
002d96   0e5a     MOVLW     0x5a                                                                                            
002d98   6ee6     MOVWF     0xe6,0x0                                                                                        
002d8a   0e1a     MOVLW     0x1a           							G_MIN_DEFAULT, G_MAX_DEFAULT,                                             C:\mort\mort_code_2006_PrePalmetto\camera.c
002d8c   6ee6     MOVWF     0xe6,0x0                                                                                        
002d8e   0e0f     MOVLW     0xf                                                                                             
002d90   6ee6     MOVWF     0xe6,0x0                                                                                        
002d82   0e80     MOVLW     0x80           							B_MIN_DEFAULT, B_MAX_DEFAULT);                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
002d84   6ee6     MOVWF     0xe6,0x0                                                                                        
002d86   0e6a     MOVLW     0x6a                                                                                            
002d88   6ee6     MOVWF     0xe6,0x0                                                                                        
002d9a   d81b     RCALL     0x2dd2                                                                                          
002d9c   6ef5     MOVWF     0xf5,0x0                                                                                        
002d9e   0e06     MOVLW     0x6                                                                                             
002da0   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
002da2   50f5     MOVF      0xf5,0x0,0x0                                                                                    
                                           				// next state                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
002da4   0101     MOVLB     0x1            				state = STATE_EIGHTEEN;                                                      C:\mort\mort_code_2006_PrePalmetto\camera.c
002da6   0e12     MOVLW     0x12                                                                                            
002da8   6fed     MOVWF     0xed,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\mort\mort_code_2006_PrePalmetto\camera.c
002daa   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
002dac   6fee     MOVWF     0xee,0x1                                                                                        
002dae   d003     BRA       0x2db6         				break;                                                                       C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           	                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           			case STATE_EIGHTEEN:                                                          C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           				// signal that we're done                                                    C:\mort\mort_code_2006_PrePalmetto\camera.c
002db0   0e01     MOVLW     0x1            				return_value = 1;                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
002db2   6ff1     MOVWF     0xf1,0x1                                                                                        
002db4   d000     BRA       0x2db6         				break;                                                                       C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           		}                                                                              C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\camera.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           	// If we're returning from this function with a value greater                   C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           	// than zero, it means that configuration is complete or we've                  C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           	// generated an error. In either case we'll want to re-initialize               C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           	// the state machine if this function is called again.                          C:\mort\mort_code_2006_PrePalmetto\camera.c
002db6   51f1     MOVF      0xf1,0x0,0x1   	if(return_value > 0)                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
002db8   0800     SUBLW     0x0                                                                                             
002dba   e203     BC        0x2dc2                                                                                          
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\camera.c
002dbc   0102     MOVLB     0x2            		initialize_flag = 1;                                                           C:\mort\mort_code_2006_PrePalmetto\camera.c
002dbe   0e01     MOVLW     0x1                                                                                             
002dc0   6f46     MOVWF     0x46,0x1                                                                                        
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\camera.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
002dc2   0101     MOVLB     0x1            	return(return_value);	                                                          C:\mort\mort_code_2006_PrePalmetto\camera.c
002dc4   51f1     MOVF      0xf1,0x0,0x1                                                                                    
002dc6   d000     BRA       0x2dc8                                                                                          
002dc8   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
002dca   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002dcc   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
002dce   ffd9                                                                                                               
002dd0   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	FUNCTION:		Track_Color()                                                       C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	PURPOSE:		Properly formats and sends a TC (Track Color) command                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *					to the camera.		                                                           C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	CALLED FROM:	Initialize_Camera(), above.                                       C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	PARAMETERS:		Minimum and maximum intensity values for the red, green           C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *					and blue (or YCrCb) channels.                                              C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	RETURNS:		Nothing.                                                             C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	COMMENTS:		Camera must be configured to accept binary commands,                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *					not ASCII. See Raw_Mode() function.                                        C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\camera.c
002dd2   cfd9     MOVFF     0xfd9,0xfe6    void Track_Color(unsigned char Rmin, unsigned char Rmax,                         C:\mort\mort_code_2006_PrePalmetto\camera.c
002dd4   ffe6                                                                                                               
002dd6   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
002dd8   ffd9                                                                                                               
                                           				 unsigned char Gmin, unsigned char Gmax,                                     C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           				 unsigned char Bmin, unsigned char Bmax)                                     C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
002dda   0e54     MOVLW     0x54           	Write_Camera_Serial_Port('T');                                                  C:\mort\mort_code_2006_PrePalmetto\camera.c
002ddc   6ee6     MOVWF     0xe6,0x0                                                                                        
002dde   d894     RCALL     0x2f08                                                                                          
002de0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002de2   0e43     MOVLW     0x43           	Write_Camera_Serial_Port('C');                                                  C:\mort\mort_code_2006_PrePalmetto\camera.c
002de4   6ee6     MOVWF     0xe6,0x0                                                                                        
002de6   d890     RCALL     0x2f08                                                                                          
002de8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002dea   0e06     MOVLW     0x6            	Write_Camera_Serial_Port(6);                                                    C:\mort\mort_code_2006_PrePalmetto\camera.c
002dec   6ee6     MOVWF     0xe6,0x0                                                                                        
002dee   d88c     RCALL     0x2f08                                                                                          
002df0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002df2   0efe     MOVLW     0xfe           	Write_Camera_Serial_Port(Rmin);                                                 C:\mort\mort_code_2006_PrePalmetto\camera.c
002df4   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
002df6   ffe6                                                                                                               
002df8   d887     RCALL     0x2f08                                                                                          
002dfa   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002dfc   0efd     MOVLW     0xfd           	Write_Camera_Serial_Port(Rmax);                                                 C:\mort\mort_code_2006_PrePalmetto\camera.c
002dfe   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
002e00   ffe6                                                                                                               
002e02   d882     RCALL     0x2f08                                                                                          
002e04   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002e06   0efc     MOVLW     0xfc           	Write_Camera_Serial_Port(Gmin);                                                 C:\mort\mort_code_2006_PrePalmetto\camera.c
002e08   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
002e0a   ffe6                                                                                                               
002e0c   d87d     RCALL     0x2f08                                                                                          
002e0e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002e10   0efb     MOVLW     0xfb           	Write_Camera_Serial_Port(Gmax);                                                 C:\mort\mort_code_2006_PrePalmetto\camera.c
002e12   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
002e14   ffe6                                                                                                               
002e16   d878     RCALL     0x2f08                                                                                          
002e18   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002e1a   0efa     MOVLW     0xfa           	Write_Camera_Serial_Port(Bmin);                                                 C:\mort\mort_code_2006_PrePalmetto\camera.c
002e1c   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
002e1e   ffe6                                                                                                               
002e20   d873     RCALL     0x2f08                                                                                          
002e22   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002e24   0ef9     MOVLW     0xf9           	Write_Camera_Serial_Port(Bmax);                                                 C:\mort\mort_code_2006_PrePalmetto\camera.c
002e26   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
002e28   ffe6                                                                                                               
002e2a   d86e     RCALL     0x2f08                                                                                          
002e2c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002e2e   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
002e30   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
002e32   ffd9                                                                                                               
002e34   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	FUNCTION:		Camera_Idle()                                                       C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	PURPOSE:		If the camera is currently streaming data, this command              C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *					will stop the streaming and prepare it to receive commands.                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	CALLED FROM:	Initialize_Camera(), above.                                       C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	PARAMETERS:		None.                                                             C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	RETURNS:		Nothing.                                                             C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	COMMENTS:                                                                      C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           void Camera_Idle(void)                                                           C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
002e36   0e0d     MOVLW     0xd            	Write_Camera_Serial_Port('\r');                                                 C:\mort\mort_code_2006_PrePalmetto\camera.c
002e38   6ee6     MOVWF     0xe6,0x0                                                                                        
002e3a   d866     RCALL     0x2f08                                                                                          
002e3c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002e3e   0012     RETURN    0x0            }                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	FUNCTION:		Restart_Camera()                                                    C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	PURPOSE:		This command will force a camera reinitialization		                  C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	CALLED FROM:                                                                   C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	PARAMETERS:		none                                                              C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	RETURNS:		nothing                                                              C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	COMMENTS:                                                                      C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           void Restart_Camera(void)                                                        C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
002e40   0102     MOVLB     0x2            	camera_initialized = 0;                                                         C:\mort\mort_code_2006_PrePalmetto\camera.c
002e42   6b3c     CLRF      0x3c,0x1                                                                                        
002e44   0012     RETURN    0x0            }                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	FUNCTION:		Get_Camera_State()                                                  C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	PURPOSE:		                                                                     C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	CALLED FROM:                                                                   C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	PARAMETERS:		none                                                              C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	RETURNS:		0: camera is initializing.                                           C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *					1: camera is initialized and sending T (Tracking) packets.                 C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	COMMENTS:                                                                      C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           unsigned char Get_Camera_State(void)                                             C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
002e46   0102     MOVLB     0x2            	return(camera_initialized);                                                     C:\mort\mort_code_2006_PrePalmetto\camera.c
002e48   513c     MOVF      0x3c,0x0,0x1                                                                                    
002e4a   d000     BRA       0x2e4c                                                                                          
002e4c   0012     RETURN    0x0            }                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	FUNCTION:		Raw_Mode()                                                          C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	PURPOSE:		Properly formats and sends a camera RM (Raw Mode) command            C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *					to the camera. 		                                                          C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	CALLED FROM:	Initialize_Camera(), above.                                       C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	PARAMETERS:		unsigned char                                                     C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	RETURNS:		nothing                                                              C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	COMMENTS:		This body of software assumes that raw serial communication         C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *					mode five is invoked, meaning that camera input and output                 C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *					is done in the raw binary format and that ACKs and NCKs                    C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *					are not suppressed.                                                        C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\camera.c
002e4e   cfd9     MOVFF     0xfd9,0xfe6    void Raw_Mode(unsigned char mode)                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
002e50   ffe6                                                                                                               
002e52   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
002e54   ffd9                                                                                                               
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
002e56   0e52     MOVLW     0x52           	Write_Camera_Serial_Port('R');                                                  C:\mort\mort_code_2006_PrePalmetto\camera.c
002e58   6ee6     MOVWF     0xe6,0x0                                                                                        
002e5a   d856     RCALL     0x2f08                                                                                          
002e5c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002e5e   0e4d     MOVLW     0x4d           	Write_Camera_Serial_Port('M');                                                  C:\mort\mort_code_2006_PrePalmetto\camera.c
002e60   6ee6     MOVWF     0xe6,0x0                                                                                        
002e62   d852     RCALL     0x2f08                                                                                          
002e64   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002e66   0e20     MOVLW     0x20           	Write_Camera_Serial_Port(' ');                                                  C:\mort\mort_code_2006_PrePalmetto\camera.c
002e68   6ee6     MOVWF     0xe6,0x0                                                                                        
002e6a   d84e     RCALL     0x2f08                                                                                          
002e6c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002e6e   0efe     MOVLW     0xfe           	Write_Camera_Serial_Port(48 + mode);                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
002e70   50db     MOVF      0xdb,0x0,0x0                                                                                    
002e72   0f30     ADDLW     0x30                                                                                            
002e74   6ee6     MOVWF     0xe6,0x0                                                                                        
002e76   d848     RCALL     0x2f08                                                                                          
002e78   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002e7a   0e0d     MOVLW     0xd            	Write_Camera_Serial_Port('\r');                                                 C:\mort\mort_code_2006_PrePalmetto\camera.c
002e7c   6ee6     MOVWF     0xe6,0x0                                                                                        
002e7e   d844     RCALL     0x2f08                                                                                          
002e80   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002e82   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
002e84   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
002e86   ffd9                                                                                                               
002e88   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	FUNCTION:		Noise_Filter()                                                      C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	PURPOSE:		Properly formats and sends a camera NF (Noise Filter)                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *					command to the camera.                                                     C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	CALLED FROM:	Initialize_Camera(), above.                                       C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	PARAMETERS:		Noise filter threshold value.                                     C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	RETURNS:		Nothing                                                              C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	COMMENTS:		Camera must be configured to accept binary commands,                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *					not ASCII. See Raw_Mode() function.                                        C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\camera.c
002e8a   cfd9     MOVFF     0xfd9,0xfe6    void Noise_Filter(unsigned char threshold)                                       C:\mort\mort_code_2006_PrePalmetto\camera.c
002e8c   ffe6                                                                                                               
002e8e   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
002e90   ffd9                                                                                                               
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
002e92   0e4e     MOVLW     0x4e           	Write_Camera_Serial_Port('N');                                                  C:\mort\mort_code_2006_PrePalmetto\camera.c
002e94   6ee6     MOVWF     0xe6,0x0                                                                                        
002e96   d838     RCALL     0x2f08                                                                                          
002e98   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002e9a   0e46     MOVLW     0x46           	Write_Camera_Serial_Port('F');                                                  C:\mort\mort_code_2006_PrePalmetto\camera.c
002e9c   6ee6     MOVWF     0xe6,0x0                                                                                        
002e9e   d834     RCALL     0x2f08                                                                                          
002ea0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002ea2   0e01     MOVLW     0x1            	Write_Camera_Serial_Port(1);                                                    C:\mort\mort_code_2006_PrePalmetto\camera.c
002ea4   6ee6     MOVWF     0xe6,0x0                                                                                        
002ea6   d830     RCALL     0x2f08                                                                                          
002ea8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002eaa   0efe     MOVLW     0xfe           	Write_Camera_Serial_Port(threshold);                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
002eac   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
002eae   ffe6                                                                                                               
002eb0   d82b     RCALL     0x2f08                                                                                          
002eb2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002eb4   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
002eb6   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
002eb8   ffd9                                                                                                               
002eba   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	FUNCTION:		Write_Camera_Module_Register()                                      C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	PURPOSE:		Properly formats and sends a CR (Camera Register) command            C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *					to the camera.                                                             C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	CALLED FROM:	Initialize_Camera(), above.                                       C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	PARAMETERS:		Camera register number and new register value.                    C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	RETURNS:		Nothing.                                                             C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	COMMENTS:		Camera must be configured to accept binary commands,                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *					not ASCII. See Raw_Mode() function.                                        C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\camera.c
002ebc   cfd9     MOVFF     0xfd9,0xfe6    void Write_Camera_Module_Register(unsigned char reg, unsigned char value)        C:\mort\mort_code_2006_PrePalmetto\camera.c
002ebe   ffe6                                                                                                               
002ec0   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
002ec2   ffd9                                                                                                               
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
002ec4   0e43     MOVLW     0x43           	Write_Camera_Serial_Port('C');                                                  C:\mort\mort_code_2006_PrePalmetto\camera.c
002ec6   6ee6     MOVWF     0xe6,0x0                                                                                        
002ec8   d81f     RCALL     0x2f08                                                                                          
002eca   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002ecc   0e52     MOVLW     0x52           	Write_Camera_Serial_Port('R');                                                  C:\mort\mort_code_2006_PrePalmetto\camera.c
002ece   6ee6     MOVWF     0xe6,0x0                                                                                        
002ed0   d81b     RCALL     0x2f08                                                                                          
002ed2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002ed4   0e02     MOVLW     0x2            	Write_Camera_Serial_Port(2);                                                    C:\mort\mort_code_2006_PrePalmetto\camera.c
002ed6   6ee6     MOVWF     0xe6,0x0                                                                                        
002ed8   d817     RCALL     0x2f08                                                                                          
002eda   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002edc   0efe     MOVLW     0xfe           	Write_Camera_Serial_Port(reg);                                                  C:\mort\mort_code_2006_PrePalmetto\camera.c
002ede   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
002ee0   ffe6                                                                                                               
002ee2   d812     RCALL     0x2f08                                                                                          
002ee4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002ee6   0efd     MOVLW     0xfd           	Write_Camera_Serial_Port(value);                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
002ee8   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
002eea   ffe6                                                                                                               
002eec   d80d     RCALL     0x2f08                                                                                          
002eee   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002ef0   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
002ef2   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
002ef4   ffd9                                                                                                               
002ef6   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	FUNCTION:		Camera_Serial_Port_Byte_Count()                                     C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	PURPOSE:		Returns the number of bytes in the camera serial port's              C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *					received data queue.		                                                     C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	CALLED FROM:                                                                   C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	PARAMETERS:		None.                                                             C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	RETURNS:		Number of bytes in the queue.                                        C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	COMMENTS:		This code assumes that the camera serial port has been              C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *					properly set in camera.h.		                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           unsigned char Camera_Serial_Port_Byte_Count(void)                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           #ifdef CAMERA_SERIAL_PORT_1                                                      C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           	return(Serial_Port_One_Byte_Count());                                           C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           #else                                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
002ef8   ecda     CALL      0x45b4,0x0     	return(Serial_Port_Two_Byte_Count());                                           C:\mort\mort_code_2006_PrePalmetto\camera.c
002efa   f022                                                                                                               
002efc   d000     BRA       0x2efe                                                                                          
                                           #endif                                                                           C:\mort\mort_code_2006_PrePalmetto\camera.c
002efe   0012     RETURN    0x0            }                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	FUNCTION:		Read_Camera_Serial_Port()                                           C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	PURPOSE:		Reads a byte of data from the camera serial port.		                  C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	CALLED FROM:                                                                   C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	PARAMETERS:		None.                                                             C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	RETURNS:		If data is present in the camera serial port's received              C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *					data queue, the next byte in the queue is returned. If                     C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *					data is not present in the camera serial port's received                   C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *					data queue, zero is returned.                                              C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	COMMENTS:		Camera_Serial_Port_Byte_Count() should be called before             C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *					calling this function to make sure data is present.                        C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *					This code assumes that the camera serial port has been                     C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *					properly set in camera.h.                                                  C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           unsigned char Read_Camera_Serial_Port(void)                                      C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           #ifdef CAMERA_SERIAL_PORT_1                                                      C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           	return(Read_Serial_Port_One());                                                 C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           #else                                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
002f00   ec10     CALL      0x4620,0x0     	return(Read_Serial_Port_Two());                                                 C:\mort\mort_code_2006_PrePalmetto\camera.c
002f02   f023                                                                                                               
002f04   d000     BRA       0x2f06                                                                                          
                                           #endif                                                                           C:\mort\mort_code_2006_PrePalmetto\camera.c
002f06   0012     RETURN    0x0            }                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	FUNCTION:		Write_Camera_Serial_Port()                                          C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	PURPOSE:		Sends a byte of data to the camera serial port.                      C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	CALLED FROM:                                                                   C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	PARAMETERS:		Byte of data to send to the camera serial port.                   C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	RETURNS:		nothing                                                              C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	COMMENTS:		This code assumes that the camera serial port has been              C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *					properly set in camera.h.                                                  C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\camera.c
002f08   cfd9     MOVFF     0xfd9,0xfe6    void Write_Camera_Serial_Port(unsigned char value)                               C:\mort\mort_code_2006_PrePalmetto\camera.c
002f0a   ffe6                                                                                                               
002f0c   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
002f0e   ffd9                                                                                                               
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           #ifdef CAMERA_SERIAL_PORT_1                                                      C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           	Write_Serial_Port_One(value);                                                   C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           #else                                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
002f10   0efe     MOVLW     0xfe           	Write_Serial_Port_Two(value);                                                   C:\mort\mort_code_2006_PrePalmetto\camera.c
002f12   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
002f14   ffe6                                                                                                               
002f16   ec57     CALL      0x46ae,0x0                                                                                      
002f18   f023                                                                                                               
002f1a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           #endif                                                                           C:\mort\mort_code_2006_PrePalmetto\camera.c
002f1c   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
002f1e   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
002f20   ffd9                                                                                                               
002f22   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	FUNCTION:		Terminal_Serial_Port_Byte_Count()                                   C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	PURPOSE:		Returns the number of bytes in the terminal serial port's            C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *					received data queue.                                                       C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	CALLED FROM:                                                                   C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	PARAMETERS:		None.                                                             C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	RETURNS:		Number of bytes in the queue.                                        C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	COMMENTS:		This code assumes that the camera serial port has been              C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *					properly set in camera.h.                                                  C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           unsigned char Terminal_Serial_Port_Byte_Count(void)                              C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           #ifdef TERMINAL_SERIAL_PORT_1                                                    C:\mort\mort_code_2006_PrePalmetto\camera.c
002f24   ecca     CALL      0x4594,0x0     	return(Serial_Port_One_Byte_Count());                                           C:\mort\mort_code_2006_PrePalmetto\camera.c
002f26   f022                                                                                                               
002f28   d000     BRA       0x2f2a                                                                                          
                                           #else                                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           	return(Serial_Port_Two_Byte_Count());                                           C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           #endif                                                                           C:\mort\mort_code_2006_PrePalmetto\camera.c
002f2a   0012     RETURN    0x0            }                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	FUNCTION:		Read_Terminal_Serial_Port()                                         C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	PURPOSE:		Reads a byte of data from the terminal serial port.                  C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	CALLED FROM:                                                                   C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	PARAMETERS:		none                                                              C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	RETURNS:		If data is present in the terminal serial port's received            C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *					data queue, the next byte in the queue is returned. If                     C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *					data is not present in the terminal serial port's received                 C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *					data queue, zero is returned.                                              C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	COMMENTS:		Terminal_Serial_Port_Byte_Count() should be called before           C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *					calling this function to make sure data is present.                        C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *					This code assumes that the camera serial port has been                     C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *					properly set in camera.h.                                                  C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           unsigned char Read_Terminal_Serial_Port(void)                                    C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           #ifdef TERMINAL_SERIAL_PORT_1                                                    C:\mort\mort_code_2006_PrePalmetto\camera.c
002f2c   ecea     CALL      0x45d4,0x0     	return(Read_Serial_Port_One());                                                 C:\mort\mort_code_2006_PrePalmetto\camera.c
002f2e   f022                                                                                                               
002f30   d000     BRA       0x2f32                                                                                          
                                           #else                                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           	return(Read_Serial_Port_Two());                                                 C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           #endif                                                                           C:\mort\mort_code_2006_PrePalmetto\camera.c
002f32   0012     RETURN    0x0            }                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	FUNCTION:		Write_Terminal_Serial_Port()                                        C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	PURPOSE:		Sends a byte of data to the terminal serial port.		                  C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	CALLED FROM:                                                                   C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	PARAMETERS:		Byte of data to send to the terminal serial port.                 C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	RETURNS:		Nothing.                                                             C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *	COMMENTS:		This code assumes that the camera serial port has been              C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *					properly set in camera.h.                                                  C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\camera.c
002f34   cfd9     MOVFF     0xfd9,0xfe6    void Write_Terminal_Serial_Port(unsigned char value)                             C:\mort\mort_code_2006_PrePalmetto\camera.c
002f36   ffe6                                                                                                               
002f38   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
002f3a   ffd9                                                                                                               
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           #ifdef TERMINAL_SERIAL_PORT_1                                                    C:\mort\mort_code_2006_PrePalmetto\camera.c
002f3c   0efe     MOVLW     0xfe           	Write_Serial_Port_One(value);                                                   C:\mort\mort_code_2006_PrePalmetto\camera.c
002f3e   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
002f40   ffe6                                                                                                               
002f42   ec36     CALL      0x466c,0x0                                                                                      
002f44   f023                                                                                                               
002f46   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           #else                                                                            C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           	Write_Serial_Port_Two(value);                                                   C:\mort\mort_code_2006_PrePalmetto\camera.c
                                           #endif                                                                           C:\mort\mort_code_2006_PrePalmetto\camera.c
002f48   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mort\mort_code_2006_PrePalmetto\camera.c
002f4a   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
002f4c   ffd9                                                                                                               
002f4e   0012     RETURN    0x0                                                                                             
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                           * FILE NAME: ifi_startup.c                                                       C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                           * DESCRIPTION:                                                                   C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                           *  This file contains important startup code.                                    C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                           * USAGE:                                                                         C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                           *  This file should not be modified at all by the user.                          C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                           *  DO NOT MODIFY THIS FILE!                                                      C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                           #include "ifi_default.h"                                                         C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                           extern void Clear_Memory (void);                                                 C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                           extern void main (void);                                                         C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                           void _entry (void);     /* prototype for the startup function */                 C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                           void _startup (void);                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                           void _do_cinit (void);  /* prototype for the initialized data setup */           C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                           extern volatile near unsigned long short TBLPTR;                                 C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                           extern near unsigned FSR0;                                                       C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                           extern near char FPFLAGS;                                                        C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                           #define RND 6                                                                    C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                           #pragma code _entry_scn=RESET_VECTOR                                             C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                           void _entry (void)                                                               C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
000800   ef33     GOTO      0x5666         _asm goto _startup _endasm                                                       C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
000802   f02b                                                                                                               
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
000804   0012     RETURN    0x0            }                                                                                C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                           #pragma code _startup_scn                                                        C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                           void _startup (void)                                                             C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                             _asm                                                                           C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                               /* Initialize the stack pointer */                                           C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
005666   ee1e     LFSR      0x1,0xe00          lfsr 1, _stack lfsr 2, _stack clrf TBLPTRU, 0 /* 1st silicon doesn't do this on POR */ C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
005668   f000                                                                                                               
00566a   ee2e     LFSR      0x2,0xe00                                                                                       
00566c   f000                                                                                                               
00566e   6af8     CLRF      0xf8,0x0                                                                                        
005670   9c3e     BCF       0x3e,0x6,0x0       bcf  FPFLAGS,RND,0 /* Initialize rounding flag for floating point libs */    C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                               /* initialize the flash memory access configuration. this is harmless */     C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                               /* for non-flash devices, so we do it on all parts. */                       C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
005672   8ea6     BSF       0xa6,0x7,0x0       bsf 0xa6, 7, 0                                                               C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
005674   9ca6     BCF       0xa6,0x6,0x0       bcf 0xa6, 6, 0                                                               C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                             _endasm                                                                        C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                           loop:                                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
005676   eccd     CALL      0x419a,0x0      	Clear_Memory();                                                                C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
005678   f020                                                                                                               
00567a   ecbf     CALL      0x517e,0x0       _do_cinit ();                                                                  C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
00567c   f028                                                                                                               
                                             /* Call the user's main routine */                                             C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
00567e   ec0d     CALL      0x561a,0x0       main ();                                                                       C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
005680   f02b                                                                                                               
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
005682   d7f9     BRA       0x5676           goto loop;                                                                     C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
005684   0012     RETURN    0x0            }                               /* end _startup() */                             C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                           /* MPLAB-C18 initialized data memory support */                                  C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                           /* The linker will populate the _cinit table */                                  C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                           extern far rom struct                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                             unsigned short num_init;                                                       C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                             struct _init_entry                                                             C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                             {                                                                              C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                               unsigned long from;                                                          C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                               unsigned long to;                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                               unsigned long size;                                                          C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                             }                                                                              C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                             entries[];                                                                     C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                           }                                                                                C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                           _cinit;                                                                          C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                           #pragma code _cinit_scn                                                          C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                           void                                                                             C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                           _do_cinit (void)                                                                 C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                             /* we'll make the assumption in the following code that these statics          C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                              * will be allocated into the same bank.                                       C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                              */                                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                             static short long prom;                                                        C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                             static unsigned short curr_byte;                                               C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                             static unsigned short curr_entry;                                              C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                             static short long data_ptr;                                                    C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                             /* Initialized data... */                                                      C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
00517e   0e1e     MOVLW     0x1e             TBLPTR = (short long)&_cinit;                                                  C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
005180   6ef6     MOVWF     0xf6,0x0                                                                                        
005182   0e08     MOVLW     0x8                                                                                             
005184   6ef7     MOVWF     0xf7,0x0                                                                                        
005186   0e00     MOVLW     0x0                                                                                             
005188   6ef8     MOVWF     0xf8,0x0                                                                                        
                                             _asm                                                                           C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
00518a   0102     MOVLB     0x2                movlb data_ptr                                                               C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
00518c   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
00518e   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
005190   6f4c     MOVWF     0x4c,0x1           movwf curr_entry, 1                                                          C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
005192   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
005194   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
005196   6f4d     MOVWF     0x4d,0x1           movwf curr_entry+1, 1                                                        C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                             _endasm                                                                        C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                               test:                                                                        C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                             _asm                                                                           C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
005198   e103     BNZ       0x51a0              bnz 3                                                                       C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
00519a   674c     TSTFSZ    0x4c,0x1           tstfsz curr_entry, 1                                                         C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
00519c   d001     BRA       0x51a0             bra 1                                                                        C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                             _endasm                                                                        C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
00519e   d03d     BRA       0x521a           goto done;                                                                     C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                               /* Count down so we only have to look up the data in _cinit                  C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                                * once.                                                                     C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                                *                                                                           C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                                * At this point we know that TBLPTR points to the top of the current        C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                                * entry in _cinit, so we can just start reading the from, to, and           C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                                * size values.                                                              C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                                */                                                                          C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                             _asm                                                                           C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                             /* read the source address */                                                  C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
0051a0   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
0051a2   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
0051a4   6f47     MOVWF     0x47,0x1           movwf prom, 1                                                                C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
0051a6   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
0051a8   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
0051aa   6f48     MOVWF     0x48,0x1           movwf prom+1, 1                                                              C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
0051ac   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
0051ae   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
0051b0   6f49     MOVWF     0x49,0x1           movwf prom+2, 1                                                              C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                               /* skip a byte since it's stored as a 32bit int */                           C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
0051b2   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                               /* read the destination address directly into FSR0 */                        C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
0051b4   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
0051b6   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
0051b8   6ee9     MOVWF     0xe9,0x0           movwf FSR0L, 0                                                               C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
0051ba   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
0051bc   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
0051be   6eea     MOVWF     0xea,0x0           movwf FSR0H, 0                                                               C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                               /* skip two bytes since it's stored as a 32bit int */                        C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
0051c0   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
0051c2   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                               /* read the destination address directly into FSR0 */                        C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
0051c4   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
0051c6   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
0051c8   6f4a     MOVWF     0x4a,0x1           movwf curr_byte, 1                                                           C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
0051ca   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
0051cc   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
0051ce   6f4b     MOVWF     0x4b,0x1           movwf curr_byte+1, 1                                                         C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                               /* skip two bytes since it's stored as a 32bit int */                        C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
0051d0   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
0051d2   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                             _endasm                                                                        C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                             /* the table pointer now points to the next entry. Save it                     C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                              * off since we'll be using the table pointer to do the copying                C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                              * for the entry.                                                              C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                              */                                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
0051d4   cff6     MOVFF     0xff6,0x24e      data_ptr = TBLPTR;                                                             C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
0051d6   f24e                                                                                                               
0051d8   cff7     MOVFF     0xff7,0x24f                                                                                     
0051da   f24f                                                                                                               
0051dc   cff8     MOVFF     0xff8,0x250                                                                                     
0051de   f250                                                                                                               
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                             /* now assign the source address to the table pointer */                       C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
0051e0   c247     MOVFF     0x247,0xff6      TBLPTR = prom;                                                                 C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
0051e2   fff6                                                                                                               
0051e4   c248     MOVFF     0x248,0xff7                                                                                     
0051e6   fff7                                                                                                               
0051e8   c249     MOVFF     0x249,0xff8                                                                                     
0051ea   fff8                                                                                                               
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                             /* do the copy loop */                                                         C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                             _asm                                                                           C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                                     /* determine if we have any more bytes to copy */                      C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
0051ec   0102     MOVLB     0x2                movlb curr_byte                                                              C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
0051ee   534a     MOVF      0x4a,0x1,0x1       movf  curr_byte, 1, 1                                                        C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                           copy_loop:                                                                       C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
0051f0   e102     BNZ       0x51f6             bnz 2 /* copy_one_byte */                                                    C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
0051f2   534b     MOVF      0x4b,0x1,0x1       movf  curr_byte + 1, 1, 1                                                    C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
0051f4   e007     BZ        0x5204             bz 7  /* done_copying */                                                     C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                           copy_one_byte:                                                                   C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
0051f6   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
0051f8   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
0051fa   6eee     MOVWF     0xee,0x0           movwf POSTINC0, 0                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                               /* decrement byte counter */                                                 C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
0051fc   074a     DECF      0x4a,0x1,0x1       decf  curr_byte, 1, 1                                                        C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
0051fe   e2f8     BC        0x51f0             bc -8   /* copy_loop */                                                      C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
005200   074b     DECF      0x4b,0x1,0x1       decf  curr_byte + 1, 1, 1                                                    C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
005202   d7f9     BRA       0x51f6             bra -7  /* copy_one_byte */                                                  C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                           done_copying:                                                                    C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                             _endasm                                                                        C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                                 /* restore the table pointer for the next entry */                         C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
005204   c24e     MOVFF     0x24e,0xff6      TBLPTR = data_ptr;                                                             C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
005206   fff6                                                                                                               
005208   c24f     MOVFF     0x24f,0xff7                                                                                     
00520a   fff7                                                                                                               
00520c   c250     MOVFF     0x250,0xff8                                                                                     
00520e   fff8                                                                                                               
                                             /* next entry... */                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
005210   0102     MOVLB     0x2              curr_entry--;                                                                  C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
005212   074c     DECF      0x4c,0x1,0x1                                                                                    
005214   0e00     MOVLW     0x0                                                                                             
005216   5b4d     SUBWFB    0x4d,0x1,0x1                                                                                    
005218   d7bf     BRA       0x5198           goto test;                                                                     C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                           done:                                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                           ;                                                                                C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
00521a   0012     RETURN    0x0            }                                                                                C:\mort\mort_code_2006_PrePalmetto\ifi_startup.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           * FILE NAME: ifi_utilities.c                                                     C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           * DESCRIPTION:                                                                   C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           *  This file contains some useful functions that you can call in your program.   C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           * USAGE:                                                                         C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           *  The user should NOT modify this file, so that if a new version is released    C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           *  by Innovation First then it can be easily replaced.                           C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           *  The user should add their own functions to either user_routines.c or another  C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           *  custom file.                                                                  C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           #include <usart.h>                                                               C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           #include <spi.h>                                                                 C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           #include <adc.h>                                                                 C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           #include <capture.h>                                                             C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           #include <timers.h>                                                              C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           #include <string.h>                                                              C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           #include <pwm.h>                                                                 C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           #include "delays.h"       /*defined locally*/                                    C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           #include "ifi_aliases.h"                                                         C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           #include "ifi_default.h"                                                         C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           #include "ifi_utilities.h"                                                       C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           #include "user_routines.h"                                                       C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           int             ifi_packet_num1 = 0;                                             C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           int             ifi_last_packet1 = 0;                                            C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           unsigned char   *ptr;                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           unsigned char   ifi_count;                                                       C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           unsigned char   ifi_analog_channels;                                             C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           * FUNCTION NAME: Wait4TXEmpty                                                    C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           * PURPOSE:       Wait for serial transmit buffer to be empty.                    C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           * CALLED FROM:   anywhere                                                        C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           * ARGUMENTS:     none                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           * RETURNS:       void                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           /* Used when transmitting data serially.  It waits for each byte to finish.   */ C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           void Wait4TXEmpty(void)                                                          C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           #ifndef _SIMULATOR                                                               C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004a82   b89e     BTFSC     0x9e,0x4,0x0     while (!TXINTF)                                                                C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004a84   d002     BRA       0x4a8a                                                                                          
004a88   d7fc     BRA       0x4a82                                                                                          
                                             {                                                                              C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004a86   d7fd     BRA       0x4a82             continue;                                                                    C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                             }                                                                              C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           #endif                                                                           C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004a8a   0012     RETURN    0x0            }                                                                                C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           * FUNCTION NAME: PrintByte                                                       C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           * PURPOSE:       A simple way to print a byte of data to the serial port.        C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           * CALLED FROM:   anywhere                                                        C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           * ARGUMENTS:     none                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           *     Argument       Type             IO   Description                           C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           *     --------       -------------    --   -----------                           C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           *     odata          unsigned char    I    byte of data to be transmitted        C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           * RETURNS:       void                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004a8c   cfd9     MOVFF     0xfd9,0xfe6    void PrintByte(unsigned char odata)                                              C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004a8e   ffe6                                                                                                               
004a90   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004a92   ffd9                                                                                                               
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004a94   0efe     MOVLW     0xfe             Hex_output((unsigned char) odata);                                             C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004a96   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
004a98   ffe6                                                                                                               
004a9a   ecdf     CALL      0x41be,0x0                                                                                      
004a9c   f020                                                                                                               
004a9e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004aa0   0e0d     MOVLW     0xd              TXREG = 13;  /* a carriage return */                                           C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004aa2   6ead     MOVWF     0xad,0x0                                                                                        
004aa4   dfee     RCALL     0x4a82           Wait4TXEmpty();                                                                C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004aa6   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004aa8   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004aaa   ffd9                                                                                                               
004aac   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           * FUNCTION NAME: PrintWord                                                       C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           * PURPOSE:       A simple way to print a word of data to the serial port.        C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           * CALLED FROM:   anywhere                                                        C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           * ARGUMENTS:     none                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           *     Argument       Type             IO   Description                           C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           *     --------       -------------    --   -----------                           C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           *     odata          unsigned int     I    word of data to be transmitted        C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           * RETURNS:       void                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004aae   cfd9     MOVFF     0xfd9,0xfe6    void PrintWord(unsigned int odata)                                               C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004ab0   ffe6                                                                                                               
004ab2   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004ab4   ffd9                                                                                                               
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004ab6   0102     MOVLB     0x2              ptr = (unsigned char *) &odata;                                                C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004ab8   50d9     MOVF      0xd9,0x0,0x0                                                                                    
004aba   0ffd     ADDLW     0xfd                                                                                            
004abc   6f57     MOVWF     0x57,0x1                                                                                        
004abe   0eff     MOVLW     0xff                                                                                            
004ac0   20da     ADDWFC    0xda,0x0,0x0                                                                                    
004ac2   6f58     MOVWF     0x58,0x1                                                                                        
004ac4   0e01     MOVLW     0x1              Hex_output(ptr[1]);                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004ac6   6aea     CLRF      0xea,0x0                                                                                        
004ac8   2557     ADDWF     0x57,0x0,0x1                                                                                    
004aca   6ee9     MOVWF     0xe9,0x0                                                                                        
004acc   5158     MOVF      0x58,0x0,0x1                                                                                    
004ace   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
004ad0   50ef     MOVF      0xef,0x0,0x0                                                                                    
004ad2   6ee6     MOVWF     0xe6,0x0                                                                                        
004ad4   ecdf     CALL      0x41be,0x0                                                                                      
004ad6   f020                                                                                                               
004ad8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004ada   c257     MOVFF     0x257,0xfe9      Hex_output(ptr[0]);                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004adc   ffe9                                                                                                               
004ade   c258     MOVFF     0x258,0xfea                                                                                     
004ae0   ffea                                                                                                               
004ae2   50ef     MOVF      0xef,0x0,0x0                                                                                    
004ae4   6ee6     MOVWF     0xe6,0x0                                                                                        
004ae6   ecdf     CALL      0x41be,0x0                                                                                      
004ae8   f020                                                                                                               
004aea   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004aec   0e0d     MOVLW     0xd              TXREG = 13;  /* add a carriage return */                                       C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004aee   6ead     MOVWF     0xad,0x0                                                                                        
004af0   dfc8     RCALL     0x4a82           Wait4TXEmpty();                                                                C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004af2   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004af4   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004af6   ffd9                                                                                                               
004af8   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           * FUNCTION NAME: DisplayBufr                                                     C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           * PURPOSE:       Print the entire transmit or receive buffer over the serial     C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           *                port for viewing in a terminal program on your PC.              C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           * CALLED FROM:   anywhere                                                        C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           * ARGUMENTS:                                                                     C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           *     Argument       Type        IO   Description                                C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           *     --------       --------    --   -----------                                C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           *     *bufr          pointer     I    points to beginning of buffer to transmit  C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           * RETURNS:       void                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004afa   cfd9     MOVFF     0xfd9,0xfe6    void DisplayBufr(unsigned char *bufr)                                            C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004afc   ffe6                                                                                                               
004afe   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004b00   ffd9                                                                                                               
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004b02   0102     MOVLB     0x2              for (ifi_count=0;ifi_count<26;ifi_count++)                                     C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004b04   6b59     CLRF      0x59,0x1                                                                                        
004b06   0e1a     MOVLW     0x1a                                                                                            
004b08   5d59     SUBWF     0x59,0x0,0x1                                                                                    
004b0a   e211     BC        0x4b2e                                                                                          
004b28   0102     MOVLB     0x2                                                                                             
004b2a   2b59     INCF      0x59,0x1,0x1                                                                                    
004b2c   d7ec     BRA       0x4b06                                                                                          
                                             {                                                                              C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004b0c   0efd     MOVLW     0xfd               Hex_output((unsigned char) *bufr++);                                         C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004b0e   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
004b10   ffe9                                                                                                               
004b12   2adb     INCF      0xdb,0x1,0x0                                                                                    
004b14   0efe     MOVLW     0xfe                                                                                            
004b16   cfdb     MOVFF     0xfdb,0xfea                                                                                     
004b18   ffea                                                                                                               
004b1a   e301     BNC       0x4b1e                                                                                          
004b1c   2adb     INCF      0xdb,0x1,0x0                                                                                    
004b1e   50ef     MOVF      0xef,0x0,0x0                                                                                    
004b20   6ee6     MOVWF     0xe6,0x0                                                                                        
004b22   ecdf     CALL      0x41be,0x0                                                                                      
004b24   f020                                                                                                               
004b26   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                             }                                                                              C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004b2e   0e0d     MOVLW     0xd              TXREG = 13;  /* add a carriage return */                                       C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004b30   6ead     MOVWF     0xad,0x0                                                                                        
004b32   dfa7     RCALL     0x4a82           Wait4TXEmpty();                                                                C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004b34   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004b36   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004b38   ffd9                                                                                                               
004b3a   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           * FUNCTION NAME: PacketNum_Check                                                 C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           * PURPOSE:       Print the packet number over the serial port if a packet gets   C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           *                dropped.  Handy for seeing if you are dropping data.            C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           * CALLED FROM:   anywhere                                                        C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           * ARGUMENTS:     none                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           * RETURNS:       void                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           void PacketNum_Check(void)                                                       C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                             /*    to print only the 10th (packet num) byte*/                               C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004b3c   0102     MOVLB     0x2              ptr = (unsigned char *) &rxdata.packet_num;                                    C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004b3e   0ea0     MOVLW     0xa0                                                                                            
004b40   6f57     MOVWF     0x57,0x1                                                                                        
004b42   0e01     MOVLW     0x1                                                                                             
004b44   6f58     MOVWF     0x58,0x1                                                                                        
004b46   0101     MOVLB     0x1              ifi_packet_num1 = (int) rxdata.packet_num;                                     C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004b48   51a0     MOVF      0xa0,0x0,0x1                                                                                    
004b4a   0102     MOVLB     0x2                                                                                             
004b4c   6f5b     MOVWF     0x5b,0x1                                                                                        
004b4e   6b5c     CLRF      0x5c,0x1                                                                                        
004b50   515d     MOVF      0x5d,0x0,0x1     if (ifi_packet_num1 != ifi_last_packet1)                                       C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004b52   195b     XORWF     0x5b,0x0,0x1                                                                                    
004b54   e102     BNZ       0x4b5a                                                                                          
004b56   515e     MOVF      0x5e,0x0,0x1                                                                                    
004b58   195c     XORWF     0x5c,0x0,0x1                                                                                    
004b5a   e018     BZ        0x4b8c                                                                                          
                                             {                                                                              C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004b5c   0101     MOVLB     0x1                if (statusflag.FIRST_TIME == 1)                                              C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004b5e   a5c0     BTFSS     0xc0,0x2,0x1                                                                                    
004b60   d002     BRA       0x4b66                                                                                          
                                               {                                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004b62   95c0     BCF       0xc0,0x2,0x1         statusflag.FIRST_TIME = 0;                                                 C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                               }                                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004b64   d00f     BRA       0x4b84             else                                                                         C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                               {                                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004b66   c25d     MOVFF     0x25d,0xfe6          Hex_output((unsigned char) ifi_last_packet1);                              C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004b68   ffe6                                                                                                               
004b6a   ecdf     CALL      0x41be,0x0                                                                                      
004b6c   f020                                                                                                               
004b6e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004b70   c25b     MOVFF     0x25b,0xfe6          Hex_output((unsigned char) ifi_packet_num1);                               C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004b72   ffe6                                                                                                               
004b74   ecdf     CALL      0x41be,0x0                                                                                      
004b76   f020                                                                                                               
004b78   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004b7a   0e0d     MOVLW     0xd                  TXREG = 13;                                                                C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004b7c   6ead     MOVWF     0xad,0x0                                                                                        
004b7e   df81     RCALL     0x4a82               Wait4TXEmpty();                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004b80   0101     MOVLB     0x1                  statusflag.FIRST_TIME = 0;                                                 C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004b82   95c0     BCF       0xc0,0x2,0x1                                                                                    
                                               }                                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004b84   c25b     MOVFF     0x25b,0x25d        ifi_last_packet1 = ifi_packet_num1;                                          C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004b86   f25d                                                                                                               
004b88   c25c     MOVFF     0x25c,0x25e                                                                                     
004b8a   f25e                                                                                                               
                                             }/*   if (ifi_packet_num1 != ifi_last_packet1)*/                               C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004b8c   0102     MOVLB     0x2              ifi_last_packet1++;                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004b8e   2b5d     INCF      0x5d,0x1,0x1                                                                                    
004b90   0e00     MOVLW     0x0                                                                                             
004b92   235e     ADDWFC    0x5e,0x1,0x1                                                                                    
004b94   355e     RLCF      0x5e,0x0,0x1     if (ifi_last_packet1 > 255)                                                    C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004b96   e204     BC        0x4ba0                                                                                          
004b98   515d     MOVF      0x5d,0x0,0x1                                                                                    
004b9a   08ff     SUBLW     0xff                                                                                            
004b9c   0e00     MOVLW     0x0                                                                                             
004b9e   555e     SUBFWB    0x5e,0x0,0x1                                                                                    
004ba0   e202     BC        0x4ba6                                                                                          
                                             {                                                                              C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004ba2   6b5d     CLRF      0x5d,0x1           ifi_last_packet1 = 0;                                                        C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004ba4   6b5e     CLRF      0x5e,0x1                                                                                        
                                             }                                                                              C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004ba6   0012     RETURN    0x0            }                                                                                C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           * FUNCTION NAME: Initialize_Serial_Comms                                         C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           * PURPOSE:       Opens the serial port 1 for communicating with your PC at       C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           *                115k baud, 8 bits, no parity, one stop bit, and no flow control. C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           * CALLED FROM:   user_routines.c                                                 C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           * ARGUMENTS:     none                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           * RETURNS:       void                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           void Initialize_Serial_Comms (void)                                              C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                             OpenUSART(USART_TX_INT_OFF &                                                   C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                               USART_RX_INT_OFF &                                                           C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                               USART_ASYNCH_MODE &                                                          C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                               USART_EIGHT_BIT &                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                               USART_CONT_RX &                                                              C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004bac   0e3c     MOVLW     0x3c               USART_BRGH_HIGH,                                                             C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004bae   6ee6     MOVWF     0xe6,0x0                                                                                        
004ba8   0e15     MOVLW     0x15               baud_115);                                                                   C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004baa   6ee6     MOVWF     0xe6,0x0                                                                                        
004bb0   ec6c     CALL      0x54d8,0x0                                                                                      
004bb2   f02a                                                                                                               
004bb4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004bb6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004bb8   0e32     MOVLW     0x32             Delay1KTCYx( 50 ); /* Settling time */                                         C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004bba   6ee6     MOVWF     0xe6,0x0                                                                                        
004bbc   ec43     CALL      0x5686,0x0                                                                                      
004bbe   f02b                                                                                                               
004bc0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004bc2   0012     RETURN    0x0            }                                                                                C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           * FUNCTION NAME: Set_Number_of_Analog_Channels                                   C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           * PURPOSE:       Sets the variable used in Get_Analog_Value routine (below)      C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           *                to the number of analog channels desired by the user.           C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           * CALLED FROM:   user_routines.c initialization, typically                       C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           * ARGUMENTS:                                                                     C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           *      Argument            Type    IO   Description                              C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           *     -----------          -----   --   -----------                              C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           *     number_of_channels   alias   I    choose alias from ifi_aliases.h          C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           * RETURNS:       void                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004bc4   cfd9     MOVFF     0xfd9,0xfe6    void Set_Number_of_Analog_Channels (unsigned char number_of_channels)            C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004bc6   ffe6                                                                                                               
004bc8   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004bca   ffd9                                                                                                               
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004bcc   0efe     MOVLW     0xfe             ifi_analog_channels = number_of_channels;                                      C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004bce   cfdb     MOVFF     0xfdb,0x25a                                                                                     
004bd0   f25a                                                                                                               
004bd2   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004bd4   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004bd6   ffd9                                                                                                               
004bd8   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           * FUNCTION NAME: Get_Analog_Value                                                C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           * PURPOSE:       Reads the analog voltage on an A/D port and returns the         C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           *                10-bit value read stored in an unsigned int.                    C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           * CALLED FROM:   user_routines.c, typically                                      C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           * ARGUMENTS:                                                                     C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           *      Argument         Type        IO   Description                             C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           *     -----------   -------------   --   -----------                             C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           *     ADC_channel       alias       I    alias found in ifi_aliases.h            C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           * RETURNS:       unsigned int                                                    C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004bda   cfd9     MOVFF     0xfd9,0xfe6    unsigned int Get_Analog_Value (unsigned char ADC_channel)                        C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004bdc   ffe6                                                                                                               
004bde   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004be0   ffd9                                                                                                               
004be2   0e02     MOVLW     0x2                                                                                             
004be4   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                             unsigned int result;                                                           C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           #if defined(__18F8722)                                                           C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004bf6   0ef1     MOVLW     0xf1             OpenADC( ADC_FOSC_RC & ADC_RIGHT_JUST & ADC_0_TAD,                             C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004bf8   6ee6     MOVWF     0xe6,0x0                                                                                        
004be6   0e0f     MOVLW     0xf                       ADC_channel & ADC_INT_OFF & ADC_VREFPLUS_VDD & ADC_VREFMINUS_VSS,15); C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004be8   6ee6     MOVWF     0xe6,0x0                                                                                        
004bea   0efe     MOVLW     0xfe                                                                                            
004bec   50db     MOVF      0xdb,0x0,0x0                                                                                    
004bee   0b7f     ANDLW     0x7f                                                                                            
004bf0   0bfe     ANDLW     0xfe                                                                                            
004bf2   0bfd     ANDLW     0xfd                                                                                            
004bf4   6ee6     MOVWF     0xe6,0x0                                                                                        
004bfa   ecd2     CALL      0x53a4,0x0                                                                                      
004bfc   f029                                                                                                               
004bfe   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004c00   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004c02   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           #else                                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                             OpenADC( ADC_FOSC_RC & ADC_RIGHT_JUST & ifi_analog_channels,                   C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                                     ADC_channel & ADC_INT_OFF & ADC_VREFPLUS_VDD & ADC_VREFMINUS_VSS );    C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           #endif                                                                           C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004c04   0e0a     MOVLW     0xa              Delay10TCYx( 10 );                                                             C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004c06   6ee6     MOVWF     0xe6,0x0                                                                                        
004c08   ec61     CALL      0x56c2,0x0                                                                                      
004c0a   f02b                                                                                                               
004c0c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004c0e   ec80     CALL      0x5700,0x0       ConvertADC();                                                                  C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004c10   f02b                                                                                                               
004c12   ec07     CALL      0x80e,0x0        while( BusyADC() );                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004c14   f004                                                                                                               
004c16   0900     IORLW     0x0                                                                                             
004c18   e001     BZ        0x4c1c                                                                                          
004c1a   d7fb     BRA       0x4c12                                                                                          
004c1c   ecc2     CALL      0x5584,0x0       ReadADC();                                                                     C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004c1e   f02a                                                                                                               
004c20   ec7d     CALL      0x56fa,0x0       CloseADC();                                                                    C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004c22   f02b                                                                                                               
004c24   50c4     MOVF      0xc4,0x0,0x0     result = (int) ADRESH << 8 | ADRESL;                                           C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004c26   6e02     MOVWF     0x2,0x0                                                                                         
004c28   c002     MOVFF     0x2,0x3                                                                                         
004c2a   f003                                                                                                               
004c2c   6a02     CLRF      0x2,0x0                                                                                         
004c2e   50c3     MOVF      0xc3,0x0,0x0                                                                                    
004c30   0100     MOVLB     0x0                                                                                             
004c32   1002     IORWF     0x2,0x0,0x0                                                                                     
004c34   6e00     MOVWF     0x0,0x0                                                                                         
004c36   c003     MOVFF     0x3,0x1                                                                                         
004c38   f001                                                                                                               
004c3a   c000     MOVFF     0x0,0xfde                                                                                       
004c3c   ffde                                                                                                               
004c3e   c001     MOVFF     0x1,0xfdd                                                                                       
004c40   ffdd                                                                                                               
004c42   cfde     MOVFF     0xfde,0x0        return result;                                                                 C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004c44   f000                                                                                                               
004c46   cfdd     MOVFF     0xfdd,0x1                                                                                       
004c48   f001                                                                                                               
004c4a   c000     MOVFF     0x0,0xff3                                                                                       
004c4c   fff3                                                                                                               
004c4e   c001     MOVFF     0x1,0xff4                                                                                       
004c50   fff4                                                                                                               
004c52   d000     BRA       0x4c54                                                                                          
004c54   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
004c56   ffe1                                                                                                               
004c58   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004c5a   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004c5c   ffd9                                                                                                               
004c5e   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           /******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           /******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           /******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\ifi_utilities.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\main.c
                                           * FILE NAME: main.c <FRC VERSION>                                                C:\mort\mort_code_2006_PrePalmetto\main.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\main.c
                                           * DESCRIPTION:                                                                   C:\mort\mort_code_2006_PrePalmetto\main.c
                                           *  This file contains the main program loop.                                     C:\mort\mort_code_2006_PrePalmetto\main.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\main.c
                                           * USAGE:                                                                         C:\mort\mort_code_2006_PrePalmetto\main.c
                                           *  You should not need to modify this file.                                      C:\mort\mort_code_2006_PrePalmetto\main.c
                                           *  Note the different loop speed for the two routines:                           C:\mort\mort_code_2006_PrePalmetto\main.c
                                           *     Process_Data_From_Master_uP                                                C:\mort\mort_code_2006_PrePalmetto\main.c
                                           *     Process_Data_From_Local_IO                                                 C:\mort\mort_code_2006_PrePalmetto\main.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\main.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\main.c
                                           #include "ifi_aliases.h"                                                         C:\mort\mort_code_2006_PrePalmetto\main.c
                                           #include "ifi_default.h"                                                         C:\mort\mort_code_2006_PrePalmetto\main.c
                                           #include "ifi_utilities.h"                                                       C:\mort\mort_code_2006_PrePalmetto\main.c
                                           #include "user_routines.h"                                                       C:\mort\mort_code_2006_PrePalmetto\main.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\main.c
                                           tx_data_record txdata;          /* DO NOT CHANGE! */                             C:\mort\mort_code_2006_PrePalmetto\main.c
                                           rx_data_record rxdata;          /* DO NOT CHANGE! */                             C:\mort\mort_code_2006_PrePalmetto\main.c
                                           packed_struct statusflag;       /* DO NOT CHANGE! */                             C:\mort\mort_code_2006_PrePalmetto\main.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\main.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\main.c
                                           * FUNCTION NAME: main                                                            C:\mort\mort_code_2006_PrePalmetto\main.c
                                           * PURPOSE:       Main program function.                                          C:\mort\mort_code_2006_PrePalmetto\main.c
                                           * CALLED FROM:   ifi_startup.c                                                   C:\mort\mort_code_2006_PrePalmetto\main.c
                                           * ARGUMENTS:     none                                                            C:\mort\mort_code_2006_PrePalmetto\main.c
                                           * RETURNS:       void                                                            C:\mort\mort_code_2006_PrePalmetto\main.c
                                           * DO NOT DELETE THIS FUNCTION                                                    C:\mort\mort_code_2006_PrePalmetto\main.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\main.c
                                           void main (void)                                                                 C:\mort\mort_code_2006_PrePalmetto\main.c
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\main.c
                                           #ifdef UNCHANGEABLE_DEFINITION_AREA                                              C:\mort\mort_code_2006_PrePalmetto\main.c
00561a   ec54     CALL      0x22a8,0x0       IFI_Initialization ();        /* DO NOT CHANGE! */                             C:\mort\mort_code_2006_PrePalmetto\main.c
00561c   f011                                                                                                               
                                           #endif                                                                           C:\mort\mort_code_2006_PrePalmetto\main.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\main.c
00561e   ecbf     CALL      0x97e,0x0        User_Initialization();        /* You edit this in user_routines.c */           C:\mort\mort_code_2006_PrePalmetto\main.c
005620   f004                                                                                                               
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\main.c
005622   0101     MOVLB     0x1              statusflag.NEW_SPI_DATA = 0;  /* DO NOT CHANGE! */                             C:\mort\mort_code_2006_PrePalmetto\main.c
005624   91c0     BCF       0xc0,0x0,0x1                                                                                    
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\main.c
00563e   d7f3     BRA       0x5626           while (1)   /* This loop will repeat indefinitely. */                          C:\mort\mort_code_2006_PrePalmetto\main.c
                                             {                                                                              C:\mort\mort_code_2006_PrePalmetto\main.c
                                           #ifdef _SIMULATOR                                                                C:\mort\mort_code_2006_PrePalmetto\main.c
                                               statusflag.NEW_SPI_DATA = 1;                                                 C:\mort\mort_code_2006_PrePalmetto\main.c
                                           #endif                                                                           C:\mort\mort_code_2006_PrePalmetto\main.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\main.c
005626   0101     MOVLB     0x1                if (statusflag.NEW_SPI_DATA)      /* 26.2ms loop area */                     C:\mort\mort_code_2006_PrePalmetto\main.c
005628   a1c0     BTFSS     0xc0,0x0,0x1                                                                                    
00562a   d007     BRA       0x563a                                                                                          
                                               {                                 /* I'm slow!  I only execute every 26.2ms because */ C:\mort\mort_code_2006_PrePalmetto\main.c
                                                                                 /* that's how fast the Master uP gives me data. */ C:\mort\mort_code_2006_PrePalmetto\main.c
00562c   ec1d     CALL      0xa3a,0x0            Process_Data_From_Master_uP();  /* You edit this in user_routines.c */     C:\mort\mort_code_2006_PrePalmetto\main.c
00562e   f005                                                                                                               
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\main.c
005630   0101     MOVLB     0x1                  if (autonomous_mode)            /* DO NOT CHANGE! */                       C:\mort\mort_code_2006_PrePalmetto\main.c
005632   ada1     BTFSS     0xa1,0x6,0x1                                                                                    
005634   d002     BRA       0x563a                                                                                          
                                                 {                                                                          C:\mort\mort_code_2006_PrePalmetto\main.c
005636   ec9d     CALL      0x493a,0x0             User_Autonomous_Code();        /* You edit this in user_routines_fast.c */ C:\mort\mort_code_2006_PrePalmetto\main.c
005638   f024                                                                                                               
                                                 }                                                                          C:\mort\mort_code_2006_PrePalmetto\main.c
                                               }                                                                            C:\mort\mort_code_2006_PrePalmetto\main.c
00563a   ec38     CALL      0x4a70,0x0         Process_Data_From_Local_IO();     /* You edit this in user_routines_fast.c */ C:\mort\mort_code_2006_PrePalmetto\main.c
00563c   f025                                                                                                               
                                                                                 /* I'm fast!  I execute during every loop.*/ C:\mort\mort_code_2006_PrePalmetto\main.c
                                             } /* while (1) */                                                              C:\mort\mort_code_2006_PrePalmetto\main.c
005640   0012     RETURN    0x0            }  /* END of Main */                                                             C:\mort\mort_code_2006_PrePalmetto\main.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\main.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\main.c
                                           /******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\main.c
                                           /******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\main.c
                                           /******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\main.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	TITLE:		serial_ports.c                                                         C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	VERSION:	0.4 (Beta)                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	DATE:		10-Jan-2006                                                             C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	AUTHOR:		R. Kevin Watson                                                       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				kevinw@jpl.nasa.gov                                                         C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	COMMENTS:	The source code in this file implements a fully buffered,            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				interrupt-driven serial port driver that can be used with                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				either or both on-board serial ports.                                       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				This source code will work with the Robovation (A/K/A EDU-RC)               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				robot controller and the FIRST Robotics robot controller.                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				By default, serial port one will operate at 115200 baud, which              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				is compatible with InnovationFIRST's terminal program, and                  C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				serial port two will operate at 9600 baud. These values can be              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				easily changed by modifying the	serial port initialization                  C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				functions mentioned below.                                                  C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *               This file is best viewed with tabs set to four characters.       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				Nine things must be done before this software will work                     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				correctly:                                                                  C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  1a) FRC-RC: As this software is intended to replace IFI's                 C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  serial port driver, the call to Serial_Driver_Initialize()                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  in user_routines.c / User_Initialization() should be                      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  removed or commented out.	In addition, all references to                  C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  "user_Serialdrv.c" and "user_Serialdrv.h" must be removed                 C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  from the project and all project source files.                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  1b) EDU-RC: As this software is intended to replace IFI's                 C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  serial port driver, the call to Initialize_Serial_Comms()                 C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  in user_routines.c / User_Initialization() should be                      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  removed or commented out.	In addition, all references to                  C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  "printf_lib.c" and "printf_lib.h" must be removed from                    C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  the project and all project source files.                                 C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  2) You must add the serial_ports.c/.h source files to                     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  your MPLAB project.                                                       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  3) A #include statement for the serial_ports.h header                     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  file must be included at the beginning of each source                     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  file that uses the serial ports. The statement should                     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  look like this: #include "serial_ports.h".                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  4) If you intend to use the C18 output stream functions,                  C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  A #include statement for the stdio.h header file must be                  C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  included at the beginning of each source file that calls                  C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  any of these functions. The statement should look like                    C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  this: #include <serial_ports.h>.                                          C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  5) Init_Serial_Port_One() and/or Init_Serial_Port_Two()                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  must be called from the User_Initialization() function                    C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  located in the user_routines.c source file.                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  6) The interrupt handler(s) must be installed in the                      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  InterruptHandlerLow() function located in the                             C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  user_routines_fast.c source file. See the accompanying                    C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  copy of user_routines_fast.c to see how this is done.                     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  7) Decide what functionality you need and comment out the                 C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  #define ENABLE_SERIAL_PORT_xxx_yy entries in serial_ports.h               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  as necessary. As an example, if you only need to send data                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  using serial port one and would like to reclaim the resources             C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  used by serial port two and serial port one's receiver                    C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  source code, the top of the serial_ports.h file would look                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  like this:                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  // comment out the next line to disable all serial port one               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  // receive functionality                                                  C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  // #define ENABLE_SERIAL_PORT_ONE_RX                                      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  // comment out the next line to disable all serial port one               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  // transmit functionality                                                 C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  #define ENABLE_SERIAL_PORT_ONE_TX                                         C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  // comment out the next line to disable all serial port two               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  // receive functionality                                                  C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  // #define ENABLE_SERIAL_PORT_TWO_RX                                      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  // comment out the next line to disable all serial port two               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  // transmit functionality                                                 C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  // #define ENABLE_SERIAL_PORT_TWO_TX                                      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  By default, both serial ports and their respective receive                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  and transmit sections are enabled.                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  8) As the default output device for C18's output stream                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  functions is the null device, you'll presumably want to                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  change the value of stdout_serial_port to "SERIAL_PORT_ONE"               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  or "SERIAL_PORT_TWO" if you want to see printf()'s output.                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  User_Initialization() is a good place to do this.                         C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  9) To support terminal emulation software, \r\n should                    C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  be used instead of just \n in the printf() format string.                 C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				This serial port driver can send output stream data to either               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				of the serial ports by setting the value of the global variable             C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				stdout_serial_port before calling output stream	functions like              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				printf(). Setting the value	to "SERIAL_PORT_ONE" will send the              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				output to serial port one. Likewise, setting the value to                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				"SERIAL_PORT_TWO" will send the output to serial port two.                  C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				Setting the value to "NUL" will send the output to the null                 C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				device, meaning that the output is sent	nowhere. These values               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				are #define'd in serial_ports.h. As an example,                             C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  stdout_serial_port = SERIAL_PORT_ONE;                                     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  printf("Kernighan");                                                      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  stdout_serial_port = NUL;                                                 C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  printf("and");                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  stdout_serial_port = SERIAL_PORT_TWO;                                     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				  printf("Ritchie");                                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				will send the text "Kernighan" to the peripheral device attached            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				to serial port one, the text "Ritchie" to the device attached to            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				serial port two and the text "and" won't be sent anywhere.                  C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				By default, output is sent to the null device, which is the only            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				output device guaranteed to be present.                                     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				You are free to use this source code for any non-commercial                 C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				use. Please do not make copies of this source code, modified                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				or un-modified, publicly available on the internet or                       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				elsewhere without permission. Thanks.                                       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *				Copyright ©2004-2006 R. Kevin Watson. All rights are reserved.              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *		                                                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           ******************************************************************************** C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	CHANGE LOG:                                                                    C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	DATE         REV  DESCRIPTION                                                  C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	-----------  ---  ----------------------------------------------------------   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	22-Dec-2004  0.1  RKW - Original code.                                         C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	28-Dec-2004  0.2  RKW - Using preprocessor directives, added the ability       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	                  to enable/disable individual serial port receive and         C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	                  transmit code. Updated documentation.                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	05-Feb-2005  0.3  RKW - Added _user_putc() interface to C18's new output       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	                  stream capabilities. Updated documentation.                  C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	05-Jan-2006  0.4  RKW - Partial port to 18F8722. Updated documentation.        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	10-Jan-2006  0.4  RKW - Modified the #pragma interruptlow line to also         C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	                  save the .tmpdata section.                                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           #include <p18f8722.h>                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           #include <stdio.h>                                                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           #include "serial_ports.h"                                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           // by default stdout stream output is sent to the null device,                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           // which is the only device guaranteed to be present.                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           unsigned char stdout_serial_port = NUL;                                          C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           //                                                                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           // Serial Port 1 Receive Variables:                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           //                                                                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_ONE_RX                                                 C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           volatile unsigned char Rx_1_Queue[RX_1_QUEUE_SIZE];	// serial port 1's receive circular queue C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           volatile unsigned char Rx_1_Queue_Full = FALSE;		// flag that indicates that serial port 1's C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           													// receive circular queue is full and cannot                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           													// accept any more data                                             C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           unsigned char Rx_1_Queue_Empty = TRUE;				// flag that indicates that there is no more  C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           													// data present in serial port 1's receive                          C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           													// circular queue                                                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           unsigned char Rx_1_Queue_Read_Index = 0;			// read index into serial port 1's receive C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           													// circular queue                                                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           volatile unsigned char Rx_1_Queue_Write_Index = 0;	// write index into serial port 1's receive C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           													// circular queue                                                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           volatile unsigned char Rx_1_Queue_Byte_Count = 0;	// number of bytes in serial port 1's receive C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           													// circular queue                                                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           volatile unsigned char RX_1_Overrun_Errors = 0;		// number of overrun errors that have occurred C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           													// in serial port 1's receive circuitry since                       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           													// the last reset                                                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           volatile unsigned char RX_1_Framing_Errors = 0;		// number of framing errors that have occurred C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           													// in serial port 1's receive circuitry since                       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           													// the last reset                                                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           #endif                                                                           C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           //                                                                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           // Serial Port 1 Transmit Variables:                                             C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           //                                                                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_ONE_TX                                                 C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           volatile unsigned char Tx_1_Queue[TX_1_QUEUE_SIZE];	// serial port 1's transmit circular queue C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           volatile unsigned char Tx_1_Queue_Full = FALSE;		// flag that indicates that serial port 1's C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           													// transmit circular queue is full and cannot                       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           													// accept any more data                                             C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           volatile unsigned char Tx_1_Queue_Empty = TRUE;		// flag that indicates that there is no more  C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           													// data to send in serial port 1's transmit                         C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           													// circular queue                                                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           volatile unsigned char Tx_1_Queue_Read_Index = 0;	// read index into serial port 1's transmit C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           													// circular queue                                                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           unsigned char Tx_1_Queue_Write_Index = 0;			// write index into serial port 1's transmit C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           													// circular queue                                                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           volatile unsigned char Tx_1_Queue_Byte_Count = 0;	// number of bytes in serial port 1's transmit C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           													// circular queue                                                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           #endif                                                                           C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           //                                                                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           // Serial Port 2 Receive Variables:                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           //                                                                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_TWO_RX                                                 C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           volatile unsigned char Rx_2_Queue[RX_2_QUEUE_SIZE];	// serial port 2's receive circular queue C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           volatile unsigned char Rx_2_Queue_Full = FALSE;		// flag that indicates that serial port 2's C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           													// receive circular queue is full and cannot                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           													// accept any more data                                             C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           unsigned char Rx_2_Queue_Empty = TRUE;				// flag that indicates that there is no more  C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           													// data present in serial port 2's receive                          C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           													// circular queue                                                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		                                                                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           unsigned char Rx_2_Queue_Read_Index = 0;			// read index into serial port 2's receive C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           													// circular queue                                                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           volatile unsigned char Rx_2_Queue_Write_Index = 0;	// write index into serial port 2's receive C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           													// circular queue                                                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           volatile unsigned char Rx_2_Queue_Byte_Count = 0;	// number of bytes in serial port 2's receive C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           													// circular queue                                                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           volatile unsigned char RX_2_Overrun_Errors = 0;		// number of overrun errors that have occurred C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           													// in serial port 2's receive circuitry since                       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           													// the last reset                                                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           volatile unsigned char RX_2_Framing_Errors = 0;		// number of framing errors that have occurred C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           													// in serial port 2's receive circuitry since                       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           													// the last reset                                                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           #endif                                                                           C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           //                                                                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           // Serial Port 2 Transmit Variables:                                             C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           //                                                                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_TWO_TX                                                 C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           volatile unsigned char Tx_2_Queue[TX_2_QUEUE_SIZE];	// serial port 2's transmit circular queue C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           volatile unsigned char Tx_2_Queue_Full = FALSE;		// flag that indicates that serial port 2's C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           													// transmit circular queue is full and cannot                       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           													// accept any more data                                             C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           volatile unsigned char Tx_2_Queue_Empty = TRUE;		// flag that indicates that there is no more  C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           													// data to send in serial port 2's transmit                         C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           													// circular queue                                                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           volatile unsigned char Tx_2_Queue_Read_Index = 0;	// read index into serial port 2's transmit C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           													// circular queue                                                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           unsigned char Tx_2_Queue_Write_Index = 0;			// write index into serial port 2's transmit C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           													// circular queue                                                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           volatile unsigned char Tx_2_Queue_Byte_Count = 0;	// number of bytes in serial port 2's transmit C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           													// circular queue                                                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           #endif                                                                           C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	FUNCTION:		Init_Serial_Port_One()                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	PURPOSE:		Initializes serial port one for asynchronous operation               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	CALLED FROM:	user_routines.c/User_Initialization()                             C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	PARAMETERS:		None                                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	RETURNS:		Nothing                                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	COMMENTS:		This function must be called before you try to use serial           C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					port one.                                                                  C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					By default, this serial port is set to 115200 baud with                    C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					the transmitter and receiver enabled. This is the rate                     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					IFI's terminal program expects.                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					The	serial port's baud rate is programmed by entering                      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					a value into the SPBRG1 register and possibly changing                     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					the value of the BRGH bit. Several example values are                      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					included in the serial_ports.h file.                                       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					Numbers within brackets refer to the PIC18F8722	data                       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					sheet page number where more information can be found.                     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					This document can be found at microchip's website at                       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					http://www.microchip.com or at the author's website at                     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					http://www.kevin.org/frc                                                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					This function will not be included in the build unless                     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_ONE_RX or ENABLE_SERIAL_PORT_ONE_TX                     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					is #define'd in serial_ports.h                                             C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           void Init_Serial_Port_One(void)                                                  C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// Start by initializing the serial port with code                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// common to receive and transmit functions                                     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004530   0e15     MOVLW     0x15           	SPBRG1 = BAUD_115200;	// baud rate generator register [251]                     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004532   6eaf     MOVWF     0xaf,0x0                                                                                        
                                           							//                                                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004534   84ac     BSF       0xac,0x2,0x0   	TXSTA1bits.BRGH = 1;	// high baud rate select bit (asynchronous mode only) [248] C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  0: low speed                                                          C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  1: high speed                                                         C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//                                                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004536   9a9d     BCF       0x9d,0x5,0x0   	PIE1bits.RC1IE = 0;		// receive interrupt enable bit [127]                      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  0: disables received data interrupt                                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  1: enables received data interrupt                                    C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//                                                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004538   989d     BCF       0x9d,0x4,0x0   	PIE1bits.TX1IE = 0;		// transmit interrupt enable bit [127]                     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  0: disables transmit register empty interrupt                         C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  1: enables transmit register empty interrupt                          C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//                                                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
00453a   98ac     BCF       0xac,0x4,0x0   	TXSTA1bits.SYNC = 0;	// USART mode select bit [248]                             C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  0: asynchronous mode                                                  C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  1: synchronous mode                                                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//                                                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
00453c   9eac     BCF       0xac,0x7,0x0   	TXSTA1bits.CSRC = 0;	// clock source select bit (synchronous mode only) [248]   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  0: Slave mode (clock generated by external source)                    C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  1: Master mode (clock generated internally from BRG)                  C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// if receive functionality is to be included in the                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// software build, include code that is specific to                             C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// initializing the receiver                                                    C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	#ifdef ENABLE_SERIAL_PORT_ONE_RX                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//                                                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
00453e   8e94     BSF       0x94,0x7,0x0   	TRISCbits.TRISC7 = 1;	// make sure the RC7/RX1/DT1 pin is configured as an input [140] C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//                                                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004540   9cab     BCF       0xab,0x6,0x0   	RCSTA1bits.RX9 = 0;		// 9-bit receive enable bit [249]                          C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  0: 8-bit reception mode                                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  1: 9-bit reception mode                                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//                                                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004542   96ab     BCF       0xab,0x3,0x0   	RCSTA1bits.ADDEN = 0;	// address detect enable bit (9-bit asynchronous mode only) [249] C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  0: disables address detection                                         C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  1: enables address detection                                          C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//                                                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004544   8aab     BSF       0xab,0x5,0x0   	RCSTA1bits.SREN = 1;	// single receive enable bit (master synchronous mode only) [249] C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  0: disables single receive mode                                       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  1: enables single receive mode                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//                                                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004546   88ab     BSF       0xab,0x4,0x0   	RCSTA1bits.CREN = 1;	// continuous receive mode enable bit [249]                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							// asynchronous mode:                                                     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  0: disables receiver                                                  C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  1: enable receiver                                                    C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							// synchronous mode:                                                      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  0: disables continuous receive                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  1: enables continuous receive until CREN is cleared                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//                                                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004548   9a9f     BCF       0x9f,0x5,0x0   	IPR1bits.RC1IP = 0;		// receive interrupt priority bit (must be 0 for IFI controllers) [130] C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  0: low-priority                                                       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  1: high-priority                                                      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//                                                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
00454a   8a9d     BSF       0x9d,0x5,0x0   	PIE1bits.RC1IE = 1;		// receive interrupt enable bit [127]                      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  0: disables received data interrupt                                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  1: enables received data interrupt                                    C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	#endif					//                                                                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// if transmit functionality is to be included in the                           C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// software build, include code that is specific to                             C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// initializing the serial port transmitter                                     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	#ifdef ENABLE_SERIAL_PORT_ONE_TX                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//                                                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
00454c   0102     MOVLB     0x2            	stdout = _H_USER;		// use this driver for output stream functions               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
00454e   696c     SETF      0x6c,0x1                                                                                        
004550   696d     SETF      0x6d,0x1                                                                                        
                                           							//                                                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004552   9c94     BCF       0x94,0x6,0x0   	TRISCbits.TRISC6 = 0;	// make sure the RC6/TX1/CK1 pin is configured as an output [140] C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//                                                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004554   9cac     BCF       0xac,0x6,0x0   	TXSTA1bits.TX9 = 0;		// 9-bit transmit enable bit [248]                         C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  0: 8-bit transmission mode                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  1: 9-bit transmission mode                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//                                                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004556   96ac     BCF       0xac,0x3,0x0   	TXSTA1bits.SENDB = 0;	// send break character bit [248]                         C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  0: Sync Break transmission completed                                  C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  1: Send Sync Break on next transmission                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//                                                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004558   989f     BCF       0x9f,0x4,0x0   	IPR1bits.TX1IP = 0;		// transmit interrupt priority bit (must be 0 for IFI controllers) [130] C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  0: low-priority                                                       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  1: high-priority                                                      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//                                                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
00455a   889d     BSF       0x9d,0x4,0x0   	PIE1bits.TX1IE = 1;		// transmit interrupt enable bit [127]                     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  0: disables transmit register empty interrupt                         C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  1: enables transmit register empty interrupt                          C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//                                                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
00455c   8aac     BSF       0xac,0x5,0x0   	TXSTA1bits.TXEN = 1;  	// Enable transmitter [248]                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  0: serial transmitter is disabled                                     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  1: serial transmitter                                                 C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	#endif					//                                                                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// finally, turn on the serial port                                             C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
00455e   8eab     BSF       0xab,0x7,0x0   	RCSTA1bits.SPEN = 1;  	// Serial Port Enable [249]                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  0: serial port is disabled                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  1: serial port is enabled                                             C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004560   0012     RETURN    0x0            }                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	FUNCTION:		Init_Serial_Port_Two()                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	PURPOSE:		Initializes serial port two for asynchronous operation               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	CALLED FROM:	user_routines.c/User_Initialization()                             C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	PARAMETERS:		None                                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	RETURNS:		Nothing                                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	COMMENTS:		This function must be called before you try to use serial           C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					port two.                                                                  C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					By default, this serial port is set to 9600 baud with                      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					the transmitter and receiver enabled.                                      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					The	serial port's baud rate is programmed by entering                      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					a value into the SPBRG2 register and possibly changing                     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					the value of the BRGH bit. Several example values are                      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					included in the serial_ports.h file.                                       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					Numbers within brackets refer to the PIC18F8722	data                       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					sheet page number where more information can be found.                     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					This document can be found at microchip's website at                       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					http://www.microchip.com or at the author's website at                     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					http://www.kevin.org/frc                                                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					This function will not be included in the build unless                     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_TWO_RX or ENABLE_SERIAL_PORT_TWO_TX                     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					is #define'd in serial_ports.h                                             C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           void Init_Serial_Port_Two(void)                                                  C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// Start by initializing the serial port with code                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// common to receive and transmit functions                                     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004562   0e15     MOVLW     0x15           	SPBRG2 = BAUD_115200;	// baud rate generator register [251]                     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004564   6e6f     MOVWF     0x6f,0x0                                                                                        
                                           							//                                                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004566   846c     BSF       0x6c,0x2,0x0   	TXSTA2bits.BRGH = 1;	// high baud rate select bit (asynchronous mode only) [248] C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  0: low speed                                                          C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  1: high speed                                                         C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//                                                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004568   9aa3     BCF       0xa3,0x5,0x0   	PIE3bits.RC2IE = 0;		// receive interrupt enable bit [129]                      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  0: disables received data interrupt                                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  1: enables received data interrupt                                    C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//                                                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
00456a   98a3     BCF       0xa3,0x4,0x0   	PIE3bits.TX2IE = 0;		// transmit interrupt enable bit [129]                     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  0: disables transmit register empty interrupt                         C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  1: enables transmit register empty interrupt                          C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//                                                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
00456c   986c     BCF       0x6c,0x4,0x0   	TXSTA2bits.SYNC = 0;	// USART mode select bit [248]                             C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  0: asynchronous mode                                                  C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  1: synchronous mode                                                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//                                                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
00456e   9e6c     BCF       0x6c,0x7,0x0   	TXSTA2bits.CSRC = 0;	// clock source select bit (synchronous mode only) [248]   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  0: Slave mode (clock generated by external source)                    C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  1: Master mode (clock generated internally from BRG)                  C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// if receive functionality is to be included in the                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// software build, include code that is specific to                             C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// initializing the receiver                                                    C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	#ifdef ENABLE_SERIAL_PORT_TWO_RX                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//                                                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004570   8498     BSF       0x98,0x2,0x0   	TRISGbits.TRISG2 = 1;	// make sure the RG2/RX2/DT2 pin is configured as an input [151] C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//                                                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004572   9c6b     BCF       0x6b,0x6,0x0   	RCSTA2bits.RX9 = 0;		// 9-bit receive enable bit [249]                          C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  0: 8-bit reception mode                                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  1: 9-bit reception mode                                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//                                                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004574   966b     BCF       0x6b,0x3,0x0   	RCSTA2bits.ADDEN = 0;	// address detect enable bit (9-bit asynchronous mode only) [249] C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  0: disables address detection                                         C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  1: enables address detection                                          C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//                                                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004576   8a6b     BSF       0x6b,0x5,0x0   	RCSTA2bits.SREN = 1;	// single receive enable bit (master synchronous mode only) [249] C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  0: disables single receive mode                                       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  1: enables single receive mode                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//                                                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004578   886b     BSF       0x6b,0x4,0x0   	RCSTA2bits.CREN = 1;	// continuous receive mode enable bit [249]                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							// asynchronous mode:                                                     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  0: disables receiver                                                  C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  1: enable receiver                                                    C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							// synchronous mode:                                                      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  0: disables continuous receive                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  1: enables continuous receive until CREN is cleared                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//                                                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
00457a   9aa5     BCF       0xa5,0x5,0x0   	IPR3bits.RC2IP = 0;		// receive interrupt priority bit (must be 0 for IFI controllers) [132] C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  0: low-priority                                                       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  1: high-priority                                                      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//                                                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
00457c   8aa3     BSF       0xa3,0x5,0x0   	PIE3bits.RC2IE = 1;		// receive interrupt enable bit [129]                      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  0: disables received data interrupt                                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  1: enables received data interrupt                                    C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	#endif					//                                                                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// if transmit functionality is to be included in the                           C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// software build, include code that is specific to                             C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// initializing the serial port transmitter                                     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	#ifdef ENABLE_SERIAL_PORT_TWO_TX                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//                                                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
00457e   0102     MOVLB     0x2            	stdout = _H_USER;		// use this driver for output stream functions               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004580   696c     SETF      0x6c,0x1                                                                                        
004582   696d     SETF      0x6d,0x1                                                                                        
                                           							//                                                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//                                                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004584   9298     BCF       0x98,0x1,0x0   	TRISGbits.TRISG1 = 0;	// make sure the RG1/TX2/CK2 pin is configured as an output [151] C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//                                                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004586   9c6c     BCF       0x6c,0x6,0x0   	TXSTA2bits.TX9 = 0;		// 9-bit transmit enable bit [248]                         C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  0: 8-bit transmission mode                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  1: 9-bit transmission mode                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//                                                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004588   966c     BCF       0x6c,0x3,0x0   	TXSTA2bits.SENDB = 0;	// send break character bit [248]                         C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  0: Sync Break transmission completed                                  C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  1: Send Sync Break on next transmission                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//                                                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
00458a   98a5     BCF       0xa5,0x4,0x0   	IPR3bits.TX2IP = 0;		// transmit interrupt priority bit (must be 0 for IFI controllers) [132] C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  0: low-priority                                                       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  1: high-priority                                                      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//                                                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
00458c   88a3     BSF       0xa3,0x4,0x0   	PIE3bits.TX2IE = 1;		// transmit interrupt enable bit [129]                     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  0: disables transmit register empty interrupt                         C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  1: enables transmit register empty interrupt                          C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//                                                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
00458e   8a6c     BSF       0x6c,0x5,0x0   	TXSTA2bits.TXEN = 1;  	// Enable transmitter [248]                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  0: serial transmitter is disabled                                     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  1: serial transmitter                                                 C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	#endif					//                                                                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// finally, turn on the serial port                                             C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004590   8e6b     BSF       0x6b,0x7,0x0   	RCSTA2bits.SPEN = 1;  	// Serial Port Enable [249]                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  0: serial port is disabled                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           							//  1: serial port is enabled                                             C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004592   0012     RETURN    0x0            }                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	FUNCTION:		Serial_Port_One_Byte_Count()                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	PURPOSE:		Returns the number of bytes in serial port                           C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					ones's received data queue.		                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	CALLED FROM:                                                                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	PARAMETERS:		none                                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	RETURNS:		unsigned char                                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	COMMENTS:		This function must be called to determine how much data,            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					if any, is present in serial port one's received data                      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					queue. If the returned number is greater than zero, then                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					a call to Read_Serial_Port_One() can be made to retrieve                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					the next byte.                                                             C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					This function will not be included in the build unless                     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_ONE_RX is #define'd in serial_ports.h                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_ONE_RX                                                 C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004594   cfd9     MOVFF     0xfd9,0xfe6    unsigned char Serial_Port_One_Byte_Count(void)                                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004596   ffe6                                                                                                               
004598   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00459a   ffd9                                                                                                               
00459c   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	unsigned char temp;                                                             C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// since we're about to use the Rx_1_Queue_Byte_Count variable,                 C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// which can also be modified in the interrupt service routine,                 C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// let's briefly disable the serial port interrupt to make sure                 C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// that Rx_1_Queue_Byte_Count doesn't get altered while we're                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// using it.                                                                    C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
00459e   9a9d     BCF       0x9d,0x5,0x0   	PIE1bits.RC1IE = 0;                                                             C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// now we can get a local copy of the byte count without fear                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// that we'll get corrupted data                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0045a0   c205     MOVFF     0x205,0xfdf    	temp = Rx_1_Queue_Byte_Count;                                                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0045a2   ffdf                                                                                                               
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// okay, we have a local copy of the byte count, so turn the                    C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// serial port interrupt back on.                                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0045a4   8a9d     BSF       0x9d,0x5,0x0   	PIE1bits.RC1IE = 1;                                                             C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// return the byte count                                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0045a6   50df     MOVF      0xdf,0x0,0x0   	return(temp);                                                                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0045a8   d000     BRA       0x45aa                                                                                          
0045aa   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0045ac   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0045ae   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0045b0   ffd9                                                                                                               
0045b2   0012     RETURN    0x0                                                                                             
                                           #endif                                                                           C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	FUNCTION:		Serial_Port_Two_Byte_Count()                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	PURPOSE:		Returns the number of bytes in serial port                           C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					two's received data queue.		                                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	CALLED FROM:                                                                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	PARAMETERS:		none                                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	RETURNS:		unsigned char                                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	COMMENTS:		This function must be called to determine how much data,            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					if any, is present in serial port two's received data                      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					queue. If the returned number is greater than zero, then                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					a call to Read_Serial_Port_Two() can be made to retrieve                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					the next byte.                                                             C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					This function will not be included in the build unless                     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_TWO_RX is #define'd in serial_ports.h                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_TWO_RX                                                 C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0045b4   cfd9     MOVFF     0xfd9,0xfe6    unsigned char Serial_Port_Two_Byte_Count(void)                                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0045b6   ffe6                                                                                                               
0045b8   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0045ba   ffd9                                                                                                               
0045bc   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	unsigned char temp;                                                             C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// since we're about to use the Rx_1_Queue_Byte_Count variable,                 C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// which can also be modified in the interrupt service routine,                 C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// let's briefly disable the serial port interrupt to make sure                 C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// that Rx_1_Queue_Byte_Count doesn't get altered while we're                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// using it.                                                                    C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0045be   9aa3     BCF       0xa3,0x5,0x0   	PIE3bits.RC2IE = 0;                                                             C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// now we can get a local copy of the byte count without fear                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// that we'll get corrupted data                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0045c0   c211     MOVFF     0x211,0xfdf    	temp = Rx_2_Queue_Byte_Count;                                                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0045c2   ffdf                                                                                                               
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// okay, we have a local copy of the byte count, so turn the                    C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// serial port interrupt back on.                                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0045c4   8aa3     BSF       0xa3,0x5,0x0   	PIE3bits.RC2IE = 1;                                                             C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// return the byte count                                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0045c6   50df     MOVF      0xdf,0x0,0x0   	return(temp);                                                                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0045c8   d000     BRA       0x45ca                                                                                          
0045ca   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0045cc   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0045ce   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0045d0   ffd9                                                                                                               
0045d2   0012     RETURN    0x0                                                                                             
                                           #endif                                                                           C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	FUNCTION:		Read_Serial_Port_One()                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	PURPOSE:		                                                                     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	CALLED FROM:                                                                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	PARAMETERS:		none                                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	RETURNS:		unsigned char                                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	COMMENTS:		This function will not be included in the build unless              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_ONE_RX is #define'd in serial_ports.h 		                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_ONE_RX                                                 C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0045d4   cfd9     MOVFF     0xfd9,0xfe6    unsigned char Read_Serial_Port_One(void)                                         C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0045d6   ffe6                                                                                                               
0045d8   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0045da   ffd9                                                                                                               
0045dc   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	unsigned char byte;                                                             C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0045de   0102     MOVLB     0x2            	if(Rx_1_Queue_Empty)                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0045e0   5102     MOVF      0x2,0x0,0x1                                                                                     
0045e2   e003     BZ        0x45ea                                                                                          
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// error: no data to read                                                      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0045e4   0e00     MOVLW     0x0            		return(0);                                                                     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0045e6   d017     BRA       0x4616                                                                                          
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0045e8   d016     BRA       0x4616         	else                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// get a byte from the circular queue and store it temporarily                 C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0045ea   5103     MOVF      0x3,0x0,0x1    		byte = Rx_1_Queue[Rx_1_Queue_Read_Index];                                      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0045ec   6aea     CLRF      0xea,0x0                                                                                        
0045ee   0f00     ADDLW     0x0                                                                                             
0045f0   6ee9     MOVWF     0xe9,0x0                                                                                        
0045f2   0e01     MOVLW     0x1                                                                                             
0045f4   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
0045f6   cfef     MOVFF     0xfef,0xfdf                                                                                     
0045f8   ffdf                                                                                                               
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// decrement the queue byte count                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0045fa   0705     DECF      0x5,0x1,0x1    		Rx_1_Queue_Byte_Count--;                                                       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// increment the read pointer                                                  C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0045fc   2b03     INCF      0x3,0x1,0x1    		Rx_1_Queue_Read_Index++;                                                       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// If the index pointer overflowed, cut-off the high-order bit. Doing this     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// every time is quicker than checking for overflow every time with an if()    C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// statement and only then occasionally setting it back to zero. For this      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// to work, the queue size must be a power of 2 (e.g., 16,32,64,128...).       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0045fe   0e1f     MOVLW     0x1f           		Rx_1_Queue_Read_Index &= RX_1_QUEUE_INDEX_MASK;                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004600   1703     ANDWF     0x3,0x1,0x1                                                                                     
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// since we're about to use the Rx_1_Queue_Write_Index variable, which can     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// also be modified in the interrupt service routine, let's briefly disable    C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// the serial port interrupt to make sure that Rx_1_Queue_Write_Index doesn't  C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// get altered while we're using it.                                           C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004602   9a9d     BCF       0x9d,0x5,0x0   		PIE1bits.RC1IE = 0;                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// is the circular queue now empty?                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004604   5104     MOVF      0x4,0x0,0x1    		if(Rx_1_Queue_Read_Index == Rx_1_Queue_Write_Index)                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004606   5d03     SUBWF     0x3,0x0,0x1                                                                                     
004608   e102     BNZ       0x460e                                                                                          
                                           		{                                                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
00460a   0e01     MOVLW     0x1            			Rx_1_Queue_Empty = TRUE;                                                      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
00460c   6f02     MOVWF     0x2,0x1                                                                                         
                                           		}                                                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// okay, we're done using Rx_1_Queue_Write_Index, so turn the serial port      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// interrupt back on.                                                          C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
00460e   8a9d     BSF       0x9d,0x5,0x0   		PIE1bits.RC1IE = 1;                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                            		// Since we've just removed a byte to the queue, it can't possibly be full.   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// Again, this is quicker than using an if() statement every time              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004610   6b01     CLRF      0x1,0x1        		Rx_1_Queue_Full = FALSE;                                                       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// return the data                                                             C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004612   50df     MOVF      0xdf,0x0,0x0   		return(byte);                                                                  C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004614   d000     BRA       0x4616                                                                                          
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004616   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004618   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00461a   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00461c   ffd9                                                                                                               
00461e   0012     RETURN    0x0                                                                                             
                                           #endif                                                                           C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	FUNCTION:		Read_Serial_Port_Two()                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	PURPOSE:		                                                                     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	CALLED FROM:                                                                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	PARAMETERS:		none                                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	RETURNS:		unsigned char                                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	COMMENTS:		This function will not be included in the build unless              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_TWO_RX is #define'd in serial_ports.h 		                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_TWO_RX                                                 C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004620   cfd9     MOVFF     0xfd9,0xfe6    unsigned char Read_Serial_Port_Two(void)                                         C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004622   ffe6                                                                                                               
004624   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004626   ffd9                                                                                                               
004628   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	unsigned char byte;                                                             C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
00462a   0102     MOVLB     0x2            	if(Rx_2_Queue_Empty)                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
00462c   510e     MOVF      0xe,0x0,0x1                                                                                     
00462e   e003     BZ        0x4636                                                                                          
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// error: no data to read                                                      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004630   0e00     MOVLW     0x0            		return(0);                                                                     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004632   d017     BRA       0x4662                                                                                          
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004634   d016     BRA       0x4662         	else                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// get a byte from the circular queue and store it temporarily                 C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004636   510f     MOVF      0xf,0x0,0x1    		byte = Rx_2_Queue[Rx_2_Queue_Read_Index];                                      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004638   6aea     CLRF      0xea,0x0                                                                                        
00463a   0f40     ADDLW     0x40                                                                                            
00463c   6ee9     MOVWF     0xe9,0x0                                                                                        
00463e   0e01     MOVLW     0x1                                                                                             
004640   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
004642   cfef     MOVFF     0xfef,0xfdf                                                                                     
004644   ffdf                                                                                                               
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// decrement the queue byte count                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004646   0711     DECF      0x11,0x1,0x1   		Rx_2_Queue_Byte_Count--;                                                       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// increment the read pointer                                                  C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004648   2b0f     INCF      0xf,0x1,0x1    		Rx_2_Queue_Read_Index++;                                                       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// If the index pointer overflowed, cut-off the high-order bit. Doing this     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// every time is quicker than checking for overflow every time with an if()    C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// statement and only then occasionally setting it back to zero. For this      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// to work, the queue size must be a power of 2 (e.g., 16,32,64,128...).       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
00464a   0e1f     MOVLW     0x1f           		Rx_2_Queue_Read_Index &= RX_2_QUEUE_INDEX_MASK;                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
00464c   170f     ANDWF     0xf,0x1,0x1                                                                                     
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// since we're about to use the Rx_2_Queue_Write_Index variable, which can     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// also be modified in the interrupt service routine, let's briefly disable    C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// the serial port interrupt to make sure that Rx_2_Queue_Write_Index doesn't  C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// get altered while we're using it.                                           C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
00464e   9aa3     BCF       0xa3,0x5,0x0   		PIE3bits.RC2IE = 0;                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// is the circular queue now empty?                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004650   5110     MOVF      0x10,0x0,0x1   		if(Rx_2_Queue_Read_Index == Rx_2_Queue_Write_Index)                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004652   5d0f     SUBWF     0xf,0x0,0x1                                                                                     
004654   e102     BNZ       0x465a                                                                                          
                                           		{                                                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004656   0e01     MOVLW     0x1            			Rx_2_Queue_Empty = TRUE;                                                      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004658   6f0e     MOVWF     0xe,0x1                                                                                         
                                           		}                                                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// okay, we're done using Rx_2_Queue_Write_Index, so turn the serial port      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// interrupt back on.                                                          C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
00465a   8aa3     BSF       0xa3,0x5,0x0   		PIE3bits.RC2IE = 1;                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                            		// Since we've just removed a byte to the queue, it can't possibly be full.   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// Again, this is quicker than using an if() statement every time              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
00465c   6b0d     CLRF      0xd,0x1        		Rx_2_Queue_Full = FALSE;                                                       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// return the data                                                             C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
00465e   50df     MOVF      0xdf,0x0,0x0   		return(byte);                                                                  C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004660   d000     BRA       0x4662                                                                                          
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004662   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004664   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004666   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004668   ffd9                                                                                                               
00466a   0012     RETURN    0x0                                                                                             
                                           #endif                                                                           C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	FUNCTION:		Write_Serial_Port_One()                                             C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	PURPOSE:		Sends a byte of data using serial port one.                          C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	CALLED FROM:                                                                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	PARAMETERS:		unsigned char                                                     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	RETURNS:		nothing                                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	COMMENTS:		If you don't initialize the serial port before calling              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					this function, the robot controller will stop functioning                  C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					and you'll get the much dreaded red-light-of-death. This                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					is because the while() statement below is waiting for the                  C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					transmit circuitry to send another byte, but if the serial                 C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					port hasn't been configured, nothing will be transmitted                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					and we'll be stuck in the while() loop.                                    C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					This function will not be included in the build unless                     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_ONE_TX is #define'd in serial_ports.h                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_ONE_TX                                                 C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
00466c   cfd9     MOVFF     0xfd9,0xfe6    void Write_Serial_Port_One(unsigned char byte)                                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
00466e   ffe6                                                                                                               
004670   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004672   ffd9                                                                                                               
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// if the queue is full, wait here until space is available                     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004674   0102     MOVLB     0x2            	while(Tx_1_Queue_Full);                                                         C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004676   5108     MOVF      0x8,0x0,0x1                                                                                     
004678   e001     BZ        0x467c                                                                                          
00467a   d7fc     BRA       0x4674                                                                                          
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// put the byte on the circular queue                                           C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
00467c   510b     MOVF      0xb,0x0,0x1    	Tx_1_Queue[Tx_1_Queue_Write_Index] = byte;                                      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
00467e   6aea     CLRF      0xea,0x0                                                                                        
004680   0f20     ADDLW     0x20                                                                                            
004682   6ee9     MOVWF     0xe9,0x0                                                                                        
004684   0e01     MOVLW     0x1                                                                                             
004686   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
004688   0efe     MOVLW     0xfe                                                                                            
00468a   cfdb     MOVFF     0xfdb,0xfef                                                                                     
00468c   ffef                                                                                                               
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// increment the queue byte count                                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
00468e   2b0c     INCF      0xc,0x1,0x1    	Tx_1_Queue_Byte_Count++;                                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// increment the write pointer                                                  C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004690   2b0b     INCF      0xb,0x1,0x1    	Tx_1_Queue_Write_Index++;                                                       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// If the index pointer overflowed, cut-off the high-order bit. Doing this      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// every time is quicker than checking for overflow every time with an if()     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// statement and only then occasionally setting it back to zero. For this       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// to work, the queue size must be a power of 2 (e.g., 16,32,64,128...).        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004692   0e1f     MOVLW     0x1f           	Tx_1_Queue_Write_Index &= TX_1_QUEUE_INDEX_MASK;                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004694   170b     ANDWF     0xb,0x1,0x1                                                                                     
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// since we're about to use the Tx_1_Queue_Write_Index variable, which can      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// also be modified in the interrupt service routine, let's briefly disable     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// the serial port interrupt to make sure that Tx_1_Queue_Write_Index doesn't   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// get altered while we're using it.                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004696   989d     BCF       0x9d,0x4,0x0   	PIE1bits.TX1IE = 0;                                                             C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// is the circular queue now full?                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004698   510b     MOVF      0xb,0x0,0x1    	if(Tx_1_Queue_Read_Index == Tx_1_Queue_Write_Index)                             C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
00469a   5d0a     SUBWF     0xa,0x0,0x1                                                                                     
00469c   e102     BNZ       0x46a2                                                                                          
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
00469e   0e01     MOVLW     0x1            		Tx_1_Queue_Full = TRUE;                                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0046a0   6f08     MOVWF     0x8,0x1                                                                                         
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// okay, we're done using Tx_Queue_Write_Index, so turn the serial port         C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// interrupt back on.                                                           C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0046a2   889d     BSF       0x9d,0x4,0x0   	PIE1bits.TX1IE = 1;                                                             C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// Since we've just added a byte to the queue, it can't possibly be empty.      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// Again, this is quicker than using an if() statement every time               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0046a4   6b09     CLRF      0x9,0x1        	Tx_1_Queue_Empty = FALSE;                                                       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0046a6   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0046a8   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0046aa   ffd9                                                                                                               
0046ac   0012     RETURN    0x0                                                                                             
                                           #endif                                                                           C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	FUNCTION:		Write_Serial_Port_Two()                                             C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	PURPOSE:		Sends a byte of data using serial port two.                          C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	CALLED FROM:                                                                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	PARAMETERS:		unsigned char                                                     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	RETURNS:		nothing                                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	COMMENTS:		If you don't initialize the serial port before calling              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					this function, the robot controller will stop functioning                  C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					and you'll get the much dreaded red-light-of-death. This                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					is because the while() statement below is waiting for the                  C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					transmit circuitry to send another byte, but if the serial                 C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					port hasn't been configured, nothing will be transmitted                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					and we'll be stuck in the while() loop.                                    C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					This function will not be included in the build unless                     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_TWO_TX is #define'd in serial_ports.h                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_TWO_TX                                                 C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0046ae   cfd9     MOVFF     0xfd9,0xfe6    void Write_Serial_Port_Two(unsigned char byte)                                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0046b0   ffe6                                                                                                               
0046b2   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0046b4   ffd9                                                                                                               
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// if the queue is full, wait here until space is available                     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0046b6   0102     MOVLB     0x2            	while(Tx_2_Queue_Full);                                                         C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0046b8   5114     MOVF      0x14,0x0,0x1                                                                                    
0046ba   e001     BZ        0x46be                                                                                          
0046bc   d7fc     BRA       0x46b6                                                                                          
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// put the byte on the circular queue                                           C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0046be   5117     MOVF      0x17,0x0,0x1   	Tx_2_Queue[Tx_2_Queue_Write_Index] = byte;                                      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0046c0   6aea     CLRF      0xea,0x0                                                                                        
0046c2   0f60     ADDLW     0x60                                                                                            
0046c4   6ee9     MOVWF     0xe9,0x0                                                                                        
0046c6   0e01     MOVLW     0x1                                                                                             
0046c8   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
0046ca   0efe     MOVLW     0xfe                                                                                            
0046cc   cfdb     MOVFF     0xfdb,0xfef                                                                                     
0046ce   ffef                                                                                                               
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// increment the queue byte count                                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0046d0   2b18     INCF      0x18,0x1,0x1   	Tx_2_Queue_Byte_Count++;                                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// increment the write pointer                                                  C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0046d2   2b17     INCF      0x17,0x1,0x1   	Tx_2_Queue_Write_Index++;                                                       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// If the index pointer overflowed, cut-off the high-order bit. Doing this      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// every time is quicker than checking for overflow every time with an if()     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// statement and only then occasionally setting it back to zero. For this       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// to work, the queue size must be a power of 2 (e.g., 16,32,64,128...).        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0046d4   0e1f     MOVLW     0x1f           	Tx_2_Queue_Write_Index &= TX_2_QUEUE_INDEX_MASK;                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0046d6   1717     ANDWF     0x17,0x1,0x1                                                                                    
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// since we're about to use the Tx_2_Queue_Write_Index variable, which can      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// also be modified in the interrupt service routine, let's briefly disable     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// the serial port interrupt to make sure that Tx_2_Queue_Write_Index doesn't   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// get altered while we're using it.                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0046d8   98a3     BCF       0xa3,0x4,0x0   	PIE3bits.TX2IE = 0;                                                             C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// is the circular queue now full?                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0046da   5117     MOVF      0x17,0x0,0x1   	if(Tx_2_Queue_Read_Index == Tx_2_Queue_Write_Index)                             C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0046dc   5d16     SUBWF     0x16,0x0,0x1                                                                                    
0046de   e102     BNZ       0x46e4                                                                                          
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0046e0   0e01     MOVLW     0x1            		Tx_2_Queue_Full = TRUE;                                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0046e2   6f14     MOVWF     0x14,0x1                                                                                        
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// okay, we're done using Tx_2_Queue_Write_Index, so turn the serial port       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// interrupt back on.                                                           C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0046e4   88a3     BSF       0xa3,0x4,0x0   	PIE3bits.TX2IE = 1;                                                             C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// Since we've just added a byte to the queue, it can't possibly be empty.      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	// Again, this is quicker than using an if() statement every time               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0046e6   6b15     CLRF      0x15,0x1       	Tx_2_Queue_Empty = FALSE;                                                       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0046e8   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0046ea   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0046ec   ffd9                                                                                                               
0046ee   0012     RETURN    0x0                                                                                             
                                           #endif                                                                           C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	FUNCTION:		Rx_1_Int_Handler()                                                  C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	PURPOSE:		Serial port one new data interrupt handler.                          C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	CALLED FROM:	user_routines_fast()                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	PARAMETERS:		None                                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	RETURNS:		Nothing                                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	COMMENTS:		If the interrupt handler was installed correctly, this              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					function will be called every time a new byte of data                      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					is received by serial port one.                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					This function will not be included in the build unless                     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_ONE_RX is #define'd in serial_ports.h		                 C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_ONE_RX                                                 C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           void Rx_1_Int_Handler(void)                                                      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0046f0   0102     MOVLB     0x2            	if(Rx_1_Queue_Full)                                                             C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0046f2   5101     MOVF      0x1,0x0,0x1                                                                                     
0046f4   e002     BZ        0x46fa                                                                                          
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// just turn off the serial port interrupt if we can't store any more data.    C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// the interrupt will be re-enabled within the Receive_Byte() function when    C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// more data is read.                                                          C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0046f6   9a9d     BCF       0x9d,0x5,0x0   		PIE1bits.RC1IE = 0;                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0046f8   d019     BRA       0x472c         	else                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// put the byte on the circular queue                                          C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0046fa   5104     MOVF      0x4,0x0,0x1    		Rx_1_Queue[Rx_1_Queue_Write_Index] = RCREG1;                                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0046fc   6aea     CLRF      0xea,0x0                                                                                        
0046fe   0f00     ADDLW     0x0                                                                                             
004700   6ee9     MOVWF     0xe9,0x0                                                                                        
004702   0e01     MOVLW     0x1                                                                                             
004704   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
004706   cfae     MOVFF     0xfae,0xfef                                                                                     
004708   ffef                                                                                                               
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// if the interrupt handler was disabled while data was being received,        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// data may have backed-up in the receiver circuitry, causing an overrun       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// condition. So let's check the OERR bit to see if this has happened          C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// and if it has, we'll need to reset the serial port receiver circuitry       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// to get data flowing again.                                                  C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
00470a   a2ab     BTFSS     0xab,0x1,0x0   		if(RCSTA1bits.OERR)                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
00470c   d003     BRA       0x4714                                                                                          
                                           		{                                                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           			// reset by turning off the receiver circuitry, then...                       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
00470e   98ab     BCF       0xab,0x4,0x0   			RCSTA1bits.CREN = 0;                                                          C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           			                                                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           			// ...turn it back on                                                         C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004710   88ab     BSF       0xab,0x4,0x0   			RCSTA1bits.CREN = 1;                                                          C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           			// indicate that we've had an error                                           C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004712   2b06     INCF      0x6,0x1,0x1    			RX_1_Overrun_Errors++;                                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		}                                                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// if incoming data gets misaligned and the receiver doesn't receive a         C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// stop bit where it expects to detect it, the receiver circuitry will         C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// set the FERR bit to indicate that it's received corrupted data. The         C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// likely reason for this is an incorrectly set baud rate on either the        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// receiver or transmitter end.                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004714   b4ab     BTFSC     0xab,0x2,0x0   		if(RCSTA1bits.FERR)                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		{                                                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004716   2b07     INCF      0x7,0x1,0x1    			RX_1_Framing_Errors++;                                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		}                                                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// increment the queue byte count                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004718   2b05     INCF      0x5,0x1,0x1    		Rx_1_Queue_Byte_Count++;                                                       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// increment the write pointer                                                 C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
00471a   2b04     INCF      0x4,0x1,0x1    		Rx_1_Queue_Write_Index++;                                                      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		                                                                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// If the index pointer overflowed, cut-off the high-order bit. Doing this     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// every time is quicker than checking for overflow every time with an if()    C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// statement and only then occasionally setting it back to zero. For this      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// to work, the queue size must be a power of 2 (e.g., 16,32,64,128...).       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
00471c   0e1f     MOVLW     0x1f           		Rx_1_Queue_Write_Index &= RX_1_QUEUE_INDEX_MASK;                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
00471e   1704     ANDWF     0x4,0x1,0x1                                                                                     
                                           		                                                                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// is the circular queue now full?                                             C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004720   5104     MOVF      0x4,0x0,0x1    		if(Rx_1_Queue_Read_Index == Rx_1_Queue_Write_Index)                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004722   5d03     SUBWF     0x3,0x0,0x1                                                                                     
004724   e102     BNZ       0x472a                                                                                          
                                           		{                                                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004726   0e01     MOVLW     0x1            			Rx_1_Queue_Full = TRUE;                                                       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004728   6f01     MOVWF     0x1,0x1                                                                                         
                                           		}                                                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		                                                                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// Since we've just added a byte to the queue, it can't possibly be empty.     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// Again, this is quicker than using an if() statement every time              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
00472a   6b02     CLRF      0x2,0x1        		Rx_1_Queue_Empty = FALSE;                                                      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
00472c   0012     RETURN    0x0            }                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           #endif                                                                           C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	FUNCTION:		Rx_2_Int_Handler()                                                  C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	PURPOSE:		Serial port two new data interrupt handler.		                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	CALLED FROM:	user_routines_fast()                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	PARAMETERS:		None                                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	RETURNS:		Nothing                                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	COMMENTS:		If the interrupt handler was installed correctly, this              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					function will be called every time a new byte of data                      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					is received by serial port two.                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					This function will not be included in the build unless                     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_TWO_RX is #define'd in serial_ports.h 		                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_TWO_RX                                                 C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           void Rx_2_Int_Handler(void)                                                      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
00472e   0102     MOVLB     0x2            	if(Rx_2_Queue_Full)                                                             C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004730   510d     MOVF      0xd,0x0,0x1                                                                                     
004732   e002     BZ        0x4738                                                                                          
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// just turn off the serial port interrupt if we can't store any more data.    C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// the interrupt will be re-enabled within the Receive_Byte() function when    C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// more data is read.                                                          C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004734   9aa3     BCF       0xa3,0x5,0x0   		PIE3bits.RC2IE = 0;                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004736   d019     BRA       0x476a         	else                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// put the byte on the circular queue                                          C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004738   5110     MOVF      0x10,0x0,0x1   		Rx_2_Queue[Rx_2_Queue_Write_Index] = RCREG2;                                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
00473a   6aea     CLRF      0xea,0x0                                                                                        
00473c   0f40     ADDLW     0x40                                                                                            
00473e   6ee9     MOVWF     0xe9,0x0                                                                                        
004740   0e01     MOVLW     0x1                                                                                             
004742   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
004744   cf6e     MOVFF     0xf6e,0xfef                                                                                     
004746   ffef                                                                                                               
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// if the interrupt handler was disabled while data was being received,        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// data may have backed-up in the receiver circuitry, causing an overrun       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// condition. So let's check the OERR bit to see if this has happened          C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// and if it has, we'll need to reset the serial port receiver circuitry       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// to get data flowing again.                                                  C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004748   a26b     BTFSS     0x6b,0x1,0x0   		if(RCSTA2bits.OERR)                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
00474a   d003     BRA       0x4752                                                                                          
                                           		{                                                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           			// reset by turning off the receiver circuitry, then...                       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
00474c   986b     BCF       0x6b,0x4,0x0   			RCSTA2bits.CREN = 0;                                                          C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           			                                                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           			// ...turn it back on                                                         C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
00474e   886b     BSF       0x6b,0x4,0x0   			RCSTA2bits.CREN = 1;                                                          C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           			// indicate that we've had an error                                           C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004750   2b12     INCF      0x12,0x1,0x1   			RX_2_Overrun_Errors++;                                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		}                                                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// if incoming data gets misaligned and the receiver doesn't receive a         C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// stop bit where it expects to detect it, the receiver circuitry will         C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// set the FERR bit to indicate that it's received corrupted data. The         C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// likely reason for this is an incorrectly set baud rate on either the        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// receiver or transmitter end.                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004752   b46b     BTFSC     0x6b,0x2,0x0   		if(RCSTA2bits.FERR)                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		{                                                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004754   2b13     INCF      0x13,0x1,0x1   			RX_2_Framing_Errors++;                                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		}                                                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// increment the queue byte count                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004756   2b11     INCF      0x11,0x1,0x1   		Rx_2_Queue_Byte_Count++;                                                       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// increment the write pointer                                                 C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004758   2b10     INCF      0x10,0x1,0x1   		Rx_2_Queue_Write_Index++;                                                      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// If the index pointer overflowed, cut-off the high-order bit. Doing this     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// every time is quicker than checking for overflow every time with an if()    C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// statement and only then occasionally setting it back to zero. For this      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// to work, the queue size must be a power of 2 (e.g., 16,32,64,128...).       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
00475a   0e1f     MOVLW     0x1f           		Rx_2_Queue_Write_Index &= RX_2_QUEUE_INDEX_MASK;                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
00475c   1710     ANDWF     0x10,0x1,0x1                                                                                    
                                           		                                                                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// is the circular queue now full?                                             C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
00475e   5110     MOVF      0x10,0x0,0x1   		if(Rx_2_Queue_Read_Index == Rx_2_Queue_Write_Index)                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004760   5d0f     SUBWF     0xf,0x0,0x1                                                                                     
004762   e102     BNZ       0x4768                                                                                          
                                           		{                                                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004764   0e01     MOVLW     0x1            			Rx_2_Queue_Full = TRUE;                                                       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004766   6f0d     MOVWF     0xd,0x1                                                                                         
                                           		}                                                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		                                                                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// Since we've just added a byte to the queue, it can't possibly be empty.     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// Again, this is quicker than using an if() statement every time              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004768   6b0e     CLRF      0xe,0x1        		Rx_2_Queue_Empty = FALSE;                                                      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
00476a   0012     RETURN    0x0            }                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           #endif                                                                           C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	FUNCTION:		Tx_1_Int_Handler()                                                  C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	PURPOSE:		Serial port one empty transmit buffer interrupt handler.             C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	CALLED FROM:	user_routines_fast()                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	PARAMETERS:		None                                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	RETURNS:		Nothing                                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	COMMENTS:		If the interrupt handler was installed correctly, this              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					function will be called every time serial port one is                      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					ready to start sending a byte of data.                                     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					This function will not be included in the build unless                     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_ONE_TX is #define'd in serial_ports.h 		                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_ONE_TX                                                 C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           void Tx_1_Int_Handler(void)                                                      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
00476c   0102     MOVLB     0x2            	if(Tx_1_Queue_Empty)                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
00476e   5109     MOVF      0x9,0x0,0x1                                                                                     
004770   e002     BZ        0x4776                                                                                          
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// just turn off the serial port interrupt if we don't have data to send.      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// the interrupt will be re-enabled within the Send_Byte() function when       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// more data is sent.                                                          C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004772   989d     BCF       0x9d,0x4,0x0   		PIE1bits.TX1IE = 0;                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004774   d012     BRA       0x479a         	else                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// get a byte from the circular queue and send it to the USART                 C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004776   510a     MOVF      0xa,0x0,0x1    		TXREG1 = Tx_1_Queue[Tx_1_Queue_Read_Index];                                    C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004778   6aea     CLRF      0xea,0x0                                                                                        
00477a   0f20     ADDLW     0x20                                                                                            
00477c   6ee9     MOVWF     0xe9,0x0                                                                                        
00477e   0e01     MOVLW     0x1                                                                                             
004780   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
004782   50ef     MOVF      0xef,0x0,0x0                                                                                    
004784   6ead     MOVWF     0xad,0x0                                                                                        
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// decrement the queue byte count                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004786   070c     DECF      0xc,0x1,0x1    		Tx_1_Queue_Byte_Count--;                                                       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// increment the read pointer                                                  C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004788   2b0a     INCF      0xa,0x1,0x1    		Tx_1_Queue_Read_Index++;                                                       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// If the index pointer overflowed, cut-off the high-order bit. Doing this     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// every time is quicker than checking for overflow every time with an if()    C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// statement and only then occasionally setting it back to zero. For this      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// to work, the queue size must be a power of 2 (e.g., 16,32,64,128...).       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
00478a   0e1f     MOVLW     0x1f           		Tx_1_Queue_Read_Index &= TX_1_QUEUE_INDEX_MASK;                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
00478c   170a     ANDWF     0xa,0x1,0x1                                                                                     
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// is the circular queue now empty?                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
00478e   510b     MOVF      0xb,0x0,0x1    		if(Tx_1_Queue_Read_Index == Tx_1_Queue_Write_Index)                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004790   5d0a     SUBWF     0xa,0x0,0x1                                                                                     
004792   e102     BNZ       0x4798                                                                                          
                                           		{                                                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004794   0e01     MOVLW     0x1            			Tx_1_Queue_Empty = TRUE;                                                      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004796   6f09     MOVWF     0x9,0x1                                                                                         
                                           		}                                                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                            		// Since we've just removed a byte from the queue, it can't possibly be full. C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// Again, this is quicker than using an if() statement every time              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
004798   6b08     CLRF      0x8,0x1        		Tx_1_Queue_Full = FALSE;                                                       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
00479a   0012     RETURN    0x0            }                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           #endif                                                                           C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	FUNCTION:		Tx_2_Int_Handler()                                                  C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	PURPOSE:		Serial port two empty transmit buffer interrupt handler.		           C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	CALLED FROM:	user_routines_fast()                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	PARAMETERS:		None                                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	RETURNS:		Nothing                                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	COMMENTS:		If the interrupt handler was installed correctly, this              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					function will be called every time serial port two is                      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					ready to start sending a byte of data.                                     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					This function will not be included in the build unless                     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_TWO_TX is #define'd in serial_ports.h 			               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_TWO_TX                                                 C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           void Tx_2_Int_Handler(void)                                                      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
00479c   0102     MOVLB     0x2            	if(Tx_2_Queue_Empty)                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
00479e   5115     MOVF      0x15,0x0,0x1                                                                                    
0047a0   e002     BZ        0x47a6                                                                                          
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// just turn off the serial port interrupt if we don't have data to send.      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// the interrupt will be re-enabled within the Send_Byte() function when       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// more data is sent.                                                          C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0047a2   98a3     BCF       0xa3,0x4,0x0   		PIE3bits.TX2IE = 0;                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0047a4   d012     BRA       0x47ca         	else                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// get a byte from the circular queue and send it to the USART                 C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0047a6   5116     MOVF      0x16,0x0,0x1   		TXREG2 = Tx_2_Queue[Tx_2_Queue_Read_Index];                                    C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0047a8   6aea     CLRF      0xea,0x0                                                                                        
0047aa   0f60     ADDLW     0x60                                                                                            
0047ac   6ee9     MOVWF     0xe9,0x0                                                                                        
0047ae   0e01     MOVLW     0x1                                                                                             
0047b0   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
0047b2   50ef     MOVF      0xef,0x0,0x0                                                                                    
0047b4   6e6d     MOVWF     0x6d,0x0                                                                                        
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// decrement the queue byte count                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0047b6   0718     DECF      0x18,0x1,0x1   		Tx_2_Queue_Byte_Count--;                                                       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// increment the read pointer                                                  C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0047b8   2b16     INCF      0x16,0x1,0x1   		Tx_2_Queue_Read_Index++;                                                       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// If the index pointer overflowed, cut-off the high-order bit. Doing this     C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// every time is quicker than checking for overflow every time with an if()    C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// statement and only then occasionally setting it back to zero. For this      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// to work, the queue size must be a power of 2 (e.g., 16,32,64,128...).       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0047ba   0e1f     MOVLW     0x1f           		Tx_2_Queue_Read_Index &= TX_2_QUEUE_INDEX_MASK;                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0047bc   1716     ANDWF     0x16,0x1,0x1                                                                                    
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// is the circular queue now empty?                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0047be   5117     MOVF      0x17,0x0,0x1   		if(Tx_2_Queue_Read_Index == Tx_2_Queue_Write_Index)                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0047c0   5d16     SUBWF     0x16,0x0,0x1                                                                                    
0047c2   e102     BNZ       0x47c8                                                                                          
                                           		{                                                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0047c4   0e01     MOVLW     0x1            			Tx_2_Queue_Empty = TRUE;                                                      C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0047c6   6f15     MOVWF     0x15,0x1                                                                                        
                                           		}                                                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                            		// Since we've just removed a byte from the queue, it can't possibly be full. C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// Again, this is quicker than using an if() statement every time              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0047c8   6b14     CLRF      0x14,0x1       		Tx_2_Queue_Full = FALSE;                                                       C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0047ca   0012     RETURN    0x0            }                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           #endif                                                                           C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	FUNCTION:		_user_putc()                                                        C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	PURPOSE:		putc() interface to C18 2.4 output stream functions		                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	CALLED FROM:                                                                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	PARAMETERS:		None                                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	RETURNS:		Nothing                                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *	COMMENTS:			                                                                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0047cc   cfd9     MOVFF     0xfd9,0xfe6    void _user_putc(unsigned char byte)                                              C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0047ce   ffe6                                                                                                               
0047d0   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0047d2   ffd9                                                                                                               
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0047d4   0102     MOVLB     0x2            	if(stdout_serial_port == NUL)                                                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0047d6   5100     MOVF      0x0,0x0,0x1                                                                                     
0047d8   e101     BNZ       0x47dc                                                                                          
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// send the data to the bit bucket                                             C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	#ifdef ENABLE_SERIAL_PORT_ONE_TX                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0047da   d010     BRA       0x47fc         	else if(stdout_serial_port == SERIAL_PORT_ONE)                                  C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0047dc   0500     DECF      0x0,0x0,0x1                                                                                     
0047de   e106     BNZ       0x47ec                                                                                          
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// send the data to serial port one                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0047e0   0efe     MOVLW     0xfe           		Write_Serial_Port_One(byte);                                                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0047e2   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0047e4   ffe6                                                                                                               
0047e6   df42     RCALL     0x466c                                                                                          
0047e8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	#endif                                                                          C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	#ifdef ENABLE_SERIAL_PORT_TWO_TX                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0047ea   d008     BRA       0x47fc         	else if(stdout_serial_port == SERIAL_PORT_TWO)                                  C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0047ec   0e02     MOVLW     0x2                                                                                             
0047ee   5d00     SUBWF     0x0,0x0,0x1                                                                                     
0047f0   e105     BNZ       0x47fc                                                                                          
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           		// send the data to serial port two                                            C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0047f2   0efe     MOVLW     0xfe           		Write_Serial_Port_Two(byte);                                                   C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0047f4   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0047f6   ffe6                                                                                                               
0047f8   df5a     RCALL     0x46ae                                                                                          
0047fa   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
                                           	#endif                                                                          C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0047fc   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mort\mort_code_2006_PrePalmetto\serial_ports.c
0047fe   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004800   ffd9                                                                                                               
004802   0012     RETURN    0x0                                                                                             
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           * FILE NAME: user_routines.c <FRC VERSION>                                       C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           * DESCRIPTION:                                                                   C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           *  This file contains the default mappings of inputs                             C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           *  (like switches, joysticks, and buttons) to outputs on the RC.                 C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           * USAGE:                                                                         C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           *  You can either modify this file to fit your needs, or remove it from your     C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           *  project and replace it with a modified copy.                                  C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           #include <stdio.h>                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           #include "ifi_aliases.h"                                                         C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           #include "ifi_default.h"                                                         C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           #include "ifi_utilities.h"                                                       C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           #include "user_routines.h"                                                       C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           #include "serial_ports.h"                                                        C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           #include "camera.h"                                                              C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           #include "terminal.h"                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           #include "MORT_DEFINES.h"                                                        C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           #include "MORT_TIMERS.h"                                                         C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           #include "MORT_TRACKING.h"                                                       C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           #include "math.h"                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           #include "adc.h"                                                                 C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           /************************************************************************************* C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                              MORT VARIABLES                                   C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           *************************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           //DO NOT CHANGE		(Due to joystick configuration this year, you can ONLY use dual joysticks) C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           unsigned char 			dual_joysticks = 1;					// Set to 1 for dual joystick control   C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           unsigned char 			Accelleration  = 3;					// Set to non ZERO to enable accell limiting, smaller value will slow accell/decell. C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           int						right_wheel_save = 127;				// Used in SoftStartWheels                   C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           int						left_wheel_save = 127;				// Used in SoftStartWheels                    C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           int						right_wheel_save_dir = 127;			// Used in Direction_Change               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           int						left_wheel_save_dir = 127;			// Used in Direction_Change                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           static unsigned char 	count = 0;							// Used to output displays at different intervals C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           extern unsigned char	tracking_lock;				// 1 = Locked on target , 0 = Not locked on target (declared in tracking.c) C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           extern unsigned char	camera_failed;				// Do we have packets? (declared in camera.c) C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           int 					camera_failed_count = 0;	// Count how many time the camera fails to return a packet C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           unsigned char	Manual_Toggle_State = 0;			// Toggle manual override               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           unsigned char	Manual_Toggle_Debounce = 0;			// Debounce so you have to hold the button to override C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           unsigned char	Manual_Toggle_State_Change = 1;		// Are we allowed to change the state of the toggle? C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           unsigned char	Collector_Debounce = 0;				// Debounce to make sure our collector is full, and we did not just see a ball C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           unsigned char	Gravity_Debounce = 0;				// Debounce to make sure the gravity is full, and we did not just see a ball C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           unsigned char	Feed_Debounce = 0;					//                                          C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           unsigned char	Shooter_Debounce = 0;				// Debounce to turn the wheel on first, then turn the belt to feed it C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           extern long Timer1_Count;                                                        C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           /*** DEFINE USER VARIABLES AND INITIALIZE THEM HERE ***/                         C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           /* EXAMPLES: (see MPLAB C18 User's Guide, p.9 for all types)                     C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           unsigned char wheel_revolutions = 0; (can vary from 0 to 255)                    C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           unsigned int  delay_count = 7;       (can vary from 0 to 65,535)                 C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           int           angle_deviation = 142; (can vary from -32,768 to 32,767)           C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           unsigned long very_big_counter = 0;  (can vary from 0 to 4,294,967,295)          C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           */                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           * FUNCTION NAME: Limit_Switch_Max                                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           * PURPOSE:       Sets a PWM value to neutral (127) if it exceeds 127 and the     C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           *                limit switch is on.                                             C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           * CALLED FROM:   this file                                                       C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           * ARGUMENTS:                                                                     C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           *     Argument       Type             IO   Description                           C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           *     --------       -------------    --   -----------                           C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           *     switch_state   unsigned char    I    limit switch state                    C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           *     *input_value   pointer           O   points to PWM byte value to be limited C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           * RETURNS:       void                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\user_routines.c
00088c   cfd9     MOVFF     0xfd9,0xfe6    void Limit_Switch_Max(unsigned char switch_state, unsigned char *input_value)    C:\mort\mort_code_2006_PrePalmetto\user_routines.c
00088e   ffe6                                                                                                               
000890   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
000892   ffd9                                                                                                               
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000894   0efe     MOVLW     0xfe             if (switch_state == CLOSED)                                                    C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000896   50db     MOVF      0xdb,0x0,0x0                                                                                    
000898   e111     BNZ       0x8bc                                                                                           
                                             {                                                                              C:\mort\mort_code_2006_PrePalmetto\user_routines.c
00089a   0efc     MOVLW     0xfc               if(*input_value > 127)                                                       C:\mort\mort_code_2006_PrePalmetto\user_routines.c
00089c   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
00089e   ffe9                                                                                                               
0008a0   0efd     MOVLW     0xfd                                                                                            
0008a2   cfdb     MOVFF     0xfdb,0xfea                                                                                     
0008a4   ffea                                                                                                               
0008a6   50ef     MOVF      0xef,0x0,0x0                                                                                    
0008a8   087f     SUBLW     0x7f                                                                                            
0008aa   e208     BC        0x8bc                                                                                           
0008ac   0efc     MOVLW     0xfc                 *input_value = 127;                                                        C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0008ae   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
0008b0   ffe9                                                                                                               
0008b2   0efd     MOVLW     0xfd                                                                                            
0008b4   cfdb     MOVFF     0xfdb,0xfea                                                                                     
0008b6   ffea                                                                                                               
0008b8   0e7f     MOVLW     0x7f                                                                                            
0008ba   6eef     MOVWF     0xef,0x0                                                                                        
                                             }                                                                              C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0008bc   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0008be   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0008c0   ffd9                                                                                                               
0008c2   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           * FUNCTION NAME: Limit_Switch_Min                                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           * PURPOSE:       Sets a PWM value to neutral (127) if it's less than 127 and the C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           *                limit switch is on.                                             C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           * CALLED FROM:   this file                                                       C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           * ARGUMENTS:                                                                     C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           *     Argument       Type             IO   Description                           C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           *     --------       -------------    --   -----------                           C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           *     switch_state   unsigned char    I    limit switch state                    C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           *     *input_value   pointer           O   points to PWM byte value to be limited C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           * RETURNS:       void                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0008c4   cfd9     MOVFF     0xfd9,0xfe6    void Limit_Switch_Min(unsigned char switch_state, unsigned char *input_value)    C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0008c6   ffe6                                                                                                               
0008c8   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0008ca   ffd9                                                                                                               
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0008cc   0efe     MOVLW     0xfe             if (switch_state == CLOSED)                                                    C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0008ce   50db     MOVF      0xdb,0x0,0x0                                                                                    
0008d0   e113     BNZ       0x8f8                                                                                           
                                             {                                                                              C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0008d2   0efc     MOVLW     0xfc               if(*input_value < 127)                                                       C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0008d4   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
0008d6   ffe9                                                                                                               
0008d8   0efd     MOVLW     0xfd                                                                                            
0008da   cfdb     MOVFF     0xfdb,0xfea                                                                                     
0008dc   ffea                                                                                                               
0008de   cfef     MOVFF     0xfef,0x0                                                                                       
0008e0   f000                                                                                                               
0008e2   0e7f     MOVLW     0x7f                                                                                            
0008e4   5c00     SUBWF     0x0,0x0,0x0                                                                                     
0008e6   e208     BC        0x8f8                                                                                           
0008e8   0efc     MOVLW     0xfc                 *input_value = 127;                                                        C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0008ea   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
0008ec   ffe9                                                                                                               
0008ee   0efd     MOVLW     0xfd                                                                                            
0008f0   cfdb     MOVFF     0xfdb,0xfea                                                                                     
0008f2   ffea                                                                                                               
0008f4   0e7f     MOVLW     0x7f                                                                                            
0008f6   6eef     MOVWF     0xef,0x0                                                                                        
                                             }                                                                              C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0008f8   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0008fa   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0008fc   ffd9                                                                                                               
0008fe   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           * FUNCTION NAME: Limit_Mix                                                       C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           * PURPOSE:       Limits the mixed value for one joystick drive.                  C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           * CALLED FROM:   Default_Routine, this file                                      C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           * ARGUMENTS:                                                                     C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           *     Argument             Type    IO   Description                              C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           *     --------             ----    --   -----------                              C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           *     intermediate_value    int    I                                             C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           * RETURNS:       unsigned char                                                   C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000900   cfd9     MOVFF     0xfd9,0xfe6    unsigned char Limit_Mix (int intermediate_value)                                 C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000902   ffe6                                                                                                               
000904   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
000906   ffd9                                                                                                               
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                             static int limited_value;                                                      C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000908   0efd     MOVLW     0xfd             if (intermediate_value < 2000)                                                 C:\mort\mort_code_2006_PrePalmetto\user_routines.c
00090a   cfdb     MOVFF     0xfdb,0x0                                                                                       
00090c   f000                                                                                                               
00090e   0efe     MOVLW     0xfe                                                                                            
000910   cfdb     MOVFF     0xfdb,0x1                                                                                       
000912   f001                                                                                                               
000914   90d8     BCF       0xd8,0x0,0x0                                                                                    
000916   5001     MOVF      0x1,0x0,0x0                                                                                     
000918   e604     BN        0x922                                                                                           
00091a   0ed0     MOVLW     0xd0                                                                                            
00091c   5c00     SUBWF     0x0,0x0,0x0                                                                                     
00091e   0e07     MOVLW     0x7                                                                                             
000920   5801     SUBWFB    0x1,0x0,0x0                                                                                     
000922   e206     BC        0x930                                                                                           
                                             {                                                                              C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000924   0102     MOVLB     0x2                limited_value = 2000;                                                        C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000926   0ed0     MOVLW     0xd0                                                                                            
000928   6f66     MOVWF     0x66,0x1                                                                                        
00092a   0e07     MOVLW     0x7                                                                                             
00092c   6f67     MOVWF     0x67,0x1                                                                                        
                                             }                                                                              C:\mort\mort_code_2006_PrePalmetto\user_routines.c
00092e   d019     BRA       0x962            else if (intermediate_value > 2254)                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000930   0efd     MOVLW     0xfd                                                                                            
000932   cfdb     MOVFF     0xfdb,0x0                                                                                       
000934   f000                                                                                                               
000936   0efe     MOVLW     0xfe                                                                                            
000938   cfdb     MOVFF     0xfdb,0x1                                                                                       
00093a   f001                                                                                                               
00093c   3401     RLCF      0x1,0x0,0x0                                                                                     
00093e   e204     BC        0x948                                                                                           
000940   5000     MOVF      0x0,0x0,0x0                                                                                     
000942   08ce     SUBLW     0xce                                                                                            
000944   0e08     MOVLW     0x8                                                                                             
000946   5401     SUBFWB    0x1,0x0,0x0                                                                                     
000948   e206     BC        0x956                                                                                           
                                             {                                                                              C:\mort\mort_code_2006_PrePalmetto\user_routines.c
00094a   0102     MOVLB     0x2                limited_value = 2254;                                                        C:\mort\mort_code_2006_PrePalmetto\user_routines.c
00094c   0ece     MOVLW     0xce                                                                                            
00094e   6f66     MOVWF     0x66,0x1                                                                                        
000950   0e08     MOVLW     0x8                                                                                             
000952   6f67     MOVWF     0x67,0x1                                                                                        
                                             }                                                                              C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000954   d006     BRA       0x962            else                                                                           C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                             {                                                                              C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000956   0efd     MOVLW     0xfd               limited_value = intermediate_value;                                          C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000958   cfdb     MOVFF     0xfdb,0x266                                                                                     
00095a   f266                                                                                                               
00095c   0efe     MOVLW     0xfe                                                                                            
00095e   cfdb     MOVFF     0xfdb,0x267                                                                                     
000960   f267                                                                                                               
                                             }                                                                              C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000962   c266     MOVFF     0x266,0x0        return (unsigned char) (limited_value - 2000);                                 C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000964   f000                                                                                                               
000966   c267     MOVFF     0x267,0x1                                                                                       
000968   f001                                                                                                               
00096a   0ed0     MOVLW     0xd0                                                                                            
00096c   5e00     SUBWF     0x0,0x1,0x0                                                                                     
00096e   0e07     MOVLW     0x7                                                                                             
000970   5a01     SUBWFB    0x1,0x1,0x0                                                                                     
000972   5000     MOVF      0x0,0x0,0x0                                                                                     
000974   d000     BRA       0x976                                                                                           
000976   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000978   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00097a   ffd9                                                                                                               
00097c   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           * FUNCTION NAME: User_Initialization                                             C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           * PURPOSE:       This routine is called first (and only once) in the Main function.   C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           *                You may modify and add to this function.                        C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           * CALLED FROM:   main.c                                                          C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           * ARGUMENTS:     none                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           * RETURNS:       void                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           void User_Initialization (void)                                                  C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
00097e   0ef0     MOVLW     0xf0             Set_Number_of_Analog_Channels(SIXTEEN_ANALOG);    /* DO NOT CHANGE! */         C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000980   6ee6     MOVWF     0xe6,0x0                                                                                        
000982   ece2     CALL      0x4bc4,0x0                                                                                      
000984   f025                                                                                                               
000986   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           /* FIRST: Set up the I/O pins you want to use as digital INPUTS. */              C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000988   8a93     BSF       0x93,0x5,0x0     digital_io_01 = digital_io_02 = digital_io_03 = digital_io_04 = INPUT;         C:\mort\mort_code_2006_PrePalmetto\user_routines.c
00098a   8893     BSF       0x93,0x4,0x0                                                                                    
00098c   8693     BSF       0x93,0x3,0x0                                                                                    
00098e   8493     BSF       0x93,0x2,0x0                                                                                    
000990   8299     BSF       0x99,0x1,0x0     digital_io_05 = digital_io_06 = digital_io_07 = digital_io_08 = INPUT;         C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000992   8099     BSF       0x99,0x0,0x0                                                                                    
000994   8e93     BSF       0x93,0x7,0x0                                                                                    
000996   8c93     BSF       0x93,0x6,0x0                                                                                    
000998   849a     BSF       0x9a,0x2,0x0     digital_io_09 = digital_io_10 = digital_io_11 = digital_io_12 = INPUT;         C:\mort\mort_code_2006_PrePalmetto\user_routines.c
00099a   829a     BSF       0x9a,0x1,0x0                                                                                    
00099c   8699     BSF       0x99,0x3,0x0                                                                                    
00099e   8499     BSF       0x99,0x2,0x0                                                                                    
0009a0   8a9a     BSF       0x9a,0x5,0x0     digital_io_13 = digital_io_14 = digital_io_15 = digital_io_16 = INPUT;         C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0009a2   889a     BSF       0x9a,0x4,0x0                                                                                    
0009a4   8094     BSF       0x94,0x0,0x0                                                                                    
0009a6   869a     BSF       0x9a,0x3,0x0                                                                                    
0009a8   8e9a     BSF       0x9a,0x7,0x0     digital_io_18 = INPUT;  /* Used for pneumatic pressure switch. */              C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                               /*                                                                           C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                Note: digital_io_01 = digital_io_02 = ... digital_io_04 = INPUT;            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                      is the same as the following:                                         C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                      digital_io_01 = INPUT;                                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                      digital_io_02 = INPUT;                                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                      ...                                                                   C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                      digital_io_04 = INPUT;                                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                               */                                                                           C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           /* SECOND: Set up the I/O pins you want to use as digital OUTPUTS. */            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0009aa   9c9a     BCF       0x9a,0x6,0x0     digital_io_17 = OUTPUT;    /* Example - Not used in Default Code. */           C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           /* THIRD: Initialize the values on the digital outputs. */                       C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0009ac   9c91     BCF       0x91,0x6,0x0     rc_dig_out17 = 0;                                                              C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           /* FOURTH: Set your initial PWM values.  Neutral is 127. */                      C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0009ae   0101     MOVLB     0x1              pwm01 = pwm02 = pwm03 = pwm04 = pwm05 = pwm06 = pwm07 = pwm08 = 127;           C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0009b0   0e7f     MOVLW     0x7f                                                                                            
0009b2   6f8b     MOVWF     0x8b,0x1                                                                                        
0009b4   c18b     MOVFF     0x18b,0x18a                                                                                     
0009b6   f18a                                                                                                               
0009b8   c18b     MOVFF     0x18b,0x189                                                                                     
0009ba   f189                                                                                                               
0009bc   c18b     MOVFF     0x18b,0x188                                                                                     
0009be   f188                                                                                                               
0009c0   c18b     MOVFF     0x18b,0x187                                                                                     
0009c2   f187                                                                                                               
0009c4   c18b     MOVFF     0x18b,0x186                                                                                     
0009c6   f186                                                                                                               
0009c8   c18b     MOVFF     0x18b,0x185                                                                                     
0009ca   f185                                                                                                               
0009cc   c18b     MOVFF     0x18b,0x184                                                                                     
0009ce   f184                                                                                                               
0009d0   6f93     MOVWF     0x93,0x1         pwm09 = pwm10 = pwm11 = pwm12 = pwm13 = pwm14 = pwm15 = pwm16 = 127;           C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0009d2   c193     MOVFF     0x193,0x192                                                                                     
0009d4   f192                                                                                                               
0009d6   c193     MOVFF     0x193,0x191                                                                                     
0009d8   f191                                                                                                               
0009da   c193     MOVFF     0x193,0x190                                                                                     
0009dc   f190                                                                                                               
0009de   c193     MOVFF     0x193,0x18f                                                                                     
0009e0   f18f                                                                                                               
0009e2   c193     MOVFF     0x193,0x18e                                                                                     
0009e4   f18e                                                                                                               
0009e6   c193     MOVFF     0x193,0x18d                                                                                     
0009e8   f18d                                                                                                               
0009ea   c193     MOVFF     0x193,0x18c                                                                                     
0009ec   f18c                                                                                                               
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           /* FIFTH: Set your PWM output types for PWM OUTPUTS 13-16.                       C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                             /*   Choose from these parameters for PWM 13-16 respectively:               */ C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                             /*     IFI_PWM  - Standard IFI PWM output generated with Generate_Pwms(...) */ C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                             /*     USER_CCP - User can use PWM pin as digital I/O or CCP pin.           */ C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0009ee   0e00     MOVLW     0x0              Setup_PWM_Output_Type(IFI_PWM,IFI_PWM,IFI_PWM,IFI_PWM);                        C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0009f0   6ee6     MOVWF     0xe6,0x0                                                                                        
0009f2   6ae6     CLRF      0xe6,0x0                                                                                        
0009f4   6ee6     MOVWF     0xe6,0x0                                                                                        
0009f6   6ae6     CLRF      0xe6,0x0                                                                                        
0009f8   6ee6     MOVWF     0xe6,0x0                                                                                        
0009fa   6ae6     CLRF      0xe6,0x0                                                                                        
0009fc   6ee6     MOVWF     0xe6,0x0                                                                                        
0009fe   6ae6     CLRF      0xe6,0x0                                                                                        
000a00   ec58     CALL      0x24b0,0x0                                                                                      
000a02   f012                                                                                                               
000a04   6ef5     MOVWF     0xf5,0x0                                                                                        
000a06   0e08     MOVLW     0x8                                                                                             
000a08   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
000a0a   50f5     MOVF      0xf5,0x0,0x0                                                                                    
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                             /*                                                                             C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                Example: The following would generate a 40KHz PWM with a 50% duty cycle on the CCP2 pin: C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                    CCP2CON = 0x3C;                                                         C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                    PR2 = 0xF9;                                                             C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                    CCPR2L = 0x7F;                                                          C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                    T2CON = 0;                                                              C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                    T2CONbits.TMR2ON = 1;                                                   C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                    Setup_PWM_Output_Type(USER_CCP,IFI_PWM,IFI_PWM,IFI_PWM);                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                             */                                                                             C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                             /* Add any other initialization code here. */                                  C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000a0c   ecf7     CALL      0x55ee,0x0     	Init_Timers();                                                                  C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000a0e   f02a                                                                                                               
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000a10   ec98     CALL      0x4530,0x0       	Init_Serial_Port_One();                                                       C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000a12   f022                                                                                                               
000a14   ecb1     CALL      0x4562,0x0       	Init_Serial_Port_Two();                                                       C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000a16   f022                                                                                                               
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000a18   ecd0     CALL      0x3da0,0x0       	Initialize_ADC();                                                             C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000a1a   f01e                                                                                                               
000a1c   ec20     CALL      0x2e40,0x0       	Restart_Camera();                                                             C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000a1e   f017                                                                                                               
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           #ifdef TERMINAL_SERIAL_PORT_1                                                    C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000a20   0102     MOVLB     0x2              stdout_serial_port = SERIAL_PORT_ONE;                                          C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000a22   0e01     MOVLW     0x1                                                                                             
000a24   6f00     MOVWF     0x0,0x1                                                                                         
                                           #endif                                                                           C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           #ifdef TERMINAL_SERIAL_PORT_2                                                    C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                             stdout_serial_port = SERIAL_PORT_TWO;                                          C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           #endif                                                                           C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000a26   0e80     MOVLW     0x80             Putdata(&txdata);            /* DO NOT CHANGE! */                              C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000a28   6ee6     MOVWF     0xe6,0x0                                                                                        
000a2a   0e01     MOVLW     0x1                                                                                             
000a2c   6ee6     MOVWF     0xe6,0x0                                                                                        
000a2e   ec16     CALL      0x242c,0x0                                                                                      
000a30   f012                                                                                                               
000a32   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000a34   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           //  ***  IFI Code Starts Here***                                                 C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           //                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           //  Serial_Driver_Initialize();                                                  C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           //                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           //  printf("IFI 2006 User Processor Initialized ...\r");  /* Optional - Print initialization message. */ C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000a36   ef9d     GOTO      0x233a           User_Proc_Is_Ready();         /* DO NOT CHANGE! - last line of User_Initialization */ C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000a38   f011                                                                                                               
                                           }                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           * FUNCTION NAME: Process_Data_From_Master_uP                                     C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           * PURPOSE:       Executes every 26.2ms when it gets new data from the master     C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           *                microprocessor.                                                 C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           * CALLED FROM:   main.c                                                          C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           * ARGUMENTS:     none                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           * RETURNS:       void                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           void Process_Data_From_Master_uP(void)                                           C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000a3a   0ea0     MOVLW     0xa0           	Getdata(&rxdata);                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000a3c   6ee6     MOVWF     0xe6,0x0                                                                                        
000a3e   0e01     MOVLW     0x1                                                                                             
000a40   6ee6     MOVWF     0xe6,0x0                                                                                        
000a42   ecfd     CALL      0x23fa,0x0                                                                                      
000a44   f011                                                                                                               
000a46   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000a48   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           	// This function is responsable for camera initialization                       C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           	// and camera serial data interpretation. Once the camera                       C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           	// is initialized and starts sending tracking data, this                        C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           	// function will continuously update the global T_Packet_Data                   C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           	// structure with the received tracking information.                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000a4a   ec87     CALL      0x290e,0x0     	Camera_Handler();                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000a4c   f014                                                                                                               
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           	                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000a4e   dbc8     RCALL     0x11e0         	Check_Manual_Toggle();				// Checks the toggle button, and sets Manual_Toggle_State to ON or OFF C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000a50   0101     MOVLB     0x1            	SHOOTER_BELT = 127;					// The shooter belt is normally off                     C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000a52   0e7f     MOVLW     0x7f                                                                                            
000a54   6f8b     MOVWF     0x8b,0x1                                                                                        
                                           	                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000a56   dbde     RCALL     0x1214         	Run_Ball_System();					// Check sensors and take care of auto loading and checking joystick to collect balls C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000a58   0102     MOVLB     0x2            	if (Manual_Toggle_State)			// If we're in manual override..                     C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000a5a   5126     MOVF      0x26,0x0,0x1                                                                                    
000a5c   e003     BZ        0xa64                                                                                           
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000a5e   eccc     CALL      0x1398,0x0     		Manual_Aim();					// Allow user to move the turret using POTBOX                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000a60   f009                                                                                                               
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000a62   d002     BRA       0xa68          	else                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000a64   ec30     CALL      0x4c60,0x0     		Turret_Track();					// Aim the turret through code                             C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000a66   f026                                                                                                               
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000a68   0101     MOVLB     0x1            	if (POTBOX_SHOOTER_WHEEL)			// If we want to ramp up the wheel                  C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000a6a   a9a3     BTFSS     0xa3,0x4,0x1                                                                                    
000a6c   d00d     BRA       0xa88                                                                                           
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000a6e   ec43     CALL      0x1286,0x0     		Run_Shooter_Wheel();			// Start running the wheel when the POTBOX_SHOOTER_WHEEL is held C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000a70   f009                                                                                                               
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000a72   0101     MOVLB     0x1            		if (POTBOX_SHOOTER_BELT)		// If we want to shoot balls                         C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000a74   aba3     BTFSS     0xa3,0x5,0x1                                                                                    
000a76   d007     BRA       0xa86                                                                                           
                                           		{                                                                              C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000a78   0e0f     MOVLW     0xf            			Run_Shooter_Belt(15);		// Pulse the shooter belt                              C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000a7a   6ee6     MOVWF     0xe6,0x0                                                                                        
000a7c   6ae6     CLRF      0xe6,0x0                                                                                        
000a7e   ec54     CALL      0x12a8,0x0                                                                                      
000a80   f009                                                                                                               
000a82   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000a84   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           		}                                                                              C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000a86   d005     BRA       0xa92          	else								// Else, if we do not want to ramp up wheel...                      C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000a88   0102     MOVLB     0x2            		Shooter_Debounce = 0;			// Reset the debounce if we're not shooting            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000a8a   6b2c     CLRF      0x2c,0x1                                                                                        
000a8c   0101     MOVLB     0x1            		SHOOTER_WHEEL = 127;			// Turn the wheel off                                   C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000a8e   0e7f     MOVLW     0x7f                                                                                            
000a90   6f8c     MOVWF     0x8c,0x1                                                                                        
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           	                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000a92   0101     MOVLB     0x1            	if (POTBOX_REVERSE)					// If we need to run the ball system in reverse         C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000a94   afa3     BTFSS     0xa3,0x7,0x1                                                                                    
000a96   d002     BRA       0xa9c                                                                                           
000a98   ecb2     CALL      0x1364,0x0     		Run_Systems_Reverse();                                                         C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000a9a   f009                                                                                                               
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000a9c   0102     MOVLB     0x2            	if (dual_joysticks == 1)										// If using dual joysticks                    C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000a9e   0519     DECF      0x19,0x0,0x1                                                                                    
000aa0   e125     BNZ       0xaec                                                                                           
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000aa2   0101     MOVLB     0x1            		LEFT_WHEEL = ramp_joystick(255 - LEFT_DRIVE_JOYSTICK);		// Ramp the joystick and output to LEFT wheel C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000aa4   51a7     MOVF      0xa7,0x0,0x1                                                                                    
000aa6   6e00     MOVWF     0x0,0x0                                                                                         
000aa8   6a01     CLRF      0x1,0x0                                                                                         
000aaa   0eff     MOVLW     0xff                                                                                            
000aac   80d8     BSF       0xd8,0x0,0x0                                                                                    
000aae   5600     SUBFWB    0x0,0x1,0x0                                                                                     
000ab0   0e00     MOVLW     0x0                                                                                             
000ab2   5601     SUBFWB    0x1,0x1,0x0                                                                                     
000ab4   c000     MOVFF     0x0,0xfe6                                                                                       
000ab6   ffe6                                                                                                               
000ab8   c001     MOVFF     0x1,0xfe6                                                                                       
000aba   ffe6                                                                                                               
000abc   d8e2     RCALL     0xc82                                                                                           
000abe   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000ac0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000ac2   cff3     MOVFF     0xff3,0x184                                                                                     
000ac4   f184                                                                                                               
000ac6   0101     MOVLB     0x1            		RIGHT_WHEEL = ramp_joystick(255 - RIGHT_DRIVE_JOYSTICK);	// Ramp the joystick and output to RIGHT wheel C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000ac8   51ab     MOVF      0xab,0x0,0x1                                                                                    
000aca   6e00     MOVWF     0x0,0x0                                                                                         
000acc   6a01     CLRF      0x1,0x0                                                                                         
000ace   0eff     MOVLW     0xff                                                                                            
000ad0   80d8     BSF       0xd8,0x0,0x0                                                                                    
000ad2   5600     SUBFWB    0x0,0x1,0x0                                                                                     
000ad4   0e00     MOVLW     0x0                                                                                             
000ad6   5601     SUBFWB    0x1,0x1,0x0                                                                                     
000ad8   c000     MOVFF     0x0,0xfe6                                                                                       
000ada   ffe6                                                                                                               
000adc   c001     MOVFF     0x1,0xfe6                                                                                       
000ade   ffe6                                                                                                               
000ae0   d8d0     RCALL     0xc82                                                                                           
000ae2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000ae4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000ae6   cff3     MOVFF     0xff3,0x186                                                                                     
000ae8   f186                                                                                                               
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000aea   d03f     BRA       0xb6a          	else                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000aec   0101     MOVLB     0x1            		LEFT_WHEEL = 255 - (Limit_Mix(2000 + p1_y + p1_x - 127));                      C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000aee   51a6     MOVF      0xa6,0x0,0x1                                                                                    
000af0   6a05     CLRF      0x5,0x0                                                                                         
000af2   0fd0     ADDLW     0xd0                                                                                            
000af4   6e04     MOVWF     0x4,0x0                                                                                         
000af6   0e07     MOVLW     0x7                                                                                             
000af8   2205     ADDWFC    0x5,0x1,0x0                                                                                     
000afa   51aa     MOVF      0xaa,0x0,0x1                                                                                    
000afc   0100     MOVLB     0x0                                                                                             
000afe   2404     ADDWF     0x4,0x0,0x0                                                                                     
000b00   6e02     MOVWF     0x2,0x0                                                                                         
000b02   0e00     MOVLW     0x0                                                                                             
000b04   2005     ADDWFC    0x5,0x0,0x0                                                                                     
000b06   6e03     MOVWF     0x3,0x0                                                                                         
000b08   0e7f     MOVLW     0x7f                                                                                            
000b0a   5e02     SUBWF     0x2,0x1,0x0                                                                                     
000b0c   0e00     MOVLW     0x0                                                                                             
000b0e   5a03     SUBWFB    0x3,0x1,0x0                                                                                     
000b10   c002     MOVFF     0x2,0xfe6                                                                                       
000b12   ffe6                                                                                                               
000b14   c003     MOVFF     0x3,0xfe6                                                                                       
000b16   ffe6                                                                                                               
000b18   def3     RCALL     0x900                                                                                           
000b1a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000b1c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000b1e   6e00     MOVWF     0x0,0x0                                                                                         
000b20   6a01     CLRF      0x1,0x0                                                                                         
000b22   0eff     MOVLW     0xff                                                                                            
000b24   80d8     BSF       0xd8,0x0,0x0                                                                                    
000b26   5600     SUBFWB    0x0,0x1,0x0                                                                                     
000b28   0e00     MOVLW     0x0                                                                                             
000b2a   5601     SUBFWB    0x1,0x1,0x0                                                                                     
000b2c   c000     MOVFF     0x0,0x184                                                                                       
000b2e   f184                                                                                                               
000b30   0101     MOVLB     0x1            		RIGHT_WHEEL = Limit_Mix(2000 + p1_y - p1_x + 127);	                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000b32   51a6     MOVF      0xa6,0x0,0x1                                                                                    
000b34   6a03     CLRF      0x3,0x0                                                                                         
000b36   0fd0     ADDLW     0xd0                                                                                            
000b38   6e02     MOVWF     0x2,0x0                                                                                         
000b3a   0e07     MOVLW     0x7                                                                                             
000b3c   2203     ADDWFC    0x3,0x1,0x0                                                                                     
000b3e   51aa     MOVF      0xaa,0x0,0x1                                                                                    
000b40   6e04     MOVWF     0x4,0x0                                                                                         
000b42   6a05     CLRF      0x5,0x0                                                                                         
000b44   5004     MOVF      0x4,0x0,0x0                                                                                     
000b46   5c02     SUBWF     0x2,0x0,0x0                                                                                     
000b48   6e00     MOVWF     0x0,0x0                                                                                         
000b4a   5005     MOVF      0x5,0x0,0x0                                                                                     
000b4c   5803     SUBWFB    0x3,0x0,0x0                                                                                     
000b4e   6e01     MOVWF     0x1,0x0                                                                                         
000b50   0e7f     MOVLW     0x7f                                                                                            
000b52   2600     ADDWF     0x0,0x1,0x0                                                                                     
000b54   0e00     MOVLW     0x0                                                                                             
000b56   2201     ADDWFC    0x1,0x1,0x0                                                                                     
000b58   c000     MOVFF     0x0,0xfe6                                                                                       
000b5a   ffe6                                                                                                               
000b5c   c001     MOVFF     0x1,0xfe6                                                                                       
000b5e   ffe6                                                                                                               
000b60   decf     RCALL     0x900                                                                                           
000b62   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000b64   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000b66   0101     MOVLB     0x1                                                                                             
000b68   6f86     MOVWF     0x86,0x1                                                                                        
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000b6a   0101     MOVLB     0x1            	if (LEFT_DRIVE_JOYSTICK < 132 && LEFT_DRIVE_JOYSTICK > 122)                     C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000b6c   51a7     MOVF      0xa7,0x0,0x1                                                                                    
000b6e   6e00     MOVWF     0x0,0x0                                                                                         
000b70   6a01     CLRF      0x1,0x0                                                                                         
000b72   90d8     BCF       0xd8,0x0,0x0                                                                                    
000b74   5001     MOVF      0x1,0x0,0x0                                                                                     
000b76   e604     BN        0xb80                                                                                           
000b78   0e84     MOVLW     0x84                                                                                            
000b7a   5c00     SUBWF     0x0,0x0,0x0                                                                                     
000b7c   0e00     MOVLW     0x0                                                                                             
000b7e   5801     SUBWFB    0x1,0x0,0x0                                                                                     
000b80   e205     BC        0xb8c                                                                                           
000b82   51a7     MOVF      0xa7,0x0,0x1                                                                                    
000b84   087a     SUBLW     0x7a                                                                                            
000b86   e202     BC        0xb8c                                                                                           
000b88   0e7f     MOVLW     0x7f           		LEFT_DRIVE_JOYSTICK = 127;                                                     C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000b8a   6fa7     MOVWF     0xa7,0x1                                                                                        
000b8c   51ab     MOVF      0xab,0x0,0x1   	if (RIGHT_DRIVE_JOYSTICK < 132 && RIGHT_DRIVE_JOYSTICK > 122)                   C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000b8e   6e00     MOVWF     0x0,0x0                                                                                         
000b90   6a01     CLRF      0x1,0x0                                                                                         
000b92   90d8     BCF       0xd8,0x0,0x0                                                                                    
000b94   5001     MOVF      0x1,0x0,0x0                                                                                     
000b96   e604     BN        0xba0                                                                                           
000b98   0e84     MOVLW     0x84                                                                                            
000b9a   5c00     SUBWF     0x0,0x0,0x0                                                                                     
000b9c   0e00     MOVLW     0x0                                                                                             
000b9e   5801     SUBWFB    0x1,0x0,0x0                                                                                     
000ba0   e205     BC        0xbac                                                                                           
000ba2   51ab     MOVF      0xab,0x0,0x1                                                                                    
000ba4   087a     SUBLW     0x7a                                                                                            
000ba6   e202     BC        0xbac                                                                                           
000ba8   0e7f     MOVLW     0x7f           		RIGHT_DRIVE_JOYSTICK = 127;                                                    C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000baa   6fab     MOVWF     0xab,0x1                                                                                        
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000bac   0102     MOVLB     0x2            	if (Accelleration != 0)					// Only limit accell if were changing direction     C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000bae   511a     MOVF      0x1a,0x0,0x1                                                                                    
000bb0   e001     BZ        0xbb4                                                                                           
000bb2   d9ac     RCALL     0xf0c          		SoftStartWheels( );                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           	                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000bb4   0e7f     MOVLW     0x7f           	if (RIGHT_DRIVE_JOYSTICK == 127)                                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000bb6   0101     MOVLB     0x1                                                                                             
000bb8   5dab     SUBWF     0xab,0x0,0x1                                                                                    
000bba   e103     BNZ       0xbc2                                                                                           
000bbc   0101     MOVLB     0x1            		RIGHT_WHEEL = 127;                                                             C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000bbe   0e7f     MOVLW     0x7f                                                                                            
000bc0   6f86     MOVWF     0x86,0x1                                                                                        
000bc2   0e7f     MOVLW     0x7f           	if (LEFT_DRIVE_JOYSTICK == 127)                                                 C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000bc4   0101     MOVLB     0x1                                                                                             
000bc6   5da7     SUBWF     0xa7,0x0,0x1                                                                                    
000bc8   e103     BNZ       0xbd0                                                                                           
000bca   0101     MOVLB     0x1            		LEFT_WHEEL = 127;                                                              C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000bcc   0e7f     MOVLW     0x7f                                                                                            
000bce   6f84     MOVWF     0x84,0x1                                                                                        
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           //	printf("TURRET_TILT: %d \r\n", TURRET_TILT);                                  C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           //	printf("TURRET_PAN: %d \r\n", TURRET_PAN);                                    C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           //	printf("Confidence: %d \r\n", T_Packet_Data.confidence);                      C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           //	printf("PAN: %d ", POTBOX_PAN);                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           //	printf("TILT: %d \r\n", POTBOX_TILT);                                         C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           //	printf("TILT: %d \r\n", Get_Analog_Value(TURRET_TILT_POT));                   C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           //  printf("joystick: %d \r\n", POTBOX_TILT);                                    C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           //	printf("offset : %d\r\n", turret_offset);                                     C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           //	printf("inputs: %d %d %d %d %d %d %d %d \r\n", rc_dig_in01, rc_dig_in02, rc_dig_in03, rc_dig_in04, rc_dig_in05, rc_dig_in06, rc_dig_in10, rc_dig_in11); C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           //	printf("sensor: %d \r\n", Get_Auto_Mode_DEBUG());                             C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           //	if (Timer1_Count >= 40)                                                       C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           //	{                                                                             C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                             //		printf("timer: %d r\n", Timer1_Count);                                     C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           	//	Timer1_Count = 0;                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           //	}                                                                             C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           //	printf("inputs: %d \r\n", TURRET_PAN_RIGHT_SWITCH);                           C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           //	printf("limits: %d \r\n", Get_Analog_Value(rc_ana_in03));                     C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           //	printf("turret pan: %d \r\n", TURRET_PAN);                                    C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000bd0   d81a     RCALL     0xc06          	Update_OI();                                                                    C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000bd2   0101     MOVLB     0x1                RIGHT_WHEEL = 254 - RIGHT_WHEEL;                                             C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000bd4   5186     MOVF      0x86,0x0,0x1                                                                                    
000bd6   6e00     MOVWF     0x0,0x0                                                                                         
000bd8   6a01     CLRF      0x1,0x0                                                                                         
000bda   0efe     MOVLW     0xfe                                                                                            
000bdc   80d8     BSF       0xd8,0x0,0x0                                                                                    
000bde   5600     SUBFWB    0x0,0x1,0x0                                                                                     
000be0   0e00     MOVLW     0x0                                                                                             
000be2   5601     SUBFWB    0x1,0x1,0x0                                                                                     
000be4   c000     MOVFF     0x0,0x186                                                                                       
000be6   f186                                                                                                               
000be8   c184     MOVFF     0x184,0x185    	LEFT_WHEEL_2 = LEFT_WHEEL;                                                      C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000bea   f185                                                                                                               
000bec   c186     MOVFF     0x186,0x187    	RIGHT_WHEEL_2 = RIGHT_WHEEL;                                                    C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000bee   f187                                                                                                               
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           //	printf("MOTOR: %d \r\n", TURRET_PAN);                                         C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000bf0   ec42     CALL      0x1484,0x0     	Limit_Turret();                                                                 C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000bf2   f00a                                                                                                               
                                           	//TURRET_PAN = 254-TURRET_PAN;                                                  C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000bf4   0e80     MOVLW     0x80           	Putdata(&txdata);                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000bf6   6ee6     MOVWF     0xe6,0x0                                                                                        
000bf8   0e01     MOVLW     0x1                                                                                             
000bfa   6ee6     MOVWF     0xe6,0x0                                                                                        
000bfc   ec16     CALL      0x242c,0x0                                                                                      
000bfe   f012                                                                                                               
000c00   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000c02   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000c04   0012     RETURN    0x0            }                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           * FUNCTION NAME: Update_OI                                                       C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           * PURPOSE:       Updates the Operator Interface LEDS and displays Robot status   C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           * ARGUMENTS:     none                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           * RETURNS:       void                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           void Update_OI( void )                                                           C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000c06   0102     MOVLB     0x2            	count++;							// Increment loop counter                                        C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000c08   2b23     INCF      0x23,0x1,0x1                                                                                    
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000c0a   0e0f     MOVLW     0xf            	if (count >= 15)					// Every 15 loops update state of lights                   C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000c0c   5d23     SUBWF     0x23,0x0,0x1                                                                                    
000c0e   e30e     BNC       0xc2c                                                                                           
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000c10   0102     MOVLB     0x2            		if (! tracking_lock )			// If were not locked onto the target..                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000c12   5153     MOVF      0x53,0x0,0x1                                                                                    
000c14   e107     BNZ       0xc24                                                                                           
                                           		{                                                                              C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000c16   0101     MOVLB     0x1            			if (Camera_Status_LED)		// Change light to opposite state                     C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000c18   a980     BTFSS     0x80,0x4,0x1                                                                                    
000c1a   d002     BRA       0xc20                                                                                           
000c1c   9980     BCF       0x80,0x4,0x1   				Camera_Status_LED = 0;                                                       C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000c1e   d001     BRA       0xc22          			else                                                                          C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000c20   8980     BSF       0x80,0x4,0x1   				Camera_Status_LED = 1;                                                       C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           		}                                                                              C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000c22   d002     BRA       0xc28          		else                                                                           C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           		{	                                                                             C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000c24   0101     MOVLB     0x1            			Camera_Status_LED = 1;		// If we are tracking keep light solid                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000c26   8980     BSF       0x80,0x4,0x1                                                                                    
                                           		}                                                                              C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000c28   0102     MOVLB     0x2                	count = 0;						// reset the loop counter                                   C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000c2a   6b23     CLRF      0x23,0x1                                                                                        
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000c2c   0102     MOVLB     0x2            	if (camera_failed)					// If the camera got no packets ( camera.c )             C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000c2e   5143     MOVF      0x43,0x0,0x1                                                                                    
000c30   e005     BZ        0xc3c                                                                                           
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000c32   0102     MOVLB     0x2            		camera_failed_count += 1;		// Increase the camera failed count                 C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000c34   2b24     INCF      0x24,0x1,0x1                                                                                    
000c36   0e00     MOVLW     0x0                                                                                             
000c38   2325     ADDWFC    0x25,0x1,0x1                                                                                    
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000c3a   d003     BRA       0xc42          	else                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000c3c   0102     MOVLB     0x2            		camera_failed_count = 0;		// If the camera did get a packet, that means were still getting data so reset the failed count C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000c3e   6b24     CLRF      0x24,0x1                                                                                        
000c40   6b25     CLRF      0x25,0x1                                                                                        
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000c42   0e0f     MOVLW     0xf            	if (camera_failed_count >= 15)		// If camera failed 15 times in a row           C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000c44   af25     BTFSS     0x25,0x7,0x1                                                                                    
000c46   d002     BRA       0xc4c                                                                                           
000c48   90d8     BCF       0xd8,0x0,0x0                                                                                    
000c4a   d003     BRA       0xc52                                                                                           
000c4c   5d24     SUBWF     0x24,0x0,0x1                                                                                    
000c4e   0e00     MOVLW     0x0                                                                                             
000c50   5925     SUBWFB    0x25,0x0,0x1                                                                                    
000c52   e306     BNC       0xc60                                                                                           
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000c54   0101     MOVLB     0x1            		Camera_Status_LED = 0;			// Turn off  red light indicating the camera has failed C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000c56   9980     BCF       0x80,0x4,0x1                                                                                    
000c58   0e0f     MOVLW     0xf            		camera_failed_count = 15;		// Dont let it overflow                             C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000c5a   0102     MOVLB     0x2                                                                                             
000c5c   6f24     MOVWF     0x24,0x1                                                                                        
000c5e   6b25     CLRF      0x25,0x1                                                                                        
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           		                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000c60   5126     MOVF      0x26,0x0,0x1   	if (Manual_Toggle_State)			// Display the state of the manual toggle switch     C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000c62   e003     BZ        0xc6a                                                                                           
000c64   0101     MOVLB     0x1            		Manual_Toggle_LED = 1;                                                         C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000c66   8f80     BSF       0x80,0x7,0x1                                                                                    
000c68   d002     BRA       0xc6e          	else                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000c6a   0101     MOVLB     0x1            		Manual_Toggle_LED = 0;                                                         C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000c6c   9f80     BCF       0x80,0x7,0x1                                                                                    
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000c6e   0e0f     MOVLW     0xf            	if (Collector_Debounce >= 15)		// If the collector has been full for more then 15 loops, its full... C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000c70   0102     MOVLB     0x2                                                                                             
000c72   5d29     SUBWF     0x29,0x0,0x1                                                                                    
000c74   e303     BNC       0xc7c                                                                                           
000c76   0101     MOVLB     0x1            		Gravity_Full_LED = 1;			// Turn the light on                                   C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000c78   8b80     BSF       0x80,0x5,0x1                                                                                    
000c7a   d002     BRA       0xc80          	else								// If it't not full...                                              C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000c7c   0101     MOVLB     0x1            		Gravity_Full_LED = 0;			// Turn the light off                                  C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000c7e   9b80     BCF       0x80,0x5,0x1                                                                                    
000c80   0012     RETURN    0x0            }                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000c82   cfd9     MOVFF     0xfd9,0xfe6    int ramp_joystick(int value)                                                     C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000c84   ffe6                                                                                                               
000c86   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
000c88   ffd9                                                                                                               
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000c8a   0efd     MOVLW     0xfd           	if (value < 127 )                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000c8c   cfdb     MOVFF     0xfdb,0x0                                                                                       
000c8e   f000                                                                                                               
000c90   0efe     MOVLW     0xfe                                                                                            
000c92   cfdb     MOVFF     0xfdb,0x1                                                                                       
000c94   f001                                                                                                               
000c96   90d8     BCF       0xd8,0x0,0x0                                                                                    
000c98   5001     MOVF      0x1,0x0,0x0                                                                                     
000c9a   e604     BN        0xca4                                                                                           
000c9c   0e7f     MOVLW     0x7f                                                                                            
000c9e   5c00     SUBWF     0x0,0x0,0x0                                                                                     
000ca0   0e00     MOVLW     0x0                                                                                             
000ca2   5801     SUBWFB    0x1,0x0,0x0                                                                                     
000ca4   e26b     BC        0xd7c                                                                                           
000ca6   6ae6     CLRF      0xe6,0x0       		return sqrt(127)*sqrt(value);                                                  C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000ca8   6ae6     CLRF      0xe6,0x0                                                                                        
000caa   0efe     MOVLW     0xfe                                                                                            
000cac   6ee6     MOVWF     0xe6,0x0                                                                                        
000cae   0e42     MOVLW     0x42                                                                                            
000cb0   6ee6     MOVWF     0xe6,0x0                                                                                        
000cb2   ecaf     CALL      0x395e,0x0                                                                                      
000cb4   f01c                                                                                                               
000cb6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000cb8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000cba   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000cbc   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000cbe   c033     MOVFF     0x33,0x2                                                                                        
000cc0   f002                                                                                                               
000cc2   c034     MOVFF     0x34,0x3                                                                                        
000cc4   f003                                                                                                               
000cc6   c035     MOVFF     0x35,0x4                                                                                        
000cc8   f004                                                                                                               
000cca   c036     MOVFF     0x36,0x5                                                                                        
000ccc   f005                                                                                                               
000cce   c002     MOVFF     0x2,0xfe6                                                                                       
000cd0   ffe6                                                                                                               
000cd2   c003     MOVFF     0x3,0xfe6                                                                                       
000cd4   ffe6                                                                                                               
000cd6   c004     MOVFF     0x4,0xfe6                                                                                       
000cd8   ffe6                                                                                                               
000cda   c005     MOVFF     0x5,0xfe6                                                                                       
000cdc   ffe6                                                                                                               
000cde   0efd     MOVLW     0xfd                                                                                            
000ce0   cfdb     MOVFF     0xfdb,0x35                                                                                      
000ce2   f035                                                                                                               
000ce4   0efe     MOVLW     0xfe                                                                                            
000ce6   cfdb     MOVFF     0xfdb,0x36                                                                                      
000ce8   f036                                                                                                               
000cea   ecaa     CALL      0x2f54,0x0                                                                                      
000cec   f017                                                                                                               
000cee   c034     MOVFF     0x34,0xa                                                                                        
000cf0   f00a                                                                                                               
000cf2   c035     MOVFF     0x35,0xb                                                                                        
000cf4   f00b                                                                                                               
000cf6   c036     MOVFF     0x36,0xc                                                                                        
000cf8   f00c                                                                                                               
000cfa   c037     MOVFF     0x37,0xd                                                                                        
000cfc   f00d                                                                                                               
000cfe   c00a     MOVFF     0xa,0xfe6                                                                                       
000d00   ffe6                                                                                                               
000d02   c00b     MOVFF     0xb,0xfe6                                                                                       
000d04   ffe6                                                                                                               
000d06   c00c     MOVFF     0xc,0xfe6                                                                                       
000d08   ffe6                                                                                                               
000d0a   c00d     MOVFF     0xd,0xfe6                                                                                       
000d0c   ffe6                                                                                                               
000d0e   ecaf     CALL      0x395e,0x0                                                                                      
000d10   f01c                                                                                                               
000d12   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000d14   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000d16   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000d18   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000d1a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000d1c   cfe7     MOVFF     0xfe7,0x5                                                                                       
000d1e   f005                                                                                                               
000d20   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000d22   cfe7     MOVFF     0xfe7,0x4                                                                                       
000d24   f004                                                                                                               
000d26   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000d28   cfe7     MOVFF     0xfe7,0x3                                                                                       
000d2a   f003                                                                                                               
000d2c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000d2e   cfe7     MOVFF     0xfe7,0x2                                                                                       
000d30   f002                                                                                                               
000d32   c033     MOVFF     0x33,0x6                                                                                        
000d34   f006                                                                                                               
000d36   c034     MOVFF     0x34,0x7                                                                                        
000d38   f007                                                                                                               
000d3a   c035     MOVFF     0x35,0x8                                                                                        
000d3c   f008                                                                                                               
000d3e   c036     MOVFF     0x36,0x9                                                                                        
000d40   f009                                                                                                               
000d42   c006     MOVFF     0x6,0x39                                                                                        
000d44   f039                                                                                                               
000d46   c007     MOVFF     0x7,0x3a                                                                                        
000d48   f03a                                                                                                               
000d4a   c008     MOVFF     0x8,0x3b                                                                                        
000d4c   f03b                                                                                                               
000d4e   c009     MOVFF     0x9,0x3c                                                                                        
000d50   f03c                                                                                                               
000d52   c002     MOVFF     0x2,0x34                                                                                        
000d54   f034                                                                                                               
000d56   c003     MOVFF     0x3,0x35                                                                                        
000d58   f035                                                                                                               
000d5a   c004     MOVFF     0x4,0x36                                                                                        
000d5c   f036                                                                                                               
000d5e   c005     MOVFF     0x5,0x37                                                                                        
000d60   f037                                                                                                               
000d62   ec54     CALL      0x30a8,0x0                                                                                      
000d64   f018                                                                                                               
000d66   ecf5     CALL      0x31ea,0x0                                                                                      
000d68   f018                                                                                                               
000d6a   c035     MOVFF     0x35,0x0                                                                                        
000d6c   f000                                                                                                               
000d6e   c036     MOVFF     0x36,0x1                                                                                        
000d70   f001                                                                                                               
000d72   c000     MOVFF     0x0,0xff3                                                                                       
000d74   fff3                                                                                                               
000d76   c001     MOVFF     0x1,0xff4                                                                                       
000d78   fff4                                                                                                               
000d7a   d0c4     BRA       0xf04                                                                                           
                                           	                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000d7c   0efd     MOVLW     0xfd           	if (value > 127 )                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000d7e   cfdb     MOVFF     0xfdb,0x0                                                                                       
000d80   f000                                                                                                               
000d82   0efe     MOVLW     0xfe                                                                                            
000d84   cfdb     MOVFF     0xfdb,0x1                                                                                       
000d86   f001                                                                                                               
000d88   3401     RLCF      0x1,0x0,0x0                                                                                     
000d8a   e204     BC        0xd94                                                                                           
000d8c   5000     MOVF      0x0,0x0,0x0                                                                                     
000d8e   087f     SUBLW     0x7f                                                                                            
000d90   0e00     MOVLW     0x0                                                                                             
000d92   5401     SUBFWB    0x1,0x0,0x0                                                                                     
000d94   e301     BNC       0xd98                                                                                           
000d96   d0a7     BRA       0xee6                                                                                           
000d98   6ae6     CLRF      0xe6,0x0       		return -sqrt(127)*sqrt(-value + 255) + 255;                                    C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000d9a   6ae6     CLRF      0xe6,0x0                                                                                        
000d9c   0efe     MOVLW     0xfe                                                                                            
000d9e   6ee6     MOVWF     0xe6,0x0                                                                                        
000da0   0e42     MOVLW     0x42                                                                                            
000da2   6ee6     MOVWF     0xe6,0x0                                                                                        
000da4   ecaf     CALL      0x395e,0x0                                                                                      
000da6   f01c                                                                                                               
000da8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000daa   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000dac   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000dae   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000db0   c033     MOVFF     0x33,0xa                                                                                        
000db2   f00a                                                                                                               
000db4   c034     MOVFF     0x34,0xb                                                                                        
000db6   f00b                                                                                                               
000db8   c035     MOVFF     0x35,0xc                                                                                        
000dba   f00c                                                                                                               
000dbc   c036     MOVFF     0x36,0xd                                                                                        
000dbe   f00d                                                                                                               
000dc0   6a39     CLRF      0x39,0x0                                                                                        
000dc2   6a3a     CLRF      0x3a,0x0                                                                                        
000dc4   0e80     MOVLW     0x80                                                                                            
000dc6   6e3b     MOVWF     0x3b,0x0                                                                                        
000dc8   0ebf     MOVLW     0xbf                                                                                            
000dca   6e3c     MOVWF     0x3c,0x0                                                                                        
000dcc   c00a     MOVFF     0xa,0x34                                                                                        
000dce   f034                                                                                                               
000dd0   c00b     MOVFF     0xb,0x35                                                                                        
000dd2   f035                                                                                                               
000dd4   c00c     MOVFF     0xc,0x36                                                                                        
000dd6   f036                                                                                                               
000dd8   c00d     MOVFF     0xd,0x37                                                                                        
000dda   f037                                                                                                               
000ddc   ec54     CALL      0x30a8,0x0                                                                                      
000dde   f018                                                                                                               
000de0   c034     MOVFF     0x34,0x6                                                                                        
000de2   f006                                                                                                               
000de4   c035     MOVFF     0x35,0x7                                                                                        
000de6   f007                                                                                                               
000de8   c036     MOVFF     0x36,0x8                                                                                        
000dea   f008                                                                                                               
000dec   c037     MOVFF     0x37,0x9                                                                                        
000dee   f009                                                                                                               
000df0   c006     MOVFF     0x6,0xfe6                                                                                       
000df2   ffe6                                                                                                               
000df4   c007     MOVFF     0x7,0xfe6                                                                                       
000df6   ffe6                                                                                                               
000df8   c008     MOVFF     0x8,0xfe6                                                                                       
000dfa   ffe6                                                                                                               
000dfc   c009     MOVFF     0x9,0xfe6                                                                                       
000dfe   ffe6                                                                                                               
000e00   0efd     MOVLW     0xfd                                                                                            
000e02   cfdb     MOVFF     0xfdb,0x16                                                                                      
000e04   f016                                                                                                               
000e06   0efe     MOVLW     0xfe                                                                                            
000e08   cfdb     MOVFF     0xfdb,0x17                                                                                      
000e0a   f017                                                                                                               
000e0c   6c16     NEGF      0x16,0x0                                                                                        
000e0e   1e17     COMF      0x17,0x1,0x0                                                                                    
000e10   0e00     MOVLW     0x0                                                                                             
000e12   2217     ADDWFC    0x17,0x1,0x0                                                                                    
000e14   0eff     MOVLW     0xff                                                                                            
000e16   2616     ADDWF     0x16,0x1,0x0                                                                                    
000e18   0e00     MOVLW     0x0                                                                                             
000e1a   2217     ADDWFC    0x17,0x1,0x0                                                                                    
000e1c   c016     MOVFF     0x16,0x35                                                                                       
000e1e   f035                                                                                                               
000e20   c017     MOVFF     0x17,0x36                                                                                       
000e22   f036                                                                                                               
000e24   ecaa     CALL      0x2f54,0x0                                                                                      
000e26   f017                                                                                                               
000e28   c034     MOVFF     0x34,0x12                                                                                       
000e2a   f012                                                                                                               
000e2c   c035     MOVFF     0x35,0x13                                                                                       
000e2e   f013                                                                                                               
000e30   c036     MOVFF     0x36,0x14                                                                                       
000e32   f014                                                                                                               
000e34   c037     MOVFF     0x37,0x15                                                                                       
000e36   f015                                                                                                               
000e38   c012     MOVFF     0x12,0xfe6                                                                                      
000e3a   ffe6                                                                                                               
000e3c   c013     MOVFF     0x13,0xfe6                                                                                      
000e3e   ffe6                                                                                                               
000e40   c014     MOVFF     0x14,0xfe6                                                                                      
000e42   ffe6                                                                                                               
000e44   c015     MOVFF     0x15,0xfe6                                                                                      
000e46   ffe6                                                                                                               
000e48   ecaf     CALL      0x395e,0x0                                                                                      
000e4a   f01c                                                                                                               
000e4c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000e4e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000e50   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000e52   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000e54   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000e56   cfe7     MOVFF     0xfe7,0x9                                                                                       
000e58   f009                                                                                                               
000e5a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000e5c   cfe7     MOVFF     0xfe7,0x8                                                                                       
000e5e   f008                                                                                                               
000e60   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000e62   cfe7     MOVFF     0xfe7,0x7                                                                                       
000e64   f007                                                                                                               
000e66   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000e68   cfe7     MOVFF     0xfe7,0x6                                                                                       
000e6a   f006                                                                                                               
000e6c   c033     MOVFF     0x33,0xe                                                                                        
000e6e   f00e                                                                                                               
000e70   c034     MOVFF     0x34,0xf                                                                                        
000e72   f00f                                                                                                               
000e74   c035     MOVFF     0x35,0x10                                                                                       
000e76   f010                                                                                                               
000e78   c036     MOVFF     0x36,0x11                                                                                       
000e7a   f011                                                                                                               
000e7c   c00e     MOVFF     0xe,0x39                                                                                        
000e7e   f039                                                                                                               
000e80   c00f     MOVFF     0xf,0x3a                                                                                        
000e82   f03a                                                                                                               
000e84   c010     MOVFF     0x10,0x3b                                                                                       
000e86   f03b                                                                                                               
000e88   c011     MOVFF     0x11,0x3c                                                                                       
000e8a   f03c                                                                                                               
000e8c   c006     MOVFF     0x6,0x34                                                                                        
000e8e   f034                                                                                                               
000e90   c007     MOVFF     0x7,0x35                                                                                        
000e92   f035                                                                                                               
000e94   c008     MOVFF     0x8,0x36                                                                                        
000e96   f036                                                                                                               
000e98   c009     MOVFF     0x9,0x37                                                                                        
000e9a   f037                                                                                                               
000e9c   ec54     CALL      0x30a8,0x0                                                                                      
000e9e   f018                                                                                                               
000ea0   c034     MOVFF     0x34,0x2                                                                                        
000ea2   f002                                                                                                               
000ea4   c035     MOVFF     0x35,0x3                                                                                        
000ea6   f003                                                                                                               
000ea8   c036     MOVFF     0x36,0x4                                                                                        
000eaa   f004                                                                                                               
000eac   c037     MOVFF     0x37,0x5                                                                                        
000eae   f005                                                                                                               
000eb0   6a39     CLRF      0x39,0x0                                                                                        
000eb2   6a3a     CLRF      0x3a,0x0                                                                                        
000eb4   0e7f     MOVLW     0x7f                                                                                            
000eb6   6e3b     MOVWF     0x3b,0x0                                                                                        
000eb8   0e43     MOVLW     0x43                                                                                            
000eba   6e3c     MOVWF     0x3c,0x0                                                                                        
000ebc   c002     MOVFF     0x2,0x34                                                                                        
000ebe   f034                                                                                                               
000ec0   c003     MOVFF     0x3,0x35                                                                                        
000ec2   f035                                                                                                               
000ec4   c004     MOVFF     0x4,0x36                                                                                        
000ec6   f036                                                                                                               
000ec8   c005     MOVFF     0x5,0x37                                                                                        
000eca   f037                                                                                                               
000ecc   ecbe     CALL      0x2f7c,0x0                                                                                      
000ece   f017                                                                                                               
000ed0   ecf5     CALL      0x31ea,0x0                                                                                      
000ed2   f018                                                                                                               
000ed4   c035     MOVFF     0x35,0x0                                                                                        
000ed6   f000                                                                                                               
000ed8   c036     MOVFF     0x36,0x1                                                                                        
000eda   f001                                                                                                               
000edc   c000     MOVFF     0x0,0xff3                                                                                       
000ede   fff3                                                                                                               
000ee0   c001     MOVFF     0x1,0xff4                                                                                       
000ee2   fff4                                                                                                               
000ee4   d00f     BRA       0xf04                                                                                           
                                           	                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000ee6   50d9     MOVF      0xd9,0x0,0x0   	if (value == 127 )                                                              C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000ee8   0ffd     ADDLW     0xfd                                                                                            
000eea   6ee9     MOVWF     0xe9,0x0                                                                                        
000eec   0eff     MOVLW     0xff                                                                                            
000eee   20da     ADDWFC    0xda,0x0,0x0                                                                                    
000ef0   6eea     MOVWF     0xea,0x0                                                                                        
000ef2   0e7f     MOVLW     0x7f                                                                                            
000ef4   18ee     XORWF     0xee,0x0,0x0                                                                                    
000ef6   e101     BNZ       0xefa                                                                                           
000ef8   50ed     MOVF      0xed,0x0,0x0                                                                                    
000efa   e104     BNZ       0xf04                                                                                           
000efc   0e7f     MOVLW     0x7f           		return 127;	                                                                   C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000efe   6ef3     MOVWF     0xf3,0x0                                                                                        
000f00   6af4     CLRF      0xf4,0x0                                                                                        
000f02   d000     BRA       0xf04                                                                                           
000f04   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000f06   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
000f08   ffd9                                                                                                               
000f0a   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           void SoftStartWheels( void )                                                     C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           	// Check for accell limit;                                                      C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000f0c   0101     MOVLB     0x1            	if (LEFT_WHEEL > left_wheel_save) 						// If we are accellerating              C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000f0e   5184     MOVF      0x84,0x0,0x1                                                                                    
000f10   6e00     MOVWF     0x0,0x0                                                                                         
000f12   6a01     CLRF      0x1,0x0                                                                                         
000f14   0102     MOVLB     0x2                                                                                             
000f16   511e     MOVF      0x1e,0x0,0x1                                                                                    
000f18   1801     XORWF     0x1,0x0,0x0                                                                                     
000f1a   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
000f1c   d002     BRA       0xf22                                                                                           
000f1e   3401     RLCF      0x1,0x0,0x0                                                                                     
000f20   d004     BRA       0xf2a                                                                                           
000f22   5000     MOVF      0x0,0x0,0x0                                                                                     
000f24   5d1d     SUBWF     0x1d,0x0,0x1                                                                                    
000f26   5001     MOVF      0x1,0x0,0x0                                                                                     
000f28   591e     SUBWFB    0x1e,0x0,0x1                                                                                    
000f2a   e223     BC        0xf72                                                                                           
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000f2c   0101     MOVLB     0x1            		if (LEFT_WHEEL > (left_wheel_save+Accelleration)) 	// If we must limit accell  C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000f2e   5184     MOVF      0x84,0x0,0x1                                                                                    
000f30   6e00     MOVWF     0x0,0x0                                                                                         
000f32   6a01     CLRF      0x1,0x0                                                                                         
000f34   0102     MOVLB     0x2                                                                                             
000f36   511a     MOVF      0x1a,0x0,0x1                                                                                    
000f38   6a03     CLRF      0x3,0x0                                                                                         
000f3a   251d     ADDWF     0x1d,0x0,0x1                                                                                    
000f3c   6e02     MOVWF     0x2,0x0                                                                                         
000f3e   511e     MOVF      0x1e,0x0,0x1                                                                                    
000f40   2203     ADDWFC    0x3,0x1,0x0                                                                                     
000f42   5003     MOVF      0x3,0x0,0x0                                                                                     
000f44   1801     XORWF     0x1,0x0,0x0                                                                                     
000f46   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
000f48   d002     BRA       0xf4e                                                                                           
000f4a   3401     RLCF      0x1,0x0,0x0                                                                                     
000f4c   d004     BRA       0xf56                                                                                           
000f4e   5000     MOVF      0x0,0x0,0x0                                                                                     
000f50   5c02     SUBWF     0x2,0x0,0x0                                                                                     
000f52   5001     MOVF      0x1,0x0,0x0                                                                                     
000f54   5803     SUBWFB    0x3,0x0,0x0                                                                                     
000f56   e208     BC        0xf68                                                                                           
000f58   511a     MOVF      0x1a,0x0,0x1   			left_wheel_save+=Accelleration;					// Step to next higher speed              C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000f5a   6e00     MOVWF     0x0,0x0                                                                                         
000f5c   6a01     CLRF      0x1,0x0                                                                                         
000f5e   5000     MOVF      0x0,0x0,0x0                                                                                     
000f60   271d     ADDWF     0x1d,0x1,0x1                                                                                    
000f62   5001     MOVF      0x1,0x0,0x0                                                                                     
000f64   231e     ADDWFC    0x1e,0x1,0x1                                                                                    
000f66   d005     BRA       0xf72          		else                                                                           C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000f68   0101     MOVLB     0x1            			left_wheel_save = LEFT_WHEEL;                                                 C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000f6a   5184     MOVF      0x84,0x0,0x1                                                                                    
000f6c   0102     MOVLB     0x2                                                                                             
000f6e   6f1d     MOVWF     0x1d,0x1                                                                                        
000f70   6b1e     CLRF      0x1e,0x1                                                                                        
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           	// Check for decell limit                                                       C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000f72   0101     MOVLB     0x1            	if (LEFT_WHEEL < left_wheel_save) 						// If we are decellerating              C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000f74   5184     MOVF      0x84,0x0,0x1                                                                                    
000f76   6e00     MOVWF     0x0,0x0                                                                                         
000f78   6a01     CLRF      0x1,0x0                                                                                         
000f7a   0102     MOVLB     0x2                                                                                             
000f7c   5001     MOVF      0x1,0x0,0x0                                                                                     
000f7e   191e     XORWF     0x1e,0x0,0x1                                                                                    
000f80   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
000f82   d002     BRA       0xf88                                                                                           
000f84   351e     RLCF      0x1e,0x0,0x1                                                                                    
000f86   d004     BRA       0xf90                                                                                           
000f88   511d     MOVF      0x1d,0x0,0x1                                                                                    
000f8a   5c00     SUBWF     0x0,0x0,0x0                                                                                     
000f8c   511e     MOVF      0x1e,0x0,0x1                                                                                    
000f8e   5801     SUBWFB    0x1,0x0,0x0                                                                                     
000f90   e226     BC        0xfde                                                                                           
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000f92   0101     MOVLB     0x1            		if (LEFT_WHEEL < (left_wheel_save-Accelleration)) 	// If we must limit decell  C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000f94   5184     MOVF      0x84,0x0,0x1                                                                                    
000f96   6e00     MOVWF     0x0,0x0                                                                                         
000f98   6a01     CLRF      0x1,0x0                                                                                         
000f9a   0102     MOVLB     0x2                                                                                             
000f9c   511a     MOVF      0x1a,0x0,0x1                                                                                    
000f9e   6e04     MOVWF     0x4,0x0                                                                                         
000fa0   6a05     CLRF      0x5,0x0                                                                                         
000fa2   5004     MOVF      0x4,0x0,0x0                                                                                     
000fa4   5d1d     SUBWF     0x1d,0x0,0x1                                                                                    
000fa6   6e02     MOVWF     0x2,0x0                                                                                         
000fa8   5005     MOVF      0x5,0x0,0x0                                                                                     
000faa   591e     SUBWFB    0x1e,0x0,0x1                                                                                    
000fac   6e03     MOVWF     0x3,0x0                                                                                         
000fae   5001     MOVF      0x1,0x0,0x0                                                                                     
000fb0   1803     XORWF     0x3,0x0,0x0                                                                                     
000fb2   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
000fb4   d002     BRA       0xfba                                                                                           
000fb6   3403     RLCF      0x3,0x0,0x0                                                                                     
000fb8   d004     BRA       0xfc2                                                                                           
000fba   5002     MOVF      0x2,0x0,0x0                                                                                     
000fbc   5c00     SUBWF     0x0,0x0,0x0                                                                                     
000fbe   5003     MOVF      0x3,0x0,0x0                                                                                     
000fc0   5801     SUBWFB    0x1,0x0,0x0                                                                                     
000fc2   e208     BC        0xfd4                                                                                           
000fc4   511a     MOVF      0x1a,0x0,0x1   			left_wheel_save-=Accelleration;					// Step to next lower speed               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000fc6   6e00     MOVWF     0x0,0x0                                                                                         
000fc8   6a01     CLRF      0x1,0x0                                                                                         
000fca   5000     MOVF      0x0,0x0,0x0                                                                                     
000fcc   5f1d     SUBWF     0x1d,0x1,0x1                                                                                    
000fce   5001     MOVF      0x1,0x0,0x0                                                                                     
000fd0   5b1e     SUBWFB    0x1e,0x1,0x1                                                                                    
000fd2   d005     BRA       0xfde          		else                                                                           C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000fd4   0101     MOVLB     0x1            			left_wheel_save = LEFT_WHEEL;                                                 C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000fd6   5184     MOVF      0x84,0x0,0x1                                                                                    
000fd8   0102     MOVLB     0x2                                                                                             
000fda   6f1d     MOVWF     0x1d,0x1                                                                                        
000fdc   6b1e     CLRF      0x1e,0x1                                                                                        
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           	// Check for accell limit                                                       C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000fde   0101     MOVLB     0x1            	if (RIGHT_WHEEL > right_wheel_save) 						// If we are accellerating            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000fe0   5186     MOVF      0x86,0x0,0x1                                                                                    
000fe2   6e00     MOVWF     0x0,0x0                                                                                         
000fe4   6a01     CLRF      0x1,0x0                                                                                         
000fe6   0102     MOVLB     0x2                                                                                             
000fe8   511c     MOVF      0x1c,0x0,0x1                                                                                    
000fea   1801     XORWF     0x1,0x0,0x0                                                                                     
000fec   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
000fee   d002     BRA       0xff4                                                                                           
000ff0   3401     RLCF      0x1,0x0,0x0                                                                                     
000ff2   d004     BRA       0xffc                                                                                           
000ff4   5000     MOVF      0x0,0x0,0x0                                                                                     
000ff6   5d1b     SUBWF     0x1b,0x0,0x1                                                                                    
000ff8   5001     MOVF      0x1,0x0,0x0                                                                                     
000ffa   591c     SUBWFB    0x1c,0x0,0x1                                                                                    
000ffc   e223     BC        0x1044                                                                                          
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
000ffe   0101     MOVLB     0x1            		if (RIGHT_WHEEL > (right_wheel_save+Accelleration)) 	// If we must limit accell C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001000   5186     MOVF      0x86,0x0,0x1                                                                                    
001002   6e00     MOVWF     0x0,0x0                                                                                         
001004   6a01     CLRF      0x1,0x0                                                                                         
001006   0102     MOVLB     0x2                                                                                             
001008   511a     MOVF      0x1a,0x0,0x1                                                                                    
00100a   6a03     CLRF      0x3,0x0                                                                                         
00100c   251b     ADDWF     0x1b,0x0,0x1                                                                                    
00100e   6e02     MOVWF     0x2,0x0                                                                                         
001010   511c     MOVF      0x1c,0x0,0x1                                                                                    
001012   2203     ADDWFC    0x3,0x1,0x0                                                                                     
001014   5003     MOVF      0x3,0x0,0x0                                                                                     
001016   1801     XORWF     0x1,0x0,0x0                                                                                     
001018   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
00101a   d002     BRA       0x1020                                                                                          
00101c   3401     RLCF      0x1,0x0,0x0                                                                                     
00101e   d004     BRA       0x1028                                                                                          
001020   5000     MOVF      0x0,0x0,0x0                                                                                     
001022   5c02     SUBWF     0x2,0x0,0x0                                                                                     
001024   5001     MOVF      0x1,0x0,0x0                                                                                     
001026   5803     SUBWFB    0x3,0x0,0x0                                                                                     
001028   e208     BC        0x103a                                                                                          
00102a   511a     MOVF      0x1a,0x0,0x1   			right_wheel_save+=Accelleration;					// Step to next higher speed             C:\mort\mort_code_2006_PrePalmetto\user_routines.c
00102c   6e00     MOVWF     0x0,0x0                                                                                         
00102e   6a01     CLRF      0x1,0x0                                                                                         
001030   5000     MOVF      0x0,0x0,0x0                                                                                     
001032   271b     ADDWF     0x1b,0x1,0x1                                                                                    
001034   5001     MOVF      0x1,0x0,0x0                                                                                     
001036   231c     ADDWFC    0x1c,0x1,0x1                                                                                    
001038   d005     BRA       0x1044         		else                                                                           C:\mort\mort_code_2006_PrePalmetto\user_routines.c
00103a   0101     MOVLB     0x1            			right_wheel_save = RIGHT_WHEEL;                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
00103c   5186     MOVF      0x86,0x0,0x1                                                                                    
00103e   0102     MOVLB     0x2                                                                                             
001040   6f1b     MOVWF     0x1b,0x1                                                                                        
001042   6b1c     CLRF      0x1c,0x1                                                                                        
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           	// Check for decell limit                                                       C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001044   0101     MOVLB     0x1            	if (RIGHT_WHEEL < right_wheel_save) 						// If we are decellerating            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001046   5186     MOVF      0x86,0x0,0x1                                                                                    
001048   6e00     MOVWF     0x0,0x0                                                                                         
00104a   6a01     CLRF      0x1,0x0                                                                                         
00104c   0102     MOVLB     0x2                                                                                             
00104e   5001     MOVF      0x1,0x0,0x0                                                                                     
001050   191c     XORWF     0x1c,0x0,0x1                                                                                    
001052   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
001054   d002     BRA       0x105a                                                                                          
001056   351c     RLCF      0x1c,0x0,0x1                                                                                    
001058   d004     BRA       0x1062                                                                                          
00105a   511b     MOVF      0x1b,0x0,0x1                                                                                    
00105c   5c00     SUBWF     0x0,0x0,0x0                                                                                     
00105e   511c     MOVF      0x1c,0x0,0x1                                                                                    
001060   5801     SUBWFB    0x1,0x0,0x0                                                                                     
001062   e226     BC        0x10b0                                                                                          
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001064   0101     MOVLB     0x1            		if (RIGHT_WHEEL < (right_wheel_save-Accelleration)) 	// If we must limit decell C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001066   5186     MOVF      0x86,0x0,0x1                                                                                    
001068   6e00     MOVWF     0x0,0x0                                                                                         
00106a   6a01     CLRF      0x1,0x0                                                                                         
00106c   0102     MOVLB     0x2                                                                                             
00106e   511a     MOVF      0x1a,0x0,0x1                                                                                    
001070   6e04     MOVWF     0x4,0x0                                                                                         
001072   6a05     CLRF      0x5,0x0                                                                                         
001074   5004     MOVF      0x4,0x0,0x0                                                                                     
001076   5d1b     SUBWF     0x1b,0x0,0x1                                                                                    
001078   6e02     MOVWF     0x2,0x0                                                                                         
00107a   5005     MOVF      0x5,0x0,0x0                                                                                     
00107c   591c     SUBWFB    0x1c,0x0,0x1                                                                                    
00107e   6e03     MOVWF     0x3,0x0                                                                                         
001080   5001     MOVF      0x1,0x0,0x0                                                                                     
001082   1803     XORWF     0x3,0x0,0x0                                                                                     
001084   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
001086   d002     BRA       0x108c                                                                                          
001088   3403     RLCF      0x3,0x0,0x0                                                                                     
00108a   d004     BRA       0x1094                                                                                          
00108c   5002     MOVF      0x2,0x0,0x0                                                                                     
00108e   5c00     SUBWF     0x0,0x0,0x0                                                                                     
001090   5003     MOVF      0x3,0x0,0x0                                                                                     
001092   5801     SUBWFB    0x1,0x0,0x0                                                                                     
001094   e208     BC        0x10a6                                                                                          
001096   511a     MOVF      0x1a,0x0,0x1   			right_wheel_save-=Accelleration;					// Step to next lower speed              C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001098   6e00     MOVWF     0x0,0x0                                                                                         
00109a   6a01     CLRF      0x1,0x0                                                                                         
00109c   5000     MOVF      0x0,0x0,0x0                                                                                     
00109e   5f1b     SUBWF     0x1b,0x1,0x1                                                                                    
0010a0   5001     MOVF      0x1,0x0,0x0                                                                                     
0010a2   5b1c     SUBWFB    0x1c,0x1,0x1                                                                                    
0010a4   d005     BRA       0x10b0         		else                                                                           C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0010a6   0101     MOVLB     0x1            			right_wheel_save = RIGHT_WHEEL;                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0010a8   5186     MOVF      0x86,0x0,0x1                                                                                    
0010aa   0102     MOVLB     0x2                                                                                             
0010ac   6f1b     MOVWF     0x1b,0x1                                                                                        
0010ae   6b1c     CLRF      0x1c,0x1                                                                                        
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0010b0   c21d     MOVFF     0x21d,0x184    	LEFT_WHEEL  = left_wheel_save;                                                  C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0010b2   f184                                                                                                               
0010b4   c21b     MOVFF     0x21b,0x186    	RIGHT_WHEEL = right_wheel_save;                                                 C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0010b6   f186                                                                                                               
0010b8   0012     RETURN    0x0            }                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0010ba   cfd9     MOVFF     0xfd9,0xfe6    int Direction_Change ( void )                                                    C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0010bc   ffe6                                                                                                               
0010be   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0010c0   ffd9                                                                                                               
0010c2   0e04     MOVLW     0x4                                                                                             
0010c4   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0010c6   6ade     CLRF      0xde,0x0       	int direction = 0;                                                              C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0010c8   6add     CLRF      0xdd,0x0                                                                                        
0010ca   0e02     MOVLW     0x2            	int direction_flag = 0;                                                         C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0010cc   6adb     CLRF      0xdb,0x0                                                                                        
0010ce   0e03     MOVLW     0x3                                                                                             
0010d0   6adb     CLRF      0xdb,0x0                                                                                        
0010d2   0102     MOVLB     0x2            	if ( left_wheel_save_dir > 127 && LEFT_DRIVE_JOYSTICK < 127 )                   C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0010d4   3522     RLCF      0x22,0x0,0x1                                                                                    
0010d6   e204     BC        0x10e0                                                                                          
0010d8   5121     MOVF      0x21,0x0,0x1                                                                                    
0010da   087f     SUBLW     0x7f                                                                                            
0010dc   0e00     MOVLW     0x0                                                                                             
0010de   5522     SUBFWB    0x22,0x0,0x1                                                                                    
0010e0   e20c     BC        0x10fa                                                                                          
0010e2   0e7f     MOVLW     0x7f                                                                                            
0010e4   0101     MOVLB     0x1                                                                                             
0010e6   5da7     SUBWF     0xa7,0x0,0x1                                                                                    
0010e8   e208     BC        0x10fa                                                                                          
0010ea   0e01     MOVLW     0x1            		direction_flag = 1;                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0010ec   6ef3     MOVWF     0xf3,0x0                                                                                        
0010ee   0e02     MOVLW     0x2                                                                                             
0010f0   cff3     MOVFF     0xff3,0xfdb                                                                                     
0010f2   ffdb                                                                                                               
0010f4   0e03     MOVLW     0x3                                                                                             
0010f6   6adb     CLRF      0xdb,0x0                                                                                        
0010f8   d015     BRA       0x1124         	else if ( left_wheel_save_dir < 127 && LEFT_DRIVE_JOYSTICK > 127 )              C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0010fa   0e7f     MOVLW     0x7f                                                                                            
0010fc   0102     MOVLB     0x2                                                                                             
0010fe   af22     BTFSS     0x22,0x7,0x1                                                                                    
001100   d002     BRA       0x1106                                                                                          
001102   90d8     BCF       0xd8,0x0,0x0                                                                                    
001104   d003     BRA       0x110c                                                                                          
001106   5d21     SUBWF     0x21,0x0,0x1                                                                                    
001108   0e00     MOVLW     0x0                                                                                             
00110a   5922     SUBWFB    0x22,0x0,0x1                                                                                    
00110c   e20b     BC        0x1124                                                                                          
00110e   0101     MOVLB     0x1                                                                                             
001110   51a7     MOVF      0xa7,0x0,0x1                                                                                    
001112   087f     SUBLW     0x7f                                                                                            
001114   e207     BC        0x1124                                                                                          
001116   0e01     MOVLW     0x1            		direction_flag = 1;                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001118   6ef3     MOVWF     0xf3,0x0                                                                                        
00111a   0e02     MOVLW     0x2                                                                                             
00111c   cff3     MOVFF     0xff3,0xfdb                                                                                     
00111e   ffdb                                                                                                               
001120   0e03     MOVLW     0x3                                                                                             
001122   6adb     CLRF      0xdb,0x0                                                                                        
001124   0102     MOVLB     0x2            	if ( right_wheel_save_dir > 127 && RIGHT_DRIVE_JOYSTICK < 127 )                 C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001126   3520     RLCF      0x20,0x0,0x1                                                                                    
001128   e204     BC        0x1132                                                                                          
00112a   511f     MOVF      0x1f,0x0,0x1                                                                                    
00112c   087f     SUBLW     0x7f                                                                                            
00112e   0e00     MOVLW     0x0                                                                                             
001130   5520     SUBFWB    0x20,0x0,0x1                                                                                    
001132   e20c     BC        0x114c                                                                                          
001134   0e7f     MOVLW     0x7f                                                                                            
001136   0101     MOVLB     0x1                                                                                             
001138   5dab     SUBWF     0xab,0x0,0x1                                                                                    
00113a   e208     BC        0x114c                                                                                          
00113c   0e01     MOVLW     0x1            		direction_flag = 1;                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
00113e   6ef3     MOVWF     0xf3,0x0                                                                                        
001140   0e02     MOVLW     0x2                                                                                             
001142   cff3     MOVFF     0xff3,0xfdb                                                                                     
001144   ffdb                                                                                                               
001146   0e03     MOVLW     0x3                                                                                             
001148   6adb     CLRF      0xdb,0x0                                                                                        
00114a   d015     BRA       0x1176         	else if ( right_wheel_save_dir < 127 && RIGHT_DRIVE_JOYSTICK > 127 )            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
00114c   0e7f     MOVLW     0x7f                                                                                            
00114e   0102     MOVLB     0x2                                                                                             
001150   af20     BTFSS     0x20,0x7,0x1                                                                                    
001152   d002     BRA       0x1158                                                                                          
001154   90d8     BCF       0xd8,0x0,0x0                                                                                    
001156   d003     BRA       0x115e                                                                                          
001158   5d1f     SUBWF     0x1f,0x0,0x1                                                                                    
00115a   0e00     MOVLW     0x0                                                                                             
00115c   5920     SUBWFB    0x20,0x0,0x1                                                                                    
00115e   e20b     BC        0x1176                                                                                          
001160   0101     MOVLB     0x1                                                                                             
001162   51ab     MOVF      0xab,0x0,0x1                                                                                    
001164   087f     SUBLW     0x7f                                                                                            
001166   e207     BC        0x1176                                                                                          
001168   0e01     MOVLW     0x1            		direction_flag = 1;                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
00116a   6ef3     MOVWF     0xf3,0x0                                                                                        
00116c   0e02     MOVLW     0x2                                                                                             
00116e   cff3     MOVFF     0xff3,0xfdb                                                                                     
001170   ffdb                                                                                                               
001172   0e03     MOVLW     0x3                                                                                             
001174   6adb     CLRF      0xdb,0x0                                                                                        
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001176   50d9     MOVF      0xd9,0x0,0x0   	if (direction_flag)                                                             C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001178   0f02     ADDLW     0x2                                                                                             
00117a   6ee9     MOVWF     0xe9,0x0                                                                                        
00117c   cfda     MOVFF     0xfda,0xfea                                                                                     
00117e   ffea                                                                                                               
001180   50ee     MOVF      0xee,0x0,0x0                                                                                    
001182   10ed     IORWF     0xed,0x0,0x0                                                                                    
001184   e004     BZ        0x118e                                                                                          
001186   0e01     MOVLW     0x1            		direction = 1;                                                                 C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001188   6ede     MOVWF     0xde,0x0                                                                                        
00118a   6add     CLRF      0xdd,0x0                                                                                        
00118c   d002     BRA       0x1192         	else                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
00118e   6ade     CLRF      0xde,0x0       		direction = 0;                                                                 C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001190   6add     CLRF      0xdd,0x0                                                                                        
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001192   0101     MOVLB     0x1            	if ( LEFT_DRIVE_JOYSTICK == LEFT_WHEEL && RIGHT_DRIVE_JOYSTICK == RIGHT_WHEEL)  C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001194   5184     MOVF      0x84,0x0,0x1                                                                                    
001196   0101     MOVLB     0x1                                                                                             
001198   5da7     SUBWF     0xa7,0x0,0x1                                                                                    
00119a   e109     BNZ       0x11ae                                                                                          
00119c   0101     MOVLB     0x1                                                                                             
00119e   5186     MOVF      0x86,0x0,0x1                                                                                    
0011a0   0101     MOVLB     0x1                                                                                             
0011a2   5dab     SUBWF     0xab,0x0,0x1                                                                                    
0011a4   e104     BNZ       0x11ae                                                                                          
0011a6   0e02     MOVLW     0x2            		direction_flag = 0;                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0011a8   6adb     CLRF      0xdb,0x0                                                                                        
0011aa   0e03     MOVLW     0x3                                                                                             
0011ac   6adb     CLRF      0xdb,0x0                                                                                        
                                           	                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0011ae   0101     MOVLB     0x1            	left_wheel_save_dir = LEFT_WHEEL;                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0011b0   5184     MOVF      0x84,0x0,0x1                                                                                    
0011b2   0102     MOVLB     0x2                                                                                             
0011b4   6f21     MOVWF     0x21,0x1                                                                                        
0011b6   6b22     CLRF      0x22,0x1                                                                                        
0011b8   0101     MOVLB     0x1            	right_wheel_save_dir = RIGHT_WHEEL;                                             C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0011ba   5186     MOVF      0x86,0x0,0x1                                                                                    
0011bc   0102     MOVLB     0x2                                                                                             
0011be   6f1f     MOVWF     0x1f,0x1                                                                                        
0011c0   6b20     CLRF      0x20,0x1                                                                                        
                                           	                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0011c2   cfde     MOVFF     0xfde,0x0      	return direction;                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0011c4   f000                                                                                                               
0011c6   cfdd     MOVFF     0xfdd,0x1                                                                                       
0011c8   f001                                                                                                               
0011ca   c000     MOVFF     0x0,0xff3                                                                                       
0011cc   fff3                                                                                                               
0011ce   c001     MOVFF     0x1,0xff4                                                                                       
0011d0   fff4                                                                                                               
0011d2   d000     BRA       0x11d4                                                                                          
0011d4   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0011d6   ffe1                                                                                                               
0011d8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0011da   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0011dc   ffd9                                                                                                               
0011de   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           void Check_Manual_Toggle ( void )                                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0011e0   0101     MOVLB     0x1            	if (MANUAL_TOGGLE_SWITCH)						// If we hit the toggle switch                   C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0011e2   ada2     BTFSS     0xa2,0x6,0x1                                                                                    
0011e4   d012     BRA       0x120a                                                                                          
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0011e6   0102     MOVLB     0x2            		if (Manual_Toggle_State_Change == 1)		// If we can toggle the ON / OFF state... C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0011e8   0528     DECF      0x28,0x0,0x1                                                                                    
0011ea   e10e     BNZ       0x1208                                                                                          
                                           		{                                                                              C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0011ec   5126     MOVF      0x26,0x0,0x1   			if (Manual_Toggle_State == 0)			// If we were previously OFF                  C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0011ee   e10a     BNZ       0x1204                                                                                          
                                           			{                                                                             C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0011f0   2b27     INCF      0x27,0x1,0x1   				Manual_Toggle_Debounce += 1;		// Increase the debounce so you have to hold it C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           		                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0011f2   0e05     MOVLW     0x5            				if (Manual_Toggle_Debounce >= 5)	// If we have held the button for 10 loops  C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0011f4   5d27     SUBWF     0x27,0x0,0x1                                                                                    
0011f6   e304     BNC       0x1200                                                                                          
                                           				{                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0011f8   0e01     MOVLW     0x1            					Manual_Toggle_State = 1;		// Turn the toggle state to on                    C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0011fa   6f26     MOVWF     0x26,0x1                                                                                        
0011fc   6b28     CLRF      0x28,0x1       					Manual_Toggle_State_Change = 0;	// Dont allow state change until the button is released C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           				}                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0011fe   d001     BRA       0x1202         				else                                                                         C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           				{                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001200   6b26     CLRF      0x26,0x1       					Manual_Toggle_State = 0;		// If we haven't held the button long enough, manual is still off C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           				}                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           			}                                                                             C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001202   d002     BRA       0x1208         			else									// If we were previously ON                                      C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           			{                                                                             C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001204   6b26     CLRF      0x26,0x1       				Manual_Toggle_State = 0;			// We are now OFF                                 C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001206   6b28     CLRF      0x28,0x1       				Manual_Toggle_State_Change = 0;		// Don't allow change until you release the button C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           			}                                                                             C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           		}                                                                              C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001208   d004     BRA       0x1212         	else                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
00120a   0102     MOVLB     0x2            		Manual_Toggle_Debounce = 0;					// If the switch is not pressed, we reset the debounce C:\mort\mort_code_2006_PrePalmetto\user_routines.c
00120c   6b27     CLRF      0x27,0x1                                                                                        
00120e   0e01     MOVLW     0x1            		Manual_Toggle_State_Change = 1;				// Now that the button is released, we can toggle the state C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001210   6f28     MOVWF     0x28,0x1                                                                                        
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001212   0012     RETURN    0x0            }                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           void Run_Ball_System( void )                                                     C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001214   a087     BTFSS     0x87,0x0,0x0   	if (OP_SENSOR_1)					// If the top of the gravity sensor goes off (COLLECTOR SENSOR) C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001216   d003     BRA       0x121e                                                                                          
001218   0102     MOVLB     0x2            		Collector_Debounce++;			// Incease the debounce                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
00121a   2b29     INCF      0x29,0x1,0x1                                                                                    
00121c   d002     BRA       0x1222         	else								// If the top of the gravity sensor is idle                         C:\mort\mort_code_2006_PrePalmetto\user_routines.c
00121e   0102     MOVLB     0x2            		Collector_Debounce = 0;			// Reset the debounce because there are no balls there C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001220   6b29     CLRF      0x29,0x1                                                                                        
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001222   0e0f     MOVLW     0xf            	if (Collector_Debounce >= 15)		// If a ball has been sitting there for more then 15 program loops C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001224   5d29     SUBWF     0x29,0x0,0x1                                                                                    
001226   e307     BNC       0x1236                                                                                          
                                           	{	                                                                              C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001228   0101     MOVLB     0x1            		COLLECTOR = 127;				// Turn the collector off                                  C:\mort\mort_code_2006_PrePalmetto\user_routines.c
00122a   0e7f     MOVLW     0x7f                                                                                            
00122c   6f8a     MOVWF     0x8a,0x1                                                                                        
00122e   0102     MOVLB     0x2            		Collector_Debounce = 15;		// Keep debounce from overflowing                    C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001230   0e0f     MOVLW     0xf                                                                                             
001232   6f29     MOVWF     0x29,0x1                                                                                        
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001234   d00f     BRA       0x1254         	else								// If the collector debounce is less then five...                   C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           	{									// Allow user to control collector                                    C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001236   0101     MOVLB     0x1            		if(POTBOX_COLLECTOR)			// If the colllector button was pressed                 C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001238   ada3     BTFSS     0xa3,0x6,0x1                                                                                    
00123a   d009     BRA       0x124e                                                                                          
                                           		{                                                                              C:\mort\mort_code_2006_PrePalmetto\user_routines.c
00123c   0101     MOVLB     0x1            			if (COLLECTOR > 10)			// Ramp up collector until its full speed ("0")         C:\mort\mort_code_2006_PrePalmetto\user_routines.c
00123e   518a     MOVF      0x8a,0x0,0x1                                                                                    
001240   080a     SUBLW     0xa                                                                                             
001242   e203     BC        0x124a                                                                                          
001244   0e0a     MOVLW     0xa            				COLLECTOR -= 10;                                                             C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001246   5f8a     SUBWF     0x8a,0x1,0x1                                                                                    
001248   d001     BRA       0x124c         			else                                                                          C:\mort\mort_code_2006_PrePalmetto\user_routines.c
00124a   6b8a     CLRF      0x8a,0x1       				COLLECTOR = 0;			// Turn the collector on                                    C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           	                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           		}                                                                              C:\mort\mort_code_2006_PrePalmetto\user_routines.c
00124c   d003     BRA       0x1254         		else							// If the button is not pressed                                     C:\mort\mort_code_2006_PrePalmetto\user_routines.c
00124e   0101     MOVLB     0x1            			COLLECTOR = 127;			// Turn the collector off                                  C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001250   0e7f     MOVLW     0x7f                                                                                            
001252   6f8a     MOVWF     0x8a,0x1                                                                                        
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           	                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001254   a287     BTFSS     0x87,0x1,0x0   	if (OP_SENSOR_2)					// If the lower gravity feed sensor goes off               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001256   d002     BRA       0x125c                                                                                          
001258   0102     MOVLB     0x2            		Gravity_Debounce++;				// Increase the debounce to make sure a ball is sitting there C:\mort\mort_code_2006_PrePalmetto\user_routines.c
00125a   2b2a     INCF      0x2a,0x1,0x1                                                                                    
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
00125c   0e09     MOVLW     0x9            	if (Gravity_Debounce >= 9)			// If a ball is sitting there for more then 9 program loops C:\mort\mort_code_2006_PrePalmetto\user_routines.c
00125e   0102     MOVLB     0x2                                                                                             
001260   5d2a     SUBWF     0x2a,0x0,0x1                                                                                    
001262   e30e     BNC       0x1280                                                                                          
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001264   0e09     MOVLW     0x9            		Gravity_Debounce = 9;			// Keep debounce from overflowing                      C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001266   6f2a     MOVWF     0x2a,0x1                                                                                        
001268   a487     BTFSS     0x87,0x2,0x0   		if (OP_SENSOR_3)				// If the third sensor is off (meaning balls ARE there)    C:\mort\mort_code_2006_PrePalmetto\user_routines.c
00126a   d006     BRA       0x1278                                                                                          
                                           		{                                                                              C:\mort\mort_code_2006_PrePalmetto\user_routines.c
00126c   0101     MOVLB     0x1            			SHOOTER_BELT = 127;			// Stop the belt                                        C:\mort\mort_code_2006_PrePalmetto\user_routines.c
00126e   0e7f     MOVLW     0x7f                                                                                            
001270   6f8b     MOVWF     0x8b,0x1                                                                                        
001272   0102     MOVLB     0x2            			Gravity_Debounce = 0;		// Reset the debounce                                  C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001274   6b2a     CLRF      0x2a,0x1                                                                                        
                                           		}                                                                              C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001276   d003     BRA       0x127e         		else							// If there is room to move balls up...                             C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001278   0101     MOVLB     0x1            			SHOOTER_BELT = 200;			// Turn to belt on                                      C:\mort\mort_code_2006_PrePalmetto\user_routines.c
00127a   0ec8     MOVLW     0xc8                                                                                            
00127c   6f8b     MOVWF     0x8b,0x1                                                                                        
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
00127e   d002     BRA       0x1284         	else								// If there is no ball there for more then 9 loops                  C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001280   b487     BTFSC     0x87,0x2,0x0   		if (OP_SENSOR_3)				// If balls are queued up			                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001282   6b2a     CLRF      0x2a,0x1       			Gravity_Debounce = 0;		// Keep debounce from going up                         C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001284   0012     RETURN    0x0            }                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           void Run_Shooter_Wheel ( void )                                                  C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001286   0101     MOVLB     0x1            	if (SHOOTER_WHEEL < 235)                                                        C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001288   518c     MOVF      0x8c,0x0,0x1                                                                                    
00128a   6e00     MOVWF     0x0,0x0                                                                                         
00128c   6a01     CLRF      0x1,0x0                                                                                         
00128e   90d8     BCF       0xd8,0x0,0x0                                                                                    
001290   5001     MOVF      0x1,0x0,0x0                                                                                     
001292   e604     BN        0x129c                                                                                          
001294   0eeb     MOVLW     0xeb                                                                                            
001296   5c00     SUBWF     0x0,0x0,0x0                                                                                     
001298   0e00     MOVLW     0x0                                                                                             
00129a   5801     SUBWFB    0x1,0x0,0x0                                                                                     
00129c   e203     BC        0x12a4                                                                                          
00129e   0e14     MOVLW     0x14           		SHOOTER_WHEEL += 20;                                                           C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0012a0   278c     ADDWF     0x8c,0x1,0x1                                                                                    
0012a2   d001     BRA       0x12a6         	else                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0012a4   698c     SETF      0x8c,0x1       		SHOOTER_WHEEL = 255;                                                           C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0012a6   0012     RETURN    0x0            }                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0012a8   cfd9     MOVFF     0xfd9,0xfe6    void Run_Shooter_Belt ( int feed_pause )                                         C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0012aa   ffe6                                                                                                               
0012ac   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0012ae   ffd9                                                                                                               
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0012b0   0101     MOVLB     0x1            	if (SHOOTER_WHEEL >= 190)                                                       C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0012b2   518c     MOVF      0x8c,0x0,0x1                                                                                    
0012b4   6e00     MOVWF     0x0,0x0                                                                                         
0012b6   6a01     CLRF      0x1,0x0                                                                                         
0012b8   90d8     BCF       0xd8,0x0,0x0                                                                                    
0012ba   5001     MOVF      0x1,0x0,0x0                                                                                     
0012bc   e604     BN        0x12c6                                                                                          
0012be   0ebe     MOVLW     0xbe                                                                                            
0012c0   5c00     SUBWF     0x0,0x0,0x0                                                                                     
0012c2   0e00     MOVLW     0x0                                                                                             
0012c4   5801     SUBWFB    0x1,0x0,0x0                                                                                     
0012c6   e34a     BNC       0x135c                                                                                          
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0012c8   0102     MOVLB     0x2            		Shooter_Debounce++;                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0012ca   2b2c     INCF      0x2c,0x1,0x1                                                                                    
0012cc   2b2b     INCF      0x2b,0x1,0x1   		Feed_Debounce++;                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0012ce   0e50     MOVLW     0x50           		if (Shooter_Debounce >= 80)                                                    C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0012d0   5d2c     SUBWF     0x2c,0x0,0x1                                                                                    
0012d2   e344     BNC       0x135c                                                                                          
                                           		{                                                                              C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0012d4   0e50     MOVLW     0x50           			Shooter_Debounce = 80;                                                        C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0012d6   6f2c     MOVWF     0x2c,0x1                                                                                        
                                           	                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0012d8   512b     MOVF      0x2b,0x0,0x1   			if (Feed_Debounce <= 10)                                                      C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0012da   080a     SUBLW     0xa                                                                                             
0012dc   e303     BNC       0x12e4                                                                                          
0012de   0101     MOVLB     0x1            				SHOOTER_BELT = 255;                                                          C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0012e0   698b     SETF      0x8b,0x1                                                                                        
0012e2   d03c     BRA       0x135c         			else if (Feed_Debounce > 10 && Feed_Debounce <= (feed_pause + 10))            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0012e4   512b     MOVF      0x2b,0x0,0x1                                                                                    
0012e6   080a     SUBLW     0xa                                                                                             
0012e8   e21e     BC        0x1326                                                                                          
0012ea   512b     MOVF      0x2b,0x0,0x1                                                                                    
0012ec   6e00     MOVWF     0x0,0x0                                                                                         
0012ee   6a01     CLRF      0x1,0x0                                                                                         
0012f0   0e0a     MOVLW     0xa                                                                                             
0012f2   6ee7     MOVWF     0xe7,0x0                                                                                        
0012f4   0efd     MOVLW     0xfd                                                                                            
0012f6   cfdb     MOVFF     0xfdb,0x2                                                                                       
0012f8   f002                                                                                                               
0012fa   0efe     MOVLW     0xfe                                                                                            
0012fc   cfdb     MOVFF     0xfdb,0x3                                                                                       
0012fe   f003                                                                                                               
001300   50e7     MOVF      0xe7,0x0,0x0                                                                                    
001302   2602     ADDWF     0x2,0x1,0x0                                                                                     
001304   0e00     MOVLW     0x0                                                                                             
001306   2203     ADDWFC    0x3,0x1,0x0                                                                                     
001308   5003     MOVF      0x3,0x0,0x0                                                                                     
00130a   1801     XORWF     0x1,0x0,0x0                                                                                     
00130c   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
00130e   d002     BRA       0x1314                                                                                          
001310   3401     RLCF      0x1,0x0,0x0                                                                                     
001312   d004     BRA       0x131c                                                                                          
001314   5000     MOVF      0x0,0x0,0x0                                                                                     
001316   5c02     SUBWF     0x2,0x0,0x0                                                                                     
001318   5001     MOVF      0x1,0x0,0x0                                                                                     
00131a   5803     SUBWFB    0x3,0x0,0x0                                                                                     
00131c   e304     BNC       0x1326                                                                                          
00131e   0101     MOVLB     0x1            				SHOOTER_BELT = 127;                                                          C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001320   0e7f     MOVLW     0x7f                                                                                            
001322   6f8b     MOVWF     0x8b,0x1                                                                                        
001324   d01b     BRA       0x135c         			else if (Feed_Debounce > (feed_pause + 10))                                   C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001326   512b     MOVF      0x2b,0x0,0x1                                                                                    
001328   6e00     MOVWF     0x0,0x0                                                                                         
00132a   6a01     CLRF      0x1,0x0                                                                                         
00132c   0e0a     MOVLW     0xa                                                                                             
00132e   6ee7     MOVWF     0xe7,0x0                                                                                        
001330   0efd     MOVLW     0xfd                                                                                            
001332   cfdb     MOVFF     0xfdb,0x2                                                                                       
001334   f002                                                                                                               
001336   0efe     MOVLW     0xfe                                                                                            
001338   cfdb     MOVFF     0xfdb,0x3                                                                                       
00133a   f003                                                                                                               
00133c   50e7     MOVF      0xe7,0x0,0x0                                                                                    
00133e   2602     ADDWF     0x2,0x1,0x0                                                                                     
001340   0e00     MOVLW     0x0                                                                                             
001342   2203     ADDWFC    0x3,0x1,0x0                                                                                     
001344   5003     MOVF      0x3,0x0,0x0                                                                                     
001346   1801     XORWF     0x1,0x0,0x0                                                                                     
001348   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
00134a   d002     BRA       0x1350                                                                                          
00134c   3401     RLCF      0x1,0x0,0x0                                                                                     
00134e   d004     BRA       0x1358                                                                                          
001350   5000     MOVF      0x0,0x0,0x0                                                                                     
001352   5c02     SUBWF     0x2,0x0,0x0                                                                                     
001354   5001     MOVF      0x1,0x0,0x0                                                                                     
001356   5803     SUBWFB    0x3,0x0,0x0                                                                                     
001358   e201     BC        0x135c                                                                                          
00135a   6b2b     CLRF      0x2b,0x1       				Feed_Debounce = 0;                                                           C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           		}                                                                              C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
00135c   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
00135e   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
001360   ffd9                                                                                                               
001362   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           void Run_Systems_Reverse ( void )                                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001364   0101     MOVLB     0x1            	SHOOTER_BELT = 40;                                                              C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001366   0e28     MOVLW     0x28                                                                                            
001368   6f8b     MOVWF     0x8b,0x1                                                                                        
                                           	                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
00136a   0e6e     MOVLW     0x6e           	if (SHOOTER_WHEEL >= 110)                                                       C:\mort\mort_code_2006_PrePalmetto\user_routines.c
00136c   5d8c     SUBWF     0x8c,0x0,0x1                                                                                    
00136e   e303     BNC       0x1376                                                                                          
001370   0e0a     MOVLW     0xa            		SHOOTER_WHEEL -= 10;                                                           C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001372   5f8c     SUBWF     0x8c,0x1,0x1                                                                                    
001374   d002     BRA       0x137a         	else                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001376   0e64     MOVLW     0x64           		SHOOTER_WHEEL = 100;                                                           C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001378   6f8c     MOVWF     0x8c,0x1                                                                                        
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
00137a   518a     MOVF      0x8a,0x0,0x1   	if (COLLECTOR <= 245)			// Ramp up collector until its full speed ("0")         C:\mort\mort_code_2006_PrePalmetto\user_routines.c
00137c   6e00     MOVWF     0x0,0x0                                                                                         
00137e   6a01     CLRF      0x1,0x0                                                                                         
001380   3401     RLCF      0x1,0x0,0x0                                                                                     
001382   e204     BC        0x138c                                                                                          
001384   5000     MOVF      0x0,0x0,0x0                                                                                     
001386   08f5     SUBLW     0xf5                                                                                            
001388   0e00     MOVLW     0x0                                                                                             
00138a   5401     SUBFWB    0x1,0x0,0x0                                                                                     
00138c   e303     BNC       0x1394                                                                                          
00138e   0e0a     MOVLW     0xa            		COLLECTOR += 10;                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001390   278a     ADDWF     0x8a,0x1,0x1                                                                                    
001392   d001     BRA       0x1396         	else                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001394   698a     SETF      0x8a,0x1       		COLLECTOR = 255;			// Turn the collector on	                                   C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001396   0012     RETURN    0x0            }                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           void Manual_Aim ( void )                                                         C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001398   c1ad     MOVFF     0x1ad,0x188    		TURRET_PAN = POTBOX_PAN;						// Output the joystick right out to the turret pan C:\mort\mort_code_2006_PrePalmetto\user_routines.c
00139a   f188                                                                                                               
00139c   0101     MOVLB     0x1            		TURRET_TILT = 254 - POTBOX_TILT;				// Reverse the joystick so you pull back to tilt up C:\mort\mort_code_2006_PrePalmetto\user_routines.c
00139e   51a9     MOVF      0xa9,0x0,0x1                                                                                    
0013a0   6e00     MOVWF     0x0,0x0                                                                                         
0013a2   6a01     CLRF      0x1,0x0                                                                                         
0013a4   0efe     MOVLW     0xfe                                                                                            
0013a6   80d8     BSF       0xd8,0x0,0x0                                                                                    
0013a8   5600     SUBFWB    0x0,0x1,0x0                                                                                     
0013aa   0e00     MOVLW     0x0                                                                                             
0013ac   5601     SUBFWB    0x1,0x1,0x0                                                                                     
0013ae   c000     MOVFF     0x0,0x189                                                                                       
0013b0   f189                                                                                                               
                                           		                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0013b2   51a3     MOVF      0xa3,0x0,0x1   		if (POTBOX_SHOOTER_WHEEL && POTBOX_SHOOTER_BELT)								// Kills joystick while shooting in manual C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0013b4   0b10     ANDLW     0x10                                                                                            
0013b6   e036     BZ        0x1424                                                                                          
0013b8   51a3     MOVF      0xa3,0x0,0x1                                                                                    
0013ba   0b20     ANDLW     0x20                                                                                            
0013bc   e033     BZ        0x1424                                                                                          
                                           		{                                                                              C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0013be   51ad     MOVF      0xad,0x0,0x1   			if (POTBOX_PAN <= 10)                                                         C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0013c0   080a     SUBLW     0xa                                                                                             
0013c2   e304     BNC       0x13cc                                                                                          
0013c4   0101     MOVLB     0x1            				TURRET_PAN = TURRET_RIGHT_MAX;                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0013c6   0ebe     MOVLW     0xbe                                                                                            
0013c8   6f88     MOVWF     0x88,0x1                                                                                        
0013ca   d012     BRA       0x13f0         			else if (POTBOX_PAN >= 245)                                                   C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0013cc   51ad     MOVF      0xad,0x0,0x1                                                                                    
0013ce   6e00     MOVWF     0x0,0x0                                                                                         
0013d0   6a01     CLRF      0x1,0x0                                                                                         
0013d2   90d8     BCF       0xd8,0x0,0x0                                                                                    
0013d4   5001     MOVF      0x1,0x0,0x0                                                                                     
0013d6   e604     BN        0x13e0                                                                                          
0013d8   0ef5     MOVLW     0xf5                                                                                            
0013da   5c00     SUBWF     0x0,0x0,0x0                                                                                     
0013dc   0e00     MOVLW     0x0                                                                                             
0013de   5801     SUBWFB    0x1,0x0,0x0                                                                                     
0013e0   e304     BNC       0x13ea                                                                                          
0013e2   0101     MOVLB     0x1            				TURRET_PAN = TURRET_LEFT_MAX;                                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0013e4   0e38     MOVLW     0x38                                                                                            
0013e6   6f88     MOVWF     0x88,0x1                                                                                        
0013e8   d003     BRA       0x13f0         			else                                                                          C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0013ea   0101     MOVLB     0x1            				TURRET_PAN = 127;                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0013ec   0e7f     MOVLW     0x7f                                                                                            
0013ee   6f88     MOVWF     0x88,0x1                                                                                        
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0013f0   0101     MOVLB     0x1            			if (POTBOX_TILT >= 245)                                                       C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0013f2   51a9     MOVF      0xa9,0x0,0x1                                                                                    
0013f4   6e00     MOVWF     0x0,0x0                                                                                         
0013f6   6a01     CLRF      0x1,0x0                                                                                         
0013f8   90d8     BCF       0xd8,0x0,0x0                                                                                    
0013fa   5001     MOVF      0x1,0x0,0x0                                                                                     
0013fc   e604     BN        0x1406                                                                                          
0013fe   0ef5     MOVLW     0xf5                                                                                            
001400   5c00     SUBWF     0x0,0x0,0x0                                                                                     
001402   0e00     MOVLW     0x0                                                                                             
001404   5801     SUBWFB    0x1,0x0,0x0                                                                                     
001406   e304     BNC       0x1410                                                                                          
001408   0101     MOVLB     0x1            				TURRET_TILT = TURRET_FORWARD_MAX;                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
00140a   0e70     MOVLW     0x70                                                                                            
00140c   6f89     MOVWF     0x89,0x1                                                                                        
00140e   d00a     BRA       0x1424         			else if (POTBOX_TILT <= 10)                                                   C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001410   51a9     MOVF      0xa9,0x0,0x1                                                                                    
001412   080a     SUBLW     0xa                                                                                             
001414   e304     BNC       0x141e                                                                                          
001416   0101     MOVLB     0x1            				TURRET_TILT = TURRET_BACKWARD_MAX;                                           C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001418   0e98     MOVLW     0x98                                                                                            
00141a   6f89     MOVWF     0x89,0x1                                                                                        
00141c   d003     BRA       0x1424         			else                                                                          C:\mort\mort_code_2006_PrePalmetto\user_routines.c
00141e   0101     MOVLB     0x1            				TURRET_TILT = 127;                                                           C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001420   0e7f     MOVLW     0x7f                                                                                            
001422   6f89     MOVWF     0x89,0x1                                                                                        
                                           		}                                                                              C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           /******** testing code ****************************/                             C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001424   0101     MOVLB     0x1            		if (POTBOX_PAN < 132 && POTBOX_PAN > 122)                                      C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001426   51ad     MOVF      0xad,0x0,0x1                                                                                    
001428   6e00     MOVWF     0x0,0x0                                                                                         
00142a   6a01     CLRF      0x1,0x0                                                                                         
00142c   90d8     BCF       0xd8,0x0,0x0                                                                                    
00142e   5001     MOVF      0x1,0x0,0x0                                                                                     
001430   e604     BN        0x143a                                                                                          
001432   0e84     MOVLW     0x84                                                                                            
001434   5c00     SUBWF     0x0,0x0,0x0                                                                                     
001436   0e00     MOVLW     0x0                                                                                             
001438   5801     SUBWFB    0x1,0x0,0x0                                                                                     
00143a   e206     BC        0x1448                                                                                          
00143c   51ad     MOVF      0xad,0x0,0x1                                                                                    
00143e   087a     SUBLW     0x7a                                                                                            
001440   e203     BC        0x1448                                                                                          
001442   0101     MOVLB     0x1            			TURRET_PAN = 127;                                                             C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001444   0e7f     MOVLW     0x7f                                                                                            
001446   6f88     MOVWF     0x88,0x1                                                                                        
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001448   0101     MOVLB     0x1            		if (POTBOX_TILT < 130 && POTBOX_TILT > 124)                                    C:\mort\mort_code_2006_PrePalmetto\user_routines.c
00144a   51a9     MOVF      0xa9,0x0,0x1                                                                                    
00144c   6e00     MOVWF     0x0,0x0                                                                                         
00144e   6a01     CLRF      0x1,0x0                                                                                         
001450   90d8     BCF       0xd8,0x0,0x0                                                                                    
001452   5001     MOVF      0x1,0x0,0x0                                                                                     
001454   e604     BN        0x145e                                                                                          
001456   0e82     MOVLW     0x82                                                                                            
001458   5c00     SUBWF     0x0,0x0,0x0                                                                                     
00145a   0e00     MOVLW     0x0                                                                                             
00145c   5801     SUBWFB    0x1,0x0,0x0                                                                                     
00145e   e206     BC        0x146c                                                                                          
001460   51a9     MOVF      0xa9,0x0,0x1                                                                                    
001462   087c     SUBLW     0x7c                                                                                            
001464   e203     BC        0x146c                                                                                          
001466   0101     MOVLB     0x1            			TURRET_TILT = 127;                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001468   0e7f     MOVLW     0x7f                                                                                            
00146a   6f89     MOVWF     0x89,0x1                                                                                        
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
00146c   0101     MOVLB     0x1            		TURRET_PAN = 254 - TURRET_PAN;                                                 C:\mort\mort_code_2006_PrePalmetto\user_routines.c
00146e   5188     MOVF      0x88,0x0,0x1                                                                                    
001470   6e00     MOVWF     0x0,0x0                                                                                         
001472   6a01     CLRF      0x1,0x0                                                                                         
001474   0efe     MOVLW     0xfe                                                                                            
001476   80d8     BSF       0xd8,0x0,0x0                                                                                    
001478   5600     SUBFWB    0x0,0x1,0x0                                                                                     
00147a   0e00     MOVLW     0x0                                                                                             
00147c   5601     SUBFWB    0x1,0x1,0x0                                                                                     
00147e   c000     MOVFF     0x0,0x188                                                                                       
001480   f188                                                                                                               
001482   0012     RETURN    0x0            }                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           void Limit_Turret (void)                                                         C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           	// Limit the tilt                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001484   0e8f     MOVLW     0x8f           	if (Get_Analog_Value(TURRET_TILT_POT) >= TILT_POT_BACKWARD)                     C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001486   6ee6     MOVWF     0xe6,0x0                                                                                        
001488   eced     CALL      0x4bda,0x0                                                                                      
00148a   f025                                                                                                               
00148c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00148e   cff3     MOVFF     0xff3,0x0                                                                                       
001490   f000                                                                                                               
001492   cff4     MOVFF     0xff4,0x1                                                                                       
001494   f001                                                                                                               
001496   0e6c     MOVLW     0x6c                                                                                            
001498   5c00     SUBWF     0x0,0x0,0x0                                                                                     
00149a   0e02     MOVLW     0x2                                                                                             
00149c   5801     SUBWFB    0x1,0x0,0x0                                                                                     
00149e   e306     BNC       0x14ac                                                                                          
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0014a0   0101     MOVLB     0x1            			if (TURRET_TILT > 127)                                                        C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0014a2   5189     MOVF      0x89,0x0,0x1                                                                                    
0014a4   087f     SUBLW     0x7f                                                                                            
0014a6   e202     BC        0x14ac                                                                                          
0014a8   0e7f     MOVLW     0x7f           				TURRET_TILT = 127;                                                           C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0014aa   6f89     MOVWF     0x89,0x1                                                                                        
                                           	}		                                                                             C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0014ac   0e8f     MOVLW     0x8f           	if (Get_Analog_Value(TURRET_TILT_POT) <= TILT_POT_FORWARD)                      C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0014ae   6ee6     MOVWF     0xe6,0x0                                                                                        
0014b0   eced     CALL      0x4bda,0x0                                                                                      
0014b2   f025                                                                                                               
0014b4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0014b6   cff3     MOVFF     0xff3,0x0                                                                                       
0014b8   f000                                                                                                               
0014ba   cff4     MOVFF     0xff4,0x1                                                                                       
0014bc   f001                                                                                                               
0014be   0e1c     MOVLW     0x1c                                                                                            
0014c0   80d8     BSF       0xd8,0x0,0x0                                                                                    
0014c2   5400     SUBFWB    0x0,0x0,0x0                                                                                     
0014c4   0e02     MOVLW     0x2                                                                                             
0014c6   5401     SUBFWB    0x1,0x0,0x0                                                                                     
0014c8   e306     BNC       0x14d6                                                                                          
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0014ca   0e7f     MOVLW     0x7f           			if (TURRET_TILT < 127)                                                        C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0014cc   0101     MOVLB     0x1                                                                                             
0014ce   5d89     SUBWF     0x89,0x0,0x1                                                                                    
0014d0   e202     BC        0x14d6                                                                                          
0014d2   0e7f     MOVLW     0x7f           				TURRET_TILT = 127;                                                           C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0014d4   6f89     MOVWF     0x89,0x1                                                                                        
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           	// Limit the pan                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0014d6   0e9f     MOVLW     0x9f           	if (Get_Analog_Value(TURRET_PAN_LEFT_SWITCH) > 1022)                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0014d8   6ee6     MOVWF     0xe6,0x0                                                                                        
0014da   eced     CALL      0x4bda,0x0                                                                                      
0014dc   f025                                                                                                               
0014de   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0014e0   cff3     MOVFF     0xff3,0x0                                                                                       
0014e2   f000                                                                                                               
0014e4   cff4     MOVFF     0xff4,0x1                                                                                       
0014e6   f001                                                                                                               
0014e8   0efe     MOVLW     0xfe                                                                                            
0014ea   80d8     BSF       0xd8,0x0,0x0                                                                                    
0014ec   5400     SUBFWB    0x0,0x0,0x0                                                                                     
0014ee   0e03     MOVLW     0x3                                                                                             
0014f0   5401     SUBFWB    0x1,0x0,0x0                                                                                     
0014f2   e206     BC        0x1500                                                                                          
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0014f4   0e7f     MOVLW     0x7f           		if (TURRET_PAN < 127)                                                          C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0014f6   0101     MOVLB     0x1                                                                                             
0014f8   5d88     SUBWF     0x88,0x0,0x1                                                                                    
0014fa   e202     BC        0x1500                                                                                          
0014fc   0e7f     MOVLW     0x7f           			TURRET_PAN = 127;                                                             C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0014fe   6f88     MOVWF     0x88,0x1                                                                                        
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001500   0ea7     MOVLW     0xa7           	if (Get_Analog_Value(TURRET_PAN_RIGHT_SWITCH) > 1022)                           C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001502   6ee6     MOVWF     0xe6,0x0                                                                                        
001504   eced     CALL      0x4bda,0x0                                                                                      
001506   f025                                                                                                               
001508   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00150a   cff3     MOVFF     0xff3,0x0                                                                                       
00150c   f000                                                                                                               
00150e   cff4     MOVFF     0xff4,0x1                                                                                       
001510   f001                                                                                                               
001512   0efe     MOVLW     0xfe                                                                                            
001514   80d8     BSF       0xd8,0x0,0x0                                                                                    
001516   5400     SUBFWB    0x0,0x0,0x0                                                                                     
001518   0e03     MOVLW     0x3                                                                                             
00151a   5401     SUBFWB    0x1,0x0,0x0                                                                                     
00151c   e206     BC        0x152a                                                                                          
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
00151e   0101     MOVLB     0x1            		if (TURRET_PAN > 127)                                                          C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001520   5188     MOVF      0x88,0x0,0x1                                                                                    
001522   087f     SUBLW     0x7f                                                                                            
001524   e202     BC        0x152a                                                                                          
001526   0e7f     MOVLW     0x7f           			TURRET_PAN = 127;                                                             C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001528   6f88     MOVWF     0x88,0x1                                                                                        
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           	// Limit tilt speed                                                             C:\mort\mort_code_2006_PrePalmetto\user_routines.c
00152a   0e98     MOVLW     0x98           	if (TURRET_TILT >= TURRET_BACKWARD_MAX)                                         C:\mort\mort_code_2006_PrePalmetto\user_routines.c
00152c   0101     MOVLB     0x1                                                                                             
00152e   5d89     SUBWF     0x89,0x0,0x1                                                                                    
001530   e303     BNC       0x1538                                                                                          
001532   0e98     MOVLW     0x98           		TURRET_TILT = TURRET_BACKWARD_MAX;                                             C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001534   6f89     MOVWF     0x89,0x1                                                                                        
001536   d005     BRA       0x1542         	else if (TURRET_TILT <= TURRET_FORWARD_MAX)                                     C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001538   5189     MOVF      0x89,0x0,0x1                                                                                    
00153a   0870     SUBLW     0x70                                                                                            
00153c   e302     BNC       0x1542                                                                                          
00153e   0e70     MOVLW     0x70           		TURRET_TILT = TURRET_FORWARD_MAX;                                              C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001540   6f89     MOVWF     0x89,0x1                                                                                        
                                           	                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001542   5188     MOVF      0x88,0x0,0x1   	if (TURRET_PAN <= TURRET_LEFT_MAX)                                              C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001544   0838     SUBLW     0x38                                                                                            
001546   e303     BNC       0x154e                                                                                          
001548   0e38     MOVLW     0x38           		TURRET_PAN = TURRET_LEFT_MAX;                                                  C:\mort\mort_code_2006_PrePalmetto\user_routines.c
00154a   6f88     MOVWF     0x88,0x1                                                                                        
00154c   d005     BRA       0x1558         	else if (TURRET_PAN >= TURRET_RIGHT_MAX)                                        C:\mort\mort_code_2006_PrePalmetto\user_routines.c
00154e   0ebe     MOVLW     0xbe                                                                                            
001550   5d88     SUBWF     0x88,0x0,0x1                                                                                    
001552   e302     BNC       0x1558                                                                                          
001554   0ebe     MOVLW     0xbe           		TURRET_PAN = TURRET_RIGHT_MAX;                                                 C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001556   6f88     MOVWF     0x88,0x1                                                                                        
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           /*	if (TURRET_TILT <= TURRET_BACKWARD_MIN && TURRET_TILT > 127)                  C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           		TURRET_TILT = TURRET_BACKWARD_MIN;                                             C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           	else if (TURRET_TILT >= TURRET_FORWARD_MIN && TURRET_TILT < 127)                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           		TURRET_TILT = TURRET_FORWARD_MIN;                                              C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           	                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           	if (TURRET_PAN >= TURRET_LEFT_MIN && TURRET_PAN < 127)                          C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           		TURRET_PAN = TURRET_LEFT_MIN;                                                  C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           	else if (TURRET_PAN <= TURRET_RIGHT_MIN && TURRET_PAN > 127)                    C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           		TURRET_PAN = TURRET_RIGHT_MIN;                                                 C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           */                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           	//printf("RIGHT: %d LEFT: %d \r\n", Get_Analog_Value(TURRET_PAN_RIGHT_SWITCH), Get_Analog_Value(TURRET_PAN_LEFT_SWITCH)); C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001558   0012     RETURN    0x0            }                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           int Get_Auto_Mode_DEBUG(void)                                                    C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
00155a   b481     BTFSC     0x81,0x2,0x0   	if (rc_dig_in01 == 0)                                                           C:\mort\mort_code_2006_PrePalmetto\user_routines.c
00155c   d005     BRA       0x1568                                                                                          
00155e   0e01     MOVLW     0x1            		return 1;                                                                      C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001560   6ef3     MOVWF     0xf3,0x0                                                                                        
001562   6af4     CLRF      0xf4,0x0                                                                                        
001564   d027     BRA       0x15b4                                                                                          
001566   d026     BRA       0x15b4         	else if (rc_dig_in02 == 0)                                                      C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001568   b681     BTFSC     0x81,0x3,0x0                                                                                    
00156a   d005     BRA       0x1576                                                                                          
00156c   0e02     MOVLW     0x2            		return 2;                                                                      C:\mort\mort_code_2006_PrePalmetto\user_routines.c
00156e   6ef3     MOVWF     0xf3,0x0                                                                                        
001570   6af4     CLRF      0xf4,0x0                                                                                        
001572   d020     BRA       0x15b4                                                                                          
001574   d01f     BRA       0x15b4         	else if (rc_dig_in03 == 0)                                                      C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001576   b881     BTFSC     0x81,0x4,0x0                                                                                    
001578   d005     BRA       0x1584                                                                                          
00157a   0e03     MOVLW     0x3            		return 3;                                                                      C:\mort\mort_code_2006_PrePalmetto\user_routines.c
00157c   6ef3     MOVWF     0xf3,0x0                                                                                        
00157e   6af4     CLRF      0xf4,0x0                                                                                        
001580   d019     BRA       0x15b4                                                                                          
001582   d018     BRA       0x15b4         	else if (rc_dig_in04 == 0)                                                      C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001584   ba81     BTFSC     0x81,0x5,0x0                                                                                    
001586   d005     BRA       0x1592                                                                                          
001588   0e04     MOVLW     0x4            		return 4;                                                                      C:\mort\mort_code_2006_PrePalmetto\user_routines.c
00158a   6ef3     MOVWF     0xf3,0x0                                                                                        
00158c   6af4     CLRF      0xf4,0x0                                                                                        
00158e   d012     BRA       0x15b4                                                                                          
001590   d011     BRA       0x15b4         	else if (rc_dig_in05 == 0)                                                      C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001592   bc81     BTFSC     0x81,0x6,0x0                                                                                    
001594   d005     BRA       0x15a0                                                                                          
001596   0e05     MOVLW     0x5            		return 5;                                                                      C:\mort\mort_code_2006_PrePalmetto\user_routines.c
001598   6ef3     MOVWF     0xf3,0x0                                                                                        
00159a   6af4     CLRF      0xf4,0x0                                                                                        
00159c   d00b     BRA       0x15b4                                                                                          
00159e   d00a     BRA       0x15b4         	else if (rc_dig_in06 == 0)                                                      C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0015a0   be81     BTFSC     0x81,0x7,0x0                                                                                    
0015a2   d005     BRA       0x15ae                                                                                          
0015a4   0e06     MOVLW     0x6            		return 6;                                                                      C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0015a6   6ef3     MOVWF     0xf3,0x0                                                                                        
0015a8   6af4     CLRF      0xf4,0x0                                                                                        
0015aa   d004     BRA       0x15b4                                                                                          
0015ac   d003     BRA       0x15b4         	else                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0015ae   6af3     CLRF      0xf3,0x0       		return 0;                                                                      C:\mort\mort_code_2006_PrePalmetto\user_routines.c
0015b0   6af4     CLRF      0xf4,0x0                                                                                        
0015b2   d000     BRA       0x15b4                                                                                          
0015b4   0012     RETURN    0x0            }                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           /* END Default_Routine(); */                                                     C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           /******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           /******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           /******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\user_routines.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           * FILE NAME: user_routines_fast.c <FRC VERSION>                                  C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           * DESCRIPTION:                                                                   C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           *  This file is where the user can add their custom code within the framework    C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           *  of the routines below.                                                        C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           * USAGE:                                                                         C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           *  You can either modify this file to fit your needs, or remove it from your     C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           *  project and replace it with a modified copy.                                  C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           * OPTIONS:  Interrupts are disabled and not used by default.                     C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           #include <stdio.h>                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           #include "ifi_aliases.h"                                                         C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           #include "ifi_default.h"                                                         C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           #include "ifi_utilities.h"                                                       C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           #include "user_routines.h"                                                       C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           #include "serial_ports.h"                                                        C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           #include "adc.h"                                                                 C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           #include "MORT_AUTONOMOUS.h"                                                     C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           #include "MORT_TIMERS.h"                                                         C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           /*** DEFINE USER VARIABLES AND INITIALIZE THEM HERE ***/                         C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           * FUNCTION NAME: InterruptVectorLow                                              C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           * PURPOSE:       Low priority interrupt vector                                   C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           * CALLED FROM:   nowhere by default                                              C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           * ARGUMENTS:     none                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           * RETURNS:       void                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           * DO NOT MODIFY OR DELETE THIS FUNCTION                                          C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           #pragma code InterruptVectorLow = LOW_INT_VECTOR                                 C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           void InterruptVectorLow (void)                                                   C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                             _asm                                                                           C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
000818   ef02     GOTO      0x4804             goto InterruptHandlerLow  /*jump to interrupt routine*/                      C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
00081a   f024                                                                                                               
                                             _endasm                                                                        C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
00081c   0012     RETURN    0x0            }                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           * FUNCTION NAME: InterruptHandlerLow                                             C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           * PURPOSE:       Low priority interrupt handler                                  C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           * If you want to use these external low priority interrupts or any of the        C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           * peripheral interrupts then you must enable them in your initialization         C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           * routine.  Innovation First, Inc. will not provide support for using these      C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           * interrupts, so be careful.  There is great potential for glitchy code if good  C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           * interrupt programming practices are not followed.  Especially read p. 28 of    C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           * the "MPLAB(R) C18 C Compiler User's Guide" for information on context saving.  C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           * CALLED FROM:   this file, InterruptVectorLow routine                           C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           * ARGUMENTS:     none                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           * RETURNS:       void                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           #pragma code                                                                     C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           #pragma interruptlow InterruptHandlerLow save=PROD,section(".tmpdata")           C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
004804   cfd8     MOVFF     0xfd8,0xfe4    void InterruptHandlerLow ()                                                      C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
004806   ffe4                                                                                                               
004808   cfe0     MOVFF     0xfe0,0xfe4                                                                                     
00480a   ffe4                                                                                                               
00480c   6ee4     MOVWF     0xe4,0x0                                                                                        
00480e   cfda     MOVFF     0xfda,0xfe4                                                                                     
004810   ffe4                                                                                                               
004812   cfe2     MOVFF     0xfe2,0xfda                                                                                     
004814   ffda                                                                                                               
004816   cfe9     MOVFF     0xfe9,0xfe4                                                                                     
004818   ffe4                                                                                                               
00481a   cfea     MOVFF     0xfea,0xfe4                                                                                     
00481c   ffe4                                                                                                               
00481e   cff3     MOVFF     0xff3,0xfe4                                                                                     
004820   ffe4                                                                                                               
004822   cff4     MOVFF     0xff4,0xfe4                                                                                     
004824   ffe4                                                                                                               
004826   ee00     LFSR      0x0,0x0                                                                                         
004828   f000                                                                                                               
00482a   0e18     MOVLW     0x18                                                                                            
00482c   04e8     DECF      0xe8,0x0,0x0                                                                                    
00482e   e303     BNC       0x4836                                                                                          
004830   cfee     MOVFF     0xfee,0xfe4                                                                                     
004832   ffe4                                                                                                               
004834   d7fb     BRA       0x482c                                                                                          
004836   52e6     MOVF      0xe6,0x1,0x0                                                                                    
004838   cfd9     MOVFF     0xfd9,0xfe6                                                                                     
00483a   ffe6                                                                                                               
00483c   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00483e   ffd9                                                                                                               
004840   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           	unsigned char int_byte;                                                         C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
004842   509e     MOVF      0x9e,0x0,0x0   	if (PIR1bits.RC1IF && PIE1bits.RC1IE) // rx1 interrupt?                         C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
004844   0b20     ANDLW     0x20                                                                                            
004846   e006     BZ        0x4854                                                                                          
004848   509d     MOVF      0x9d,0x0,0x0                                                                                    
00484a   0b20     ANDLW     0x20                                                                                            
00484c   e003     BZ        0x4854                                                                                          
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           		#ifdef ENABLE_SERIAL_PORT_ONE_RX                                               C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
00484e   ec78     CALL      0x46f0,0x0     		Rx_1_Int_Handler(); // call the rx1 interrupt handler (in serial_ports.c)      C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
004850   f023                                                                                                               
                                           		#endif                                                                         C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
004852   d056     BRA       0x4900         	else if (PIR3bits.RC2IF && PIE3bits.RC2IE) // rx2 interrupt?                    C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
004854   50a4     MOVF      0xa4,0x0,0x0                                                                                    
004856   0b20     ANDLW     0x20                                                                                            
004858   e006     BZ        0x4866                                                                                          
00485a   50a3     MOVF      0xa3,0x0,0x0                                                                                    
00485c   0b20     ANDLW     0x20                                                                                            
00485e   e003     BZ        0x4866                                                                                          
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           		#ifdef ENABLE_SERIAL_PORT_TWO_RX                                               C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
004860   ec97     CALL      0x472e,0x0     		Rx_2_Int_Handler(); // call the rx2 interrupt handler (in serial_ports.c)      C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
004862   f023                                                                                                               
                                           		#endif                                                                         C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
004864   d04d     BRA       0x4900         	else if (PIR1bits.TX1IF && PIE1bits.TX1IE) // tx1 interrupt?                    C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
004866   509e     MOVF      0x9e,0x0,0x0                                                                                    
004868   0b10     ANDLW     0x10                                                                                            
00486a   e006     BZ        0x4878                                                                                          
00486c   509d     MOVF      0x9d,0x0,0x0                                                                                    
00486e   0b10     ANDLW     0x10                                                                                            
004870   e003     BZ        0x4878                                                                                          
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           		#ifdef ENABLE_SERIAL_PORT_ONE_TX                                               C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
004872   ecb6     CALL      0x476c,0x0     		Tx_1_Int_Handler(); // call the tx1 interrupt handler (in serial_ports.c)      C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
004874   f023                                                                                                               
                                           		#endif                                                                         C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
004876   d044     BRA       0x4900         	else if (PIR3bits.TX2IF && PIE3bits.TX2IE) // tx2 interrupt?                    C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
004878   50a4     MOVF      0xa4,0x0,0x0                                                                                    
00487a   0b10     ANDLW     0x10                                                                                            
00487c   e006     BZ        0x488a                                                                                          
00487e   50a3     MOVF      0xa3,0x0,0x0                                                                                    
004880   0b10     ANDLW     0x10                                                                                            
004882   e003     BZ        0x488a                                                                                          
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           		#ifdef ENABLE_SERIAL_PORT_TWO_TX                                               C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
004884   ecce     CALL      0x479c,0x0     		Tx_2_Int_Handler(); // call the tx2 interrupt handler (in serial_ports.c)      C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
004886   f023                                                                                                               
                                           		#endif                                                                         C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
004888   d03b     BRA       0x4900         	else if(PIR1bits.TMR2IF && PIE1bits.TMR2IE) // timer 2 interrupt?               C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
00488a   509e     MOVF      0x9e,0x0,0x0                                                                                    
00488c   0b02     ANDLW     0x2                                                                                             
00488e   e007     BZ        0x489e                                                                                          
004890   509d     MOVF      0x9d,0x0,0x0                                                                                    
004892   0b02     ANDLW     0x2                                                                                             
004894   e004     BZ        0x489e                                                                                          
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
004896   929e     BCF       0x9e,0x1,0x0   		PIR1bits.TMR2IF = 0; // clear the timer 2 interrupt flag [92]                  C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
004898   ecfc     CALL      0x3ff8,0x0     		Timer_2_Int_Handler(); // call the timer 2 interrupt handler (in adc.c)        C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
00489a   f01f                                                                                                               
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
00489c   d031     BRA       0x4900         	else if(PIR1bits.ADIF && PIE1bits.ADIE) // ADC interrupt                        C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
00489e   509e     MOVF      0x9e,0x0,0x0                                                                                    
0048a0   0b40     ANDLW     0x40                                                                                            
0048a2   e007     BZ        0x48b2                                                                                          
0048a4   509d     MOVF      0x9d,0x0,0x0                                                                                    
0048a6   0b40     ANDLW     0x40                                                                                            
0048a8   e004     BZ        0x48b2                                                                                          
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
0048aa   9c9e     BCF       0x9e,0x6,0x0   		PIR1bits.ADIF = 0; // clear the ADC interrupt flag                             C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
0048ac   ecfe     CALL      0x3ffc,0x0     		ADC_Int_Handler(); // call the ADC interrupt handler (in adc.c)                C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
0048ae   f01f                                                                                                               
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
0048b0   d027     BRA       0x4900         	else if(INTCON3bits.INT2IF && INTCON3bits.INT2IE)       /* The INT2 pin is RB2/DIG I/O 1. */ C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
0048b2   50f0     MOVF      0xf0,0x0,0x0                                                                                    
0048b4   0b02     ANDLW     0x2                                                                                             
0048b6   e005     BZ        0x48c2                                                                                          
0048b8   50f0     MOVF      0xf0,0x0,0x0                                                                                    
0048ba   0b10     ANDLW     0x10                                                                                            
0048bc   e002     BZ        0x48c2                                                                                          
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
0048be   92f0     BCF       0xf0,0x1,0x0   		INTCON3bits.INT2IF = 0;                                                        C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
0048c0   d01f     BRA       0x4900         	else if(INTCON3bits.INT3IF && INTCON3bits.INT3IE)  /* The INT3 pin is RB3/DIG I/O 2. */ C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
0048c2   50f0     MOVF      0xf0,0x0,0x0                                                                                    
0048c4   0b04     ANDLW     0x4                                                                                             
0048c6   e005     BZ        0x48d2                                                                                          
0048c8   50f0     MOVF      0xf0,0x0,0x0                                                                                    
0048ca   0b20     ANDLW     0x20                                                                                            
0048cc   e002     BZ        0x48d2                                                                                          
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
0048ce   94f0     BCF       0xf0,0x2,0x0   		INTCON3bits.INT3IF = 0;                                                        C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
0048d0   d017     BRA       0x4900         	else if(INTCONbits.RBIF && INTCONbits.RBIE)  /* DIG I/O 3-6 (RB4, RB5, RB6, or RB7) changed. */ C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
0048d2   50f2     MOVF      0xf2,0x0,0x0                                                                                    
0048d4   0b01     ANDLW     0x1                                                                                             
0048d6   e007     BZ        0x48e6                                                                                          
0048d8   50f2     MOVF      0xf2,0x0,0x0                                                                                    
0048da   0b08     ANDLW     0x8                                                                                             
0048dc   e004     BZ        0x48e6                                                                                          
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
0048de   5081     MOVF      0x81,0x0,0x0   		int_byte = PORTB;		/* You must read or write to PORTB		*/                      C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
0048e0   6edf     MOVWF     0xdf,0x0                                                                                        
0048e2   90f2     BCF       0xf2,0x0,0x0   		INTCONbits.RBIF = 0;	/* and clear the interrupt flag			*/                      C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           	}							/* to clear the interrupt condition.	*/                                 C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
0048e4   d00d     BRA       0x4900         	else if (PIR1bits.TMR1IF && PIE1bits.TMR1IE)	// Checks to see if an overflow has occured C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
0048e6   509e     MOVF      0x9e,0x0,0x0                                                                                    
0048e8   0b01     ANDLW     0x1                                                                                             
0048ea   e00a     BZ        0x4900                                                                                          
0048ec   509d     MOVF      0x9d,0x0,0x0                                                                                    
0048ee   0b01     ANDLW     0x1                                                                                             
0048f0   e007     BZ        0x4900                                                                                          
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
0048f2   909e     BCF       0x9e,0x0,0x0   		PIR1bits.TMR1IF = 0;	// Resets Timer1 overflow                                 C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
0048f4   0eed     MOVLW     0xed           		TMR1L = 0xED;                                                                  C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
0048f6   6ece     MOVWF     0xce,0x0                                                                                        
0048f8   0e85     MOVLW     0x85           		TMR1H = 0x85;                                                                  C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
0048fa   6ecf     MOVWF     0xcf,0x0                                                                                        
0048fc   ec06     CALL      0x560c,0x0     		Timer1_Handler();                                                              C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
0048fe   f02b                                                                                                               
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           //  ***  IFI Code Starts Here***                                                 C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           //                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           //  unsigned char int_byte;                                                      C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           //  if (INTCON3bits.INT2IF && INTCON3bits.INT2IE)       /* The INT2 pin is RB2/DIG I/O 1. */ C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           //  {                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           //    INTCON3bits.INT2IF = 0;                                                    C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           //  }                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           //  else if (INTCON3bits.INT3IF && INTCON3bits.INT3IE)  /* The INT3 pin is RB3/DIG I/O 2. */ C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           //  {                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           //    INTCON3bits.INT3IF = 0;                                                    C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           //  }                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           //  else if (INTCONbits.RBIF && INTCONbits.RBIE)  /* DIG I/O 3-6 (RB4, RB5, RB6, or RB7) changed. */ C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           //  {                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           //    int_byte = PORTB;          /* You must read or write to PORTB */           C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           //    INTCONbits.RBIF = 0;     /*     and clear the interrupt flag         */    C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           //  }                                        /*     to clear the interrupt condition.  */ C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           //  else                                                                         C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           //  {                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           //    CheckUartInts();    /* For Dynamic Debug Tool or buffered printf features. */ C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           //  }                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
004900   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
004902   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004904   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004906   ffd9                                                                                                               
004908   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00490a   ee00     LFSR      0x0,0x17                                                                                        
00490c   f017                                                                                                               
00490e   0e18     MOVLW     0x18                                                                                            
004910   04e8     DECF      0xe8,0x0,0x0                                                                                    
004912   e303     BNC       0x491a                                                                                          
004914   cfe5     MOVFF     0xfe5,0xfed                                                                                     
004916   ffed                                                                                                               
004918   d7fb     BRA       0x4910                                                                                          
00491a   cfe5     MOVFF     0xfe5,0xff4                                                                                     
00491c   fff4                                                                                                               
00491e   cfe5     MOVFF     0xfe5,0xff3                                                                                     
004920   fff3                                                                                                               
004922   cfe5     MOVFF     0xfe5,0xfea                                                                                     
004924   ffea                                                                                                               
004926   cfe5     MOVFF     0xfe5,0xfe9                                                                                     
004928   ffe9                                                                                                               
00492a   cfe5     MOVFF     0xfe5,0xfda                                                                                     
00492c   ffda                                                                                                               
00492e   50e5     MOVF      0xe5,0x0,0x0                                                                                    
004930   cfe5     MOVFF     0xfe5,0xfe0                                                                                     
004932   ffe0                                                                                                               
004934   cfe5     MOVFF     0xfe5,0xfd8                                                                                     
004936   ffd8                                                                                                               
004938   0010     RETFIE    0x0                                                                                             
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           * FUNCTION NAME: User_Autonomous_Code                                            C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           * PURPOSE:       Execute user's code during autonomous robot operation.          C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           * You should modify this routine by adding code which you wish to run in         C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           * autonomous mode.  It will be executed every program loop, and not              C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           * wait for or use any data from the Operator Interface.                          C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           * CALLED FROM:   main.c file, main() routine when in Autonomous mode             C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           * ARGUMENTS:     none                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           * RETURNS:       void                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           void User_Autonomous_Code(void)                                                  C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                             /* Initialize all PWMs and Relays when entering Autonomous mode, or else it    C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                                will be stuck with the last values mapped from the joysticks.  Remember,    C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                                even when Disabled it is reading inputs from the Operator Interface.        C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                             */                                                                             C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
00493a   0101     MOVLB     0x1              pwm01 = pwm02 = pwm03 = pwm04 = pwm05 = pwm06 = pwm07 = pwm08 = 127;           C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
00493c   0e7f     MOVLW     0x7f                                                                                            
00493e   6f8b     MOVWF     0x8b,0x1                                                                                        
004940   c18b     MOVFF     0x18b,0x18a                                                                                     
004942   f18a                                                                                                               
004944   c18b     MOVFF     0x18b,0x189                                                                                     
004946   f189                                                                                                               
004948   c18b     MOVFF     0x18b,0x188                                                                                     
00494a   f188                                                                                                               
00494c   c18b     MOVFF     0x18b,0x187                                                                                     
00494e   f187                                                                                                               
004950   c18b     MOVFF     0x18b,0x186                                                                                     
004952   f186                                                                                                               
004954   c18b     MOVFF     0x18b,0x185                                                                                     
004956   f185                                                                                                               
004958   c18b     MOVFF     0x18b,0x184                                                                                     
00495a   f184                                                                                                               
00495c   6f93     MOVWF     0x93,0x1         pwm09 = pwm10 = pwm11 = pwm12 = pwm13 = pwm14 = pwm15 = pwm16 = 127;           C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
00495e   c193     MOVFF     0x193,0x192                                                                                     
004960   f192                                                                                                               
004962   c193     MOVFF     0x193,0x191                                                                                     
004964   f191                                                                                                               
004966   c193     MOVFF     0x193,0x190                                                                                     
004968   f190                                                                                                               
00496a   c193     MOVFF     0x193,0x18f                                                                                     
00496c   f18f                                                                                                               
00496e   c193     MOVFF     0x193,0x18e                                                                                     
004970   f18e                                                                                                               
004972   c193     MOVFF     0x193,0x18d                                                                                     
004974   f18d                                                                                                               
004976   c193     MOVFF     0x193,0x18c                                                                                     
004978   f18c                                                                                                               
00497a   928c     BCF       0x8c,0x1,0x0     relay1_fwd = relay1_rev = relay2_fwd = relay2_rev = 0;                         C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
00497c   928d     BCF       0x8d,0x1,0x0                                                                                    
00497e   908c     BCF       0x8c,0x0,0x0                                                                                    
004980   908d     BCF       0x8d,0x0,0x0                                                                                    
004982   968c     BCF       0x8c,0x3,0x0     relay3_fwd = relay3_rev = relay4_fwd = relay4_rev = 0;                         C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
004984   968d     BCF       0x8d,0x3,0x0                                                                                    
004986   948c     BCF       0x8c,0x2,0x0                                                                                    
004988   948d     BCF       0x8d,0x2,0x0                                                                                    
00498a   9a8c     BCF       0x8c,0x5,0x0     relay5_fwd = relay5_rev = relay6_fwd = relay6_rev = 0;                         C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
00498c   9a8d     BCF       0x8d,0x5,0x0                                                                                    
00498e   988c     BCF       0x8c,0x4,0x0                                                                                    
004990   988d     BCF       0x8d,0x4,0x0                                                                                    
004992   9e8c     BCF       0x8c,0x7,0x0     relay7_fwd = relay7_rev = relay8_fwd = relay8_rev = 0;                         C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
004994   9091     BCF       0x91,0x0,0x0                                                                                    
004996   9c8c     BCF       0x8c,0x6,0x0                                                                                    
004998   9c8d     BCF       0x8d,0x6,0x0                                                                                    
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
00499a   0101     MOVLB     0x1              while (autonomous_mode)   /* DO NOT CHANGE! */                                 C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
00499c   ada1     BTFSS     0xa1,0x6,0x1                                                                                    
00499e   d067     BRA       0x4a6e                                                                                          
004a6c   d796     BRA       0x499a                                                                                          
                                             {                                                                              C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
0049a0   0101     MOVLB     0x1                if (statusflag.NEW_SPI_DATA)      /* 26.2ms loop area */                     C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
0049a2   a1c0     BTFSS     0xc0,0x0,0x1                                                                                    
0049a4   d063     BRA       0x4a6c                                                                                          
                                               {                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
0049a6   0ea0     MOVLW     0xa0                   Getdata(&rxdata);   /* DO NOT DELETE, or you will be stuck here forever! */ C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
0049a8   6ee6     MOVWF     0xe6,0x0                                                                                        
0049aa   0e01     MOVLW     0x1                                                                                             
0049ac   6ee6     MOVWF     0xe6,0x0                                                                                        
0049ae   ecfd     CALL      0x23fa,0x0                                                                                      
0049b0   f011                                                                                                               
0049b2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0049b4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                                   /* Add your own autonomous code here. */                                 C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           		                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
0049b6   ec5b     CALL      0x34b6,0x0     		MORT_autonomous_mode(Get_Auto_Mode());                                         C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
0049b8   f01a                                                                                                               
0049ba   cff3     MOVFF     0xff3,0x0                                                                                       
0049bc   f000                                                                                                               
0049be   cff4     MOVFF     0xff4,0x1                                                                                       
0049c0   f001                                                                                                               
0049c2   c000     MOVFF     0x0,0xfe6                                                                                       
0049c4   ffe6                                                                                                               
0049c6   c001     MOVFF     0x1,0xfe6                                                                                       
0049c8   ffe6                                                                                                               
0049ca   ec89     CALL      0x3512,0x0                                                                                      
0049cc   f01a                                                                                                               
0049ce   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0049d0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           		                                                                               C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
0049d2   0101     MOVLB     0x1            		LEFT_WHEEL = 254 - (Limit_Mix(2000 + p1_y + p1_x - 127));                      C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
0049d4   51a6     MOVF      0xa6,0x0,0x1                                                                                    
0049d6   6a05     CLRF      0x5,0x0                                                                                         
0049d8   0fd0     ADDLW     0xd0                                                                                            
0049da   6e04     MOVWF     0x4,0x0                                                                                         
0049dc   0e07     MOVLW     0x7                                                                                             
0049de   2205     ADDWFC    0x5,0x1,0x0                                                                                     
0049e0   51aa     MOVF      0xaa,0x0,0x1                                                                                    
0049e2   0100     MOVLB     0x0                                                                                             
0049e4   2404     ADDWF     0x4,0x0,0x0                                                                                     
0049e6   6e02     MOVWF     0x2,0x0                                                                                         
0049e8   0e00     MOVLW     0x0                                                                                             
0049ea   2005     ADDWFC    0x5,0x0,0x0                                                                                     
0049ec   6e03     MOVWF     0x3,0x0                                                                                         
0049ee   0e7f     MOVLW     0x7f                                                                                            
0049f0   5e02     SUBWF     0x2,0x1,0x0                                                                                     
0049f2   0e00     MOVLW     0x0                                                                                             
0049f4   5a03     SUBWFB    0x3,0x1,0x0                                                                                     
0049f6   c002     MOVFF     0x2,0xfe6                                                                                       
0049f8   ffe6                                                                                                               
0049fa   c003     MOVFF     0x3,0xfe6                                                                                       
0049fc   ffe6                                                                                                               
0049fe   ec80     CALL      0x900,0x0                                                                                       
004a00   f004                                                                                                               
004a02   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004a04   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004a06   6e00     MOVWF     0x0,0x0                                                                                         
004a08   6a01     CLRF      0x1,0x0                                                                                         
004a0a   0efe     MOVLW     0xfe                                                                                            
004a0c   80d8     BSF       0xd8,0x0,0x0                                                                                    
004a0e   5600     SUBFWB    0x0,0x1,0x0                                                                                     
004a10   0e00     MOVLW     0x0                                                                                             
004a12   5601     SUBFWB    0x1,0x1,0x0                                                                                     
004a14   c000     MOVFF     0x0,0x184                                                                                       
004a16   f184                                                                                                               
004a18   0101     MOVLB     0x1            		RIGHT_WHEEL = (Limit_Mix(2000 + p1_y - p1_x + 127));	                          C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
004a1a   51a6     MOVF      0xa6,0x0,0x1                                                                                    
004a1c   6a03     CLRF      0x3,0x0                                                                                         
004a1e   0fd0     ADDLW     0xd0                                                                                            
004a20   6e02     MOVWF     0x2,0x0                                                                                         
004a22   0e07     MOVLW     0x7                                                                                             
004a24   2203     ADDWFC    0x3,0x1,0x0                                                                                     
004a26   51aa     MOVF      0xaa,0x0,0x1                                                                                    
004a28   6e04     MOVWF     0x4,0x0                                                                                         
004a2a   6a05     CLRF      0x5,0x0                                                                                         
004a2c   5004     MOVF      0x4,0x0,0x0                                                                                     
004a2e   5c02     SUBWF     0x2,0x0,0x0                                                                                     
004a30   6e00     MOVWF     0x0,0x0                                                                                         
004a32   5005     MOVF      0x5,0x0,0x0                                                                                     
004a34   5803     SUBWFB    0x3,0x0,0x0                                                                                     
004a36   6e01     MOVWF     0x1,0x0                                                                                         
004a38   0e7f     MOVLW     0x7f                                                                                            
004a3a   2600     ADDWF     0x0,0x1,0x0                                                                                     
004a3c   0e00     MOVLW     0x0                                                                                             
004a3e   2201     ADDWFC    0x1,0x1,0x0                                                                                     
004a40   c000     MOVFF     0x0,0xfe6                                                                                       
004a42   ffe6                                                                                                               
004a44   c001     MOVFF     0x1,0xfe6                                                                                       
004a46   ffe6                                                                                                               
004a48   ec80     CALL      0x900,0x0                                                                                       
004a4a   f004                                                                                                               
004a4c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004a4e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004a50   0101     MOVLB     0x1                                                                                             
004a52   6f86     MOVWF     0x86,0x1                                                                                        
                                           	                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
004a54   c184     MOVFF     0x184,0x185    		LEFT_WHEEL_2 = LEFT_WHEEL;                                                     C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
004a56   f185                                                                                                               
004a58   c186     MOVFF     0x186,0x187    		RIGHT_WHEEL_2 = RIGHT_WHEEL;                                                   C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
004a5a   f187                                                                                                               
004a5c   0e80     MOVLW     0x80                   Putdata(&txdata);   /* DO NOT DELETE, or you will get no PWM outputs! */ C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
004a5e   6ee6     MOVWF     0xe6,0x0                                                                                        
004a60   0e01     MOVLW     0x1                                                                                             
004a62   6ee6     MOVWF     0xe6,0x0                                                                                        
004a64   ec16     CALL      0x242c,0x0                                                                                      
004a66   f012                                                                                                               
004a68   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004a6a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                               }                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                             }                                                                              C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
004a6e   0012     RETURN    0x0            }                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           * FUNCTION NAME: Process_Data_From_Local_IO                                      C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           * PURPOSE:       Execute user's realtime code.                                   C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           * You should modify this routine by adding code which you wish to run fast.      C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           * It will be executed every program loop, and not wait for fresh data            C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           * from the Operator Interface.                                                   C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           * CALLED FROM:   main.c                                                          C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           * ARGUMENTS:     none                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           * RETURNS:       void                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           void Process_Data_From_Local_IO(void)                                            C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                             /* Add code here that you want to be executed every program loop. */           C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
004a70   0012     RETURN    0x0            }                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           * FUNCTION NAME: Serial_Char_Callback                                            C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           * PURPOSE:       Interrupt handler for the TTL_PORT.                             C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           * CALLED FROM:   user_SerialDrv.c                                                C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           * ARGUMENTS:                                                                     C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           *     Argument             Type    IO   Description                              C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           *     --------             ----    --   -----------                              C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           *     data        unsigned char    I    Data received from the TTL_PORT          C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           * RETURNS:       void                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
004a72   cfd9     MOVFF     0xfd9,0xfe6    void Serial_Char_Callback(unsigned char data)                                    C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
004a74   ffe6                                                                                                               
004a76   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004a78   ffd9                                                                                                               
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                             /* Add code to handle incomming data (remember, interrupts are still active) */ C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
004a7a   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
004a7c   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004a7e   ffd9                                                                                                               
004a80   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           /******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           /******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           /******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\user_routines_fast.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	TITLE		adc.c                                                                   C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	VERSION:	0.4 (Beta)                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	DATE:		10-Jan-2006                                                             C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	AUTHOR:		R. Kevin Watson                                                       C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *				kevinw@jpl.nasa.gov                                                         C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	COMMENTS:	You are free to use this source code for any non-commercial          C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *				use. Please do not make copies of this source code, modified                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *				or un-modified, publicly available on the internet or                       C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *				elsewhere without permission. Thanks.                                       C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *				Copyright ©2005-2006 R. Kevin Watson. All rights are reserved.              C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           ******************************************************************************** C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	CHANGE LOG:                                                                    C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	DATE         REV  DESCRIPTION                                                  C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	-----------  ---  ----------------------------------------------------------   C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	10-Jul-2005  0.1  RKW - Original code.                                         C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	17-Jul-2005  0.2  RKW - Added x128 and x256 oversampling options.              C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	13-Dec-2005  0.3  RKW - Altered code to use the "special event trigger"        C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	                  functionality of the CCP2 hardware to initiate ADC           C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	                  conversions. This was formally done using timer 2.           C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	10-Jan-2006  0.4  RKW - Ported to PIC18F8722, which required going back        C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	                  to using timer 2 to initiate an analog to digital            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	                  conversion due to a bug in the PIC18F8722 design.            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	                  Modified #pragma interruptlow statement to include           C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	                  .tmpdata section.                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\adc.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           #include "adc.h"                                                                 C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           #include "ifi_aliases.h"                                                         C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           #include "ifi_default.h"                                                         C:\mort\mort_code_2006_PrePalmetto\adc.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           unsigned int adc_sample_rate;                                                    C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           unsigned int adc_samples_per_update;                                             C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           unsigned char num_adc_channels;                                                  C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           unsigned char adc_result_divisor;                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           volatile unsigned long accum[NUM_ADC_CHANNELS]; // sample accumulator            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           volatile unsigned int adc_result[NUM_ADC_CHANNELS]; // ADC recults               C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           volatile unsigned int samples; // current number of samples accumulated          C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           volatile unsigned char channel; // current ADC channel                           C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           volatile unsigned char adc_update_count = 0; // ADC update flag                  C:\mort\mort_code_2006_PrePalmetto\adc.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	FUNCTION:		Initialize_ADC()                                                    C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	PURPOSE:		Initializes the Analog to Digital Conversion (ADC) hardware.         C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	CALLED FROM:	user_routines.c/User_Initialization()                             C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	PARAMETERS:		None                                                              C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	RETURNS:		Nothing                                                              C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	COMMENTS:		Place "#include "adc.h" in the includes section                     C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *					of user_routines.c then call Initialize_ADC() in                           C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *					user_routines.c/User_Initialization().                                     C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\adc.c
003da0   cfd9     MOVFF     0xfd9,0xfe6    void Initialize_ADC(void)                                                        C:\mort\mort_code_2006_PrePalmetto\adc.c
003da2   ffe6                                                                                                               
003da4   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
003da6   ffd9                                                                                                               
003da8   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	unsigned char i;                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	// Initialize ADC related global variables using default values from adc.h.     C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	// Another way to do this would be to pass the values in, read them from        C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	// values stored in EEPROM or perhaps set them via a menu-based terminal        C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	// interface.                                                                   C:\mort\mort_code_2006_PrePalmetto\adc.c
003daa   0ec8     MOVLW     0xc8           	adc_sample_rate = ADC_SAMPLE_RATE;                                              C:\mort\mort_code_2006_PrePalmetto\adc.c
003dac   0102     MOVLB     0x2                                                                                             
003dae   6f2d     MOVWF     0x2d,0x1                                                                                        
003db0   6b2e     CLRF      0x2e,0x1                                                                                        
003db2   0e01     MOVLW     0x1            	num_adc_channels = NUM_ADC_CHANNELS;                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
003db4   6f31     MOVWF     0x31,0x1                                                                                        
003db6   6f32     MOVWF     0x32,0x1       	adc_result_divisor = ADC_RESULT_DIVISOR;                                        C:\mort\mort_code_2006_PrePalmetto\adc.c
003db8   0e04     MOVLW     0x4            	adc_samples_per_update = ADC_SAMPLES_PER_UPDATE;                                C:\mort\mort_code_2006_PrePalmetto\adc.c
003dba   6f2f     MOVWF     0x2f,0x1                                                                                        
003dbc   6b30     CLRF      0x30,0x1                                                                                        
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	// reset the sample accumulator(s) to zero                                      C:\mort\mort_code_2006_PrePalmetto\adc.c
003dbe   6adf     CLRF      0xdf,0x0       	for(i=0; i < num_adc_channels; i++)                                             C:\mort\mort_code_2006_PrePalmetto\adc.c
003dc0   5131     MOVF      0x31,0x0,0x1                                                                                    
003dc2   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
003dc4   e210     BC        0x3de6                                                                                          
003de2   2adf     INCF      0xdf,0x1,0x0                                                                                    
003de4   d7ed     BRA       0x3dc0                                                                                          
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\adc.c
003dc6   50df     MOVF      0xdf,0x0,0x0   		accum[i] = 0L;                                                                 C:\mort\mort_code_2006_PrePalmetto\adc.c
003dc8   0d04     MULLW     0x4                                                                                             
003dca   cff3     MOVFF     0xff3,0xfe9                                                                                     
003dcc   ffe9                                                                                                               
003dce   cff4     MOVFF     0xff4,0xfea                                                                                     
003dd0   ffea                                                                                                               
003dd2   0e33     MOVLW     0x33                                                                                            
003dd4   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
003dd6   0e02     MOVLW     0x2                                                                                             
003dd8   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
003dda   6aee     CLRF      0xee,0x0                                                                                        
003ddc   6aee     CLRF      0xee,0x0                                                                                        
003dde   6aee     CLRF      0xee,0x0                                                                                        
003de0   6aee     CLRF      0xee,0x0                                                                                        
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\adc.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	// start a new sample set                                                       C:\mort\mort_code_2006_PrePalmetto\adc.c
003de6   6b39     CLRF      0x39,0x1       	samples = 0;                                                                    C:\mort\mort_code_2006_PrePalmetto\adc.c
003de8   6b3a     CLRF      0x3a,0x1                                                                                        
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	// start at ADC channel zero                                                    C:\mort\mort_code_2006_PrePalmetto\adc.c
003dea   6b3b     CLRF      0x3b,0x1       	channel = 0;                                                                    C:\mort\mort_code_2006_PrePalmetto\adc.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	// enable the ADC hardware and select ADC channel 0                             C:\mort\mort_code_2006_PrePalmetto\adc.c
003dec   0e01     MOVLW     0x1            	ADCON0 = 0b00000001;                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
003dee   6ec2     MOVWF     0xc2,0x0                                                                                        
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	#ifdef _FRC_BOARD                                                               C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	// If this is being built for the FRC-RC, enable all sixteen analog             C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	// inputs. This shouldn't be changed because the FRC-RC has sixteen             C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	// dedicated analog inputs. The VCFG0 and VCFG1 bits are also set to            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	// select Vdd and Vss as the reference voltages                                 C:\mort\mort_code_2006_PrePalmetto\adc.c
003df0   6ac1     CLRF      0xc1,0x0       	ADCON1 = 0;                                                                     C:\mort\mort_code_2006_PrePalmetto\adc.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	#else                                                                           C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	// If this is being built for the EDU-RC, enable NUM_ADC_CHANNELS               C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	// analog inputs (NUM_ADC_CHANNELS is documented in adc.h). This must           C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	// match the default value used in user_routines.c/User_Initialization()/       C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	// Set_Number_of_Analog_Channels(). The VCFG0 and VCFG1 bits are also           C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	// set to select Vdd and Vss as the reference voltages                          C:\mort\mort_code_2006_PrePalmetto\adc.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	if(num_adc_channels >= 1 && num_adc_channels <= 14)                             C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           		ADCON1 = 15 - num_adc_channels;                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\adc.c
                                            	else                                                                           C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           		ADCON1 = 0; // sixteen channnels or out of range                               C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\adc.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	#endif                                                                          C:\mort\mort_code_2006_PrePalmetto\adc.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	// select Fosc/64 as the ADC Conversion Clock and right justify data            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	// in the conversion result register                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
003df2   0e86     MOVLW     0x86           	ADCON2 = 0b10000110;                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
003df4   6ec0     MOVWF     0xc0,0x0                                                                                        
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	// ADC interrupt is low priority                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
003df6   9c9f     BCF       0x9f,0x6,0x0   	IPR1bits.ADIP = 0;                                                              C:\mort\mort_code_2006_PrePalmetto\adc.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	// to prevent a spurious interrupt, make sure the interrupt flag is reset       C:\mort\mort_code_2006_PrePalmetto\adc.c
003df8   9c9e     BCF       0x9e,0x6,0x0   	PIR1bits.ADIF = 0;                                                              C:\mort\mort_code_2006_PrePalmetto\adc.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	// enable the ADC interrupt                                                     C:\mort\mort_code_2006_PrePalmetto\adc.c
003dfa   8c9d     BSF       0x9d,0x6,0x0   	PIE1bits.ADIE = 1;                                                              C:\mort\mort_code_2006_PrePalmetto\adc.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	// initialize and start timer 2, which is responsible for starting              C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	// analog to digital conversions                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
003dfc   c22d     MOVFF     0x22d,0xfe6    	Initialize_Timer_2(adc_sample_rate);                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
003dfe   ffe6                                                                                                               
003e00   c22e     MOVFF     0x22e,0xfe6                                                                                     
003e02   ffe6                                                                                                               
003e04   d814     RCALL     0x3e2e                                                                                          
003e06   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003e08   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003e0a   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
003e0c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003e0e   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
003e10   ffd9                                                                                                               
003e12   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	FUNCTION:		Disable_ADC()                                                       C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	PURPOSE:		Disables the Analog to Digital Conversion (ADC) hardware.            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	CALLED FROM:                                                                   C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	PARAMETERS:		None                                                              C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	RETURNS:		Nothing                                                              C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	COMMENTS:                                                                      C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\adc.c
003e14   cfd9     MOVFF     0xfd9,0xfe6    void Disable_ADC(void)                                                           C:\mort\mort_code_2006_PrePalmetto\adc.c
003e16   ffe6                                                                                                               
003e18   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
003e1a   ffd9                                                                                                               
003e1c   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	unsigned char i;                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	// disable timer 2                                                              C:\mort\mort_code_2006_PrePalmetto\adc.c
003e1e   d85f     RCALL     0x3ede         	Disable_Timer_2();                                                              C:\mort\mort_code_2006_PrePalmetto\adc.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	// disable the ADC interrupt                                                    C:\mort\mort_code_2006_PrePalmetto\adc.c
003e20   9c9d     BCF       0x9d,0x6,0x0   	PIE1bits.ADIE = 0;                                                              C:\mort\mort_code_2006_PrePalmetto\adc.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	// disable the ADC hardware and select ADC channel 0                            C:\mort\mort_code_2006_PrePalmetto\adc.c
003e22   6ac2     CLRF      0xc2,0x0       	ADCON0 = 0b00000000;                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
003e24   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
003e26   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003e28   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
003e2a   ffd9                                                                                                               
003e2c   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	FUNCTION:		Initialize_Timer_2()                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	PURPOSE:		Initializes the timer 2 hardware, which is responsible for           C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *					periodically starting analog to digital conversions.                       C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	CALLED FROM:	adc.c/Initialize_ADC()                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	PARAMETERS:		Unsigned integer containing the sample rate expressed in Hz       C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	RETURNS:		Nothing                                                              C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	COMMENTS:		The only supported sample rates are 200Hz, 400Hz, 800Hz,            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *					1600Hz, 3200Hz and 6400Hz.                                                 C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\adc.c
003e2e   cfd9     MOVFF     0xfd9,0xfe6    void Initialize_Timer_2(unsigned int adc_sample_rate)                            C:\mort\mort_code_2006_PrePalmetto\adc.c
003e30   ffe6                                                                                                               
003e32   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
003e34   ffd9                                                                                                               
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
003e36   0efd     MOVLW     0xfd           	switch(adc_sample_rate)                                                         C:\mort\mort_code_2006_PrePalmetto\adc.c
003e38   cfdb     MOVFF     0xfdb,0x35                                                                                      
003e3a   f035                                                                                                               
003e3c   0efe     MOVLW     0xfe                                                                                            
003e3e   cfdb     MOVFF     0xfdb,0x36                                                                                      
003e40   f036                                                                                                               
003e42   5035     MOVF      0x35,0x0,0x0                                                                                    
003e44   e102     BNZ       0x3e4a                                                                                          
003e46   0e19     MOVLW     0x19                                                                                            
003e48   1836     XORWF     0x36,0x0,0x0                                                                                    
003e4a   e03b     BZ        0x3ec2                                                                                          
003e4c   0e80     MOVLW     0x80                                                                                            
003e4e   1835     XORWF     0x35,0x0,0x0                                                                                    
003e50   e102     BNZ       0x3e56                                                                                          
003e52   0e0c     MOVLW     0xc                                                                                             
003e54   1836     XORWF     0x36,0x0,0x0                                                                                    
003e56   e030     BZ        0x3eb8                                                                                          
003e58   0e40     MOVLW     0x40                                                                                            
003e5a   1835     XORWF     0x35,0x0,0x0                                                                                    
003e5c   e102     BNZ       0x3e62                                                                                          
003e5e   0e06     MOVLW     0x6                                                                                             
003e60   1836     XORWF     0x36,0x0,0x0                                                                                    
003e62   e025     BZ        0x3eae                                                                                          
003e64   0e20     MOVLW     0x20                                                                                            
003e66   1835     XORWF     0x35,0x0,0x0                                                                                    
003e68   e102     BNZ       0x3e6e                                                                                          
003e6a   0e03     MOVLW     0x3                                                                                             
003e6c   1836     XORWF     0x36,0x0,0x0                                                                                    
003e6e   e01a     BZ        0x3ea4                                                                                          
003e70   0e90     MOVLW     0x90                                                                                            
003e72   1835     XORWF     0x35,0x0,0x0                                                                                    
003e74   e102     BNZ       0x3e7a                                                                                          
003e76   0e01     MOVLW     0x1                                                                                             
003e78   1836     XORWF     0x36,0x0,0x0                                                                                    
003e7a   e00f     BZ        0x3e9a                                                                                          
003e7c   0ec8     MOVLW     0xc8                                                                                            
003e7e   1835     XORWF     0x35,0x0,0x0                                                                                    
003e80   e101     BNZ       0x3e84                                                                                          
003e82   5036     MOVF      0x36,0x0,0x0                                                                                    
003e84   e005     BZ        0x3e90                                                                                          
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           		case 200:                                                                      C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           			// use these parameters for a 200Hz ADC sample rate                           C:\mort\mort_code_2006_PrePalmetto\adc.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           			// use a 1:16 prescaler and 1:14 postscaler                                   C:\mort\mort_code_2006_PrePalmetto\adc.c
003e90   0e6a     MOVLW     0x6a           			T2CON = 0b01101010;                                                           C:\mort\mort_code_2006_PrePalmetto\adc.c
003e92   6eca     MOVWF     0xca,0x0                                                                                        
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           			// Count to 221 before rolling over and generating                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           			// an interrupt (223.21 - 2 is ideal)                                         C:\mort\mort_code_2006_PrePalmetto\adc.c
003e94   0edd     MOVLW     0xdd           			PR2	= 221;                                                                    C:\mort\mort_code_2006_PrePalmetto\adc.c
003e96   6ecb     MOVWF     0xcb,0x0                                                                                        
003e98   d019     BRA       0x3ecc         			break;                                                                        C:\mort\mort_code_2006_PrePalmetto\adc.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           		case 400:                                                                      C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           			// use these parameters for a 400Hz ADC sample rate                           C:\mort\mort_code_2006_PrePalmetto\adc.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           			// use a 1:16 prescaler and 1:11 postscaler                                   C:\mort\mort_code_2006_PrePalmetto\adc.c
003e9a   0e52     MOVLW     0x52           			T2CON = 0b01010010;                                                           C:\mort\mort_code_2006_PrePalmetto\adc.c
003e9c   6eca     MOVWF     0xca,0x0                                                                                        
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           			// Count to 140 before rolling over and generating                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           			// an interrupt (142.05 - 2 is ideal)                                         C:\mort\mort_code_2006_PrePalmetto\adc.c
003e9e   0e8c     MOVLW     0x8c           			PR2	= 140;                                                                    C:\mort\mort_code_2006_PrePalmetto\adc.c
003ea0   6ecb     MOVWF     0xcb,0x0                                                                                        
003ea2   d014     BRA       0x3ecc         			break;                                                                        C:\mort\mort_code_2006_PrePalmetto\adc.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           		case 800:                                                                      C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           			// use these parameters for a 800Hz ADC sample rate                           C:\mort\mort_code_2006_PrePalmetto\adc.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           			// use a 1:16 prescaler and 1:11 postscaler                                   C:\mort\mort_code_2006_PrePalmetto\adc.c
003ea4   0e52     MOVLW     0x52           			T2CON = 0b01010010;                                                           C:\mort\mort_code_2006_PrePalmetto\adc.c
003ea6   6eca     MOVWF     0xca,0x0                                                                                        
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           			// Count to 69 before rolling over and generating                             C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           			// an interrupt (71.02 - 2 is ideal)                                          C:\mort\mort_code_2006_PrePalmetto\adc.c
003ea8   0e45     MOVLW     0x45           			PR2	= 69;                                                                     C:\mort\mort_code_2006_PrePalmetto\adc.c
003eaa   6ecb     MOVWF     0xcb,0x0                                                                                        
003eac   d00f     BRA       0x3ecc         			break;                                                                        C:\mort\mort_code_2006_PrePalmetto\adc.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           		case 1600:                                                                     C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           			// use these parameters for a 1600Hz ADC sample rate                          C:\mort\mort_code_2006_PrePalmetto\adc.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           			// use a 1:4 prescaler and 1:11 postscaler                                    C:\mort\mort_code_2006_PrePalmetto\adc.c
003eae   0e51     MOVLW     0x51           			T2CON = 0b01010001;                                                           C:\mort\mort_code_2006_PrePalmetto\adc.c
003eb0   6eca     MOVWF     0xca,0x0                                                                                        
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           			// Count to 140 before rolling over and generating                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           			// an interrupt (142.05 - 2 is ideal)                                         C:\mort\mort_code_2006_PrePalmetto\adc.c
003eb2   0e8c     MOVLW     0x8c           			PR2	= 140;                                                                    C:\mort\mort_code_2006_PrePalmetto\adc.c
003eb4   6ecb     MOVWF     0xcb,0x0                                                                                        
003eb6   d00a     BRA       0x3ecc         			break;                                                                        C:\mort\mort_code_2006_PrePalmetto\adc.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           		case 3200:                                                                     C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           			// use these parameters for a 3200Hz ADC sample rate                          C:\mort\mort_code_2006_PrePalmetto\adc.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           			// use a 1:1 prescaler and 1:11 postscaler                                    C:\mort\mort_code_2006_PrePalmetto\adc.c
003eb8   0e51     MOVLW     0x51           			T2CON = 0b01010001;                                                           C:\mort\mort_code_2006_PrePalmetto\adc.c
003eba   6eca     MOVWF     0xca,0x0                                                                                        
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           			// Count to 69 before rolling over and generating                             C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           			// an interrupt (71.02 - 2 is ideal)                                          C:\mort\mort_code_2006_PrePalmetto\adc.c
003ebc   0e45     MOVLW     0x45           			PR2	= 69;                                                                     C:\mort\mort_code_2006_PrePalmetto\adc.c
003ebe   6ecb     MOVWF     0xcb,0x0                                                                                        
003ec0   d005     BRA       0x3ecc         			break;                                                                        C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           		case 6400:                                                                     C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           			// use these parameters for a 6400Hz ADC sample rate                          C:\mort\mort_code_2006_PrePalmetto\adc.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           			// use a 1:4 prescaler and 1:11 postscaler                                    C:\mort\mort_code_2006_PrePalmetto\adc.c
003ec2   0e50     MOVLW     0x50           			T2CON = 0b01010000;                                                           C:\mort\mort_code_2006_PrePalmetto\adc.c
003ec4   6eca     MOVWF     0xca,0x0                                                                                        
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           			// Count to 140 before rolling over and generating                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           			// an interrupt (142.05 - 2 is ideal)                                         C:\mort\mort_code_2006_PrePalmetto\adc.c
003ec6   0e8c     MOVLW     0x8c           			PR2	= 140;                                                                    C:\mort\mort_code_2006_PrePalmetto\adc.c
003ec8   6ecb     MOVWF     0xcb,0x0                                                                                        
003eca   d000     BRA       0x3ecc         			break;                                                                        C:\mort\mort_code_2006_PrePalmetto\adc.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           		default:                                                                       C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           			// if a non-supported rate is specified,                                      C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           			// default to a 200Hz ADC sample rate                                         C:\mort\mort_code_2006_PrePalmetto\adc.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           			// use a 1:16 prescaler and 1:14 postscaler                                   C:\mort\mort_code_2006_PrePalmetto\adc.c
003e86   0e6a     MOVLW     0x6a           			T2CON = 0b01101010;                                                           C:\mort\mort_code_2006_PrePalmetto\adc.c
003e88   6eca     MOVWF     0xca,0x0                                                                                        
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           			// Count to 221 before rolling over and generating                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           			// an interrupt (223.21 - 2 is ideal)                                         C:\mort\mort_code_2006_PrePalmetto\adc.c
003e8a   0edd     MOVLW     0xdd           			PR2	= 221;                                                                    C:\mort\mort_code_2006_PrePalmetto\adc.c
003e8c   6ecb     MOVWF     0xcb,0x0                                                                                        
003e8e   d01e     BRA       0x3ecc         			break;                                                                        C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\adc.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	// make sure the timer 2 register starts at zero                                C:\mort\mort_code_2006_PrePalmetto\adc.c
003ecc   6acc     CLRF      0xcc,0x0       	TMR2 = 0x00;                                                                    C:\mort\mort_code_2006_PrePalmetto\adc.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	// timer 2 interrupt is low priority                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
003ece   929f     BCF       0x9f,0x1,0x0   	IPR1bits.TMR2IP = 0;                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	// to prevent a spurious interrupt, make sure the interrupt flag is reset       C:\mort\mort_code_2006_PrePalmetto\adc.c
003ed0   929e     BCF       0x9e,0x1,0x0   	PIR1bits.TMR2IF = 0;                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	// enable the timer 2 interrupt                                                 C:\mort\mort_code_2006_PrePalmetto\adc.c
003ed2   829d     BSF       0x9d,0x1,0x0   	PIE1bits.TMR2IE = 1;                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	// enable timer 2                                                               C:\mort\mort_code_2006_PrePalmetto\adc.c
003ed4   84ca     BSF       0xca,0x2,0x0   	T2CONbits.TMR2ON = 1;                                                           C:\mort\mort_code_2006_PrePalmetto\adc.c
003ed6   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
003ed8   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
003eda   ffd9                                                                                                               
003edc   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	FUNCTION:		Disable_Timer_2()                                                   C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	PURPOSE:		Disables the timer 2 hardware.                                       C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	CALLED FROM:                                                                   C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	PARAMETERS:		None                                                              C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	RETURNS:		Nothing                                                              C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	COMMENTS:                                                                      C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           void Disable_Timer_2(void)                                                       C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	// disable the timer 2 interrupt                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
003ede   929d     BCF       0x9d,0x1,0x0   	PIE1bits.TMR2IE = 0;                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	// disable timer 2                                                              C:\mort\mort_code_2006_PrePalmetto\adc.c
003ee0   94ca     BCF       0xca,0x2,0x0   	T2CONbits.TMR2ON = 0;                                                           C:\mort\mort_code_2006_PrePalmetto\adc.c
003ee2   0012     RETURN    0x0            }                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	FUNCTION:		Get_ADC_Result()                                                    C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	PURPOSE:		Given the ADC channel number, returns the last ADC result            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *					expressed in "data number" units.                                          C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	CALLED FROM:                                                                   C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	PARAMETERS:		ADC channel number                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	RETURNS:		Nothing                                                              C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	COMMENTS:                                                                      C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\adc.c
003ee4   cfd9     MOVFF     0xfd9,0xfe6    unsigned int Get_ADC_Result(unsigned char channel)                               C:\mort\mort_code_2006_PrePalmetto\adc.c
003ee6   ffe6                                                                                                               
003ee8   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
003eea   ffd9                                                                                                               
003eec   0e02     MOVLW     0x2                                                                                             
003eee   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	unsigned int temp_adc_result;                                                   C:\mort\mort_code_2006_PrePalmetto\adc.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
003ef0   0efe     MOVLW     0xfe           	if(channel <= num_adc_channels)                                                 C:\mort\mort_code_2006_PrePalmetto\adc.c
003ef2   cfdb     MOVFF     0xfdb,0x0                                                                                       
003ef4   f000                                                                                                               
003ef6   0102     MOVLB     0x2                                                                                             
003ef8   5131     MOVF      0x31,0x0,0x1                                                                                    
003efa   80d8     BSF       0xd8,0x0,0x0                                                                                    
003efc   5400     SUBFWB    0x0,0x0,0x0                                                                                     
003efe   e312     BNC       0x3f24                                                                                          
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           		// disable the ADC interrupt                                                   C:\mort\mort_code_2006_PrePalmetto\adc.c
003f00   9c9d     BCF       0x9d,0x6,0x0   		PIE1bits.ADIE = 0;                                                             C:\mort\mort_code_2006_PrePalmetto\adc.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           		// one is subtracted because analog input 1 maps to adc_result[0],             C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           		// input 2 maps to adc_result[1],..., input 16 maps to adc_result[15]          C:\mort\mort_code_2006_PrePalmetto\adc.c
003f02   0efe     MOVLW     0xfe           		temp_adc_result = adc_result[channel - 1];                                     C:\mort\mort_code_2006_PrePalmetto\adc.c
003f04   04db     DECF      0xdb,0x0,0x0                                                                                    
003f06   6ee9     MOVWF     0xe9,0x0                                                                                        
003f08   6aea     CLRF      0xea,0x0                                                                                        
003f0a   90d8     BCF       0xd8,0x0,0x0                                                                                    
003f0c   36e9     RLCF      0xe9,0x1,0x0                                                                                    
003f0e   36ea     RLCF      0xea,0x1,0x0                                                                                    
003f10   0e37     MOVLW     0x37                                                                                            
003f12   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
003f14   0e02     MOVLW     0x2                                                                                             
003f16   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
003f18   cfee     MOVFF     0xfee,0xfde                                                                                     
003f1a   ffde                                                                                                               
003f1c   cfed     MOVFF     0xfed,0xfdd                                                                                     
003f1e   ffdd                                                                                                               
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           		// enable the ADC interrupt                                                    C:\mort\mort_code_2006_PrePalmetto\adc.c
003f20   8c9d     BSF       0x9d,0x6,0x0   		PIE1bits.ADIE = 1;                                                             C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\adc.c
003f22   d002     BRA       0x3f28         	else                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           		// bad channel number; return zero                                             C:\mort\mort_code_2006_PrePalmetto\adc.c
003f24   6ade     CLRF      0xde,0x0       		temp_adc_result = 0;                                                           C:\mort\mort_code_2006_PrePalmetto\adc.c
003f26   6add     CLRF      0xdd,0x0                                                                                        
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\adc.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
003f28   cfde     MOVFF     0xfde,0x0      	return(temp_adc_result);                                                        C:\mort\mort_code_2006_PrePalmetto\adc.c
003f2a   f000                                                                                                               
003f2c   cfdd     MOVFF     0xfdd,0x1                                                                                       
003f2e   f001                                                                                                               
003f30   c000     MOVFF     0x0,0xff3                                                                                       
003f32   fff3                                                                                                               
003f34   c001     MOVFF     0x1,0xff4                                                                                       
003f36   fff4                                                                                                               
003f38   d000     BRA       0x3f3a                                                                                          
003f3a   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
003f3c   ffe1                                                                                                               
003f3e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003f40   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
003f42   ffd9                                                                                                               
003f44   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	FUNCTION:		Convert_ADC_to_mV()                                                 C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	PURPOSE:		Converts the raw output of the ADC to millivolts.                    C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	CALLED FROM:                                                                   C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	PARAMETERS:		ADC output value to convert                                       C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	RETURNS:		Millivolts                                                           C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	COMMENTS:                                                                      C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\adc.c
003f46   cfd9     MOVFF     0xfd9,0xfe6    unsigned int Convert_ADC_to_mV(unsigned int adc)                                 C:\mort\mort_code_2006_PrePalmetto\adc.c
003f48   ffe6                                                                                                               
003f4a   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
003f4c   ffd9                                                                                                               
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
003f4e   0efd     MOVLW     0xfd           	return((unsigned int)(((long)adc * (VREF_POS_MV - VREF_NEG_MV)) / ADC_RANGE));  C:\mort\mort_code_2006_PrePalmetto\adc.c
003f50   cfdb     MOVFF     0xfdb,0x0                                                                                       
003f52   f000                                                                                                               
003f54   0efe     MOVLW     0xfe                                                                                            
003f56   cfdb     MOVFF     0xfdb,0x1                                                                                       
003f58   f001                                                                                                               
003f5a   6a02     CLRF      0x2,0x0                                                                                         
003f5c   6a03     CLRF      0x3,0x0                                                                                         
003f5e   0e88     MOVLW     0x88                                                                                            
003f60   6e38     MOVWF     0x38,0x0                                                                                        
003f62   0e13     MOVLW     0x13                                                                                            
003f64   6e39     MOVWF     0x39,0x0                                                                                        
003f66   6a3a     CLRF      0x3a,0x0                                                                                        
003f68   6a3b     CLRF      0x3b,0x0                                                                                        
003f6a   c000     MOVFF     0x0,0x33                                                                                        
003f6c   f033                                                                                                               
003f6e   c001     MOVFF     0x1,0x34                                                                                        
003f70   f034                                                                                                               
003f72   c002     MOVFF     0x2,0x35                                                                                        
003f74   f035                                                                                                               
003f76   c003     MOVFF     0x3,0x36                                                                                        
003f78   f036                                                                                                               
003f7a   ec9a     CALL      0x5334,0x0                                                                                      
003f7c   f029                                                                                                               
003f7e   c02f     MOVFF     0x2f,0x0                                                                                        
003f80   f000                                                                                                               
003f82   c030     MOVFF     0x30,0x1                                                                                        
003f84   f001                                                                                                               
003f86   c031     MOVFF     0x31,0x2                                                                                        
003f88   f002                                                                                                               
003f8a   c032     MOVFF     0x32,0x3                                                                                        
003f8c   f003                                                                                                               
003f8e   6a38     CLRF      0x38,0x0                                                                                        
003f90   0e08     MOVLW     0x8                                                                                             
003f92   6e39     MOVWF     0x39,0x0                                                                                        
003f94   6a3a     CLRF      0x3a,0x0                                                                                        
003f96   6a3b     CLRF      0x3b,0x0                                                                                        
003f98   c000     MOVFF     0x0,0x33                                                                                        
003f9a   f033                                                                                                               
003f9c   c001     MOVFF     0x1,0x34                                                                                        
003f9e   f034                                                                                                               
003fa0   c002     MOVFF     0x2,0x35                                                                                        
003fa2   f035                                                                                                               
003fa4   c003     MOVFF     0x3,0x36                                                                                        
003fa6   f036                                                                                                               
003fa8   ecc1     CALL      0x3182,0x0                                                                                      
003faa   f018                                                                                                               
003fac   c033     MOVFF     0x33,0x0                                                                                        
003fae   f000                                                                                                               
003fb0   c034     MOVFF     0x34,0x1                                                                                        
003fb2   f001                                                                                                               
003fb4   c035     MOVFF     0x35,0x2                                                                                        
003fb6   f002                                                                                                               
003fb8   c036     MOVFF     0x36,0x3                                                                                        
003fba   f003                                                                                                               
003fbc   c000     MOVFF     0x0,0xff3                                                                                       
003fbe   fff3                                                                                                               
003fc0   c001     MOVFF     0x1,0xff4                                                                                       
003fc2   fff4                                                                                                               
003fc4   d000     BRA       0x3fc6                                                                                          
003fc6   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
003fc8   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
003fca   ffd9                                                                                                               
003fcc   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	FUNCTION:		Get_ADC_Result_Count()                                              C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	PURPOSE:                                                                       C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	CALLED FROM:                                                                   C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	PARAMETERS:		None                                                              C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	RETURNS:		Nothing                                                              C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	COMMENTS:                                                                      C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\adc.c
003fce   cfd9     MOVFF     0xfd9,0xfe6    unsigned char Get_ADC_Result_Count()                                             C:\mort\mort_code_2006_PrePalmetto\adc.c
003fd0   ffe6                                                                                                               
003fd2   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
003fd4   ffd9                                                                                                               
003fd6   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	unsigned char temp_adc_update_count;                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	// disable the ADC interrupt                                                    C:\mort\mort_code_2006_PrePalmetto\adc.c
003fd8   9c9d     BCF       0x9d,0x6,0x0   	PIE1bits.ADIE = 0;                                                              C:\mort\mort_code_2006_PrePalmetto\adc.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
003fda   c1ff     MOVFF     0x1ff,0xfdf    	temp_adc_update_count = adc_update_count;                                       C:\mort\mort_code_2006_PrePalmetto\adc.c
003fdc   ffdf                                                                                                               
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	// enable the ADC interrupt                                                     C:\mort\mort_code_2006_PrePalmetto\adc.c
003fde   8c9d     BSF       0x9d,0x6,0x0   	PIE1bits.ADIE = 1;                                                              C:\mort\mort_code_2006_PrePalmetto\adc.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
003fe0   50df     MOVF      0xdf,0x0,0x0   	return(temp_adc_update_count);                                                  C:\mort\mort_code_2006_PrePalmetto\adc.c
003fe2   d000     BRA       0x3fe4                                                                                          
003fe4   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
003fe6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003fe8   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
003fea   ffd9                                                                                                               
003fec   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	FUNCTION:		Reset_ADC_Result_Count()                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	PURPOSE:		Resets the ADC update counter to zero                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	CALLED FROM:                                                                   C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	PARAMETERS:		None                                                              C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	RETURNS:		Nothing                                                              C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	COMMENTS:                                                                      C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           void Reset_ADC_Result_Count()                                                    C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	// disable the ADC interrupt                                                    C:\mort\mort_code_2006_PrePalmetto\adc.c
003fee   9c9d     BCF       0x9d,0x6,0x0   	PIE1bits.ADIE = 0;                                                              C:\mort\mort_code_2006_PrePalmetto\adc.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
003ff0   0101     MOVLB     0x1            	adc_update_count = 0;                                                           C:\mort\mort_code_2006_PrePalmetto\adc.c
003ff2   6bff     CLRF      0xff,0x1                                                                                        
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	// enable the ADC interrupt                                                     C:\mort\mort_code_2006_PrePalmetto\adc.c
003ff4   8c9d     BSF       0x9d,0x6,0x0   	PIE1bits.ADIE = 1;                                                              C:\mort\mort_code_2006_PrePalmetto\adc.c
003ff6   0012     RETURN    0x0            }                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	FUNCTION:		Timer_2_Int_Handler()                                               C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	PURPOSE:		Timer 2 interrupt service routine                                    C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	CALLED FROM:	user_routines_fast.c/InterruptHandlerLow()                        C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	PARAMETERS:		None                                                              C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	RETURNS:		Nothing                                                              C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	COMMENTS:                                                                      C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           void Timer_2_Int_Handler(void)                                                   C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	// start a new analog to digital conversion                                     C:\mort\mort_code_2006_PrePalmetto\adc.c
003ff8   82c2     BSF       0xc2,0x1,0x0   	ADCON0bits.GO = 1;                                                              C:\mort\mort_code_2006_PrePalmetto\adc.c
003ffa   0012     RETURN    0x0            }                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	FUNCTION:		ADC_Int_Handler()                                                   C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	PURPOSE:		ADC interrupt service routine                                        C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	CALLED FROM:	user_routines_fast.c/InterruptHandlerLow()                        C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	PARAMETERS:		None                                                              C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	RETURNS:		Nothing                                                              C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *	COMMENTS:                                                                      C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\adc.c
003ffc   cfd9     MOVFF     0xfd9,0xfe6    void ADC_Int_Handler(void)                                                       C:\mort\mort_code_2006_PrePalmetto\adc.c
003ffe   ffe6                                                                                                               
004000   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004002   ffd9                                                                                                               
004004   0e05     MOVLW     0x5                                                                                             
004006   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	unsigned int adc;                                                               C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	unsigned char adcon0_temp;                                                      C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	int i;                                                                          C:\mort\mort_code_2006_PrePalmetto\adc.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	// get conversion results                                                       C:\mort\mort_code_2006_PrePalmetto\adc.c
004008   50c4     MOVF      0xc4,0x0,0x0   	adc = ADRESH;                                                                   C:\mort\mort_code_2006_PrePalmetto\adc.c
00400a   6ede     MOVWF     0xde,0x0                                                                                        
00400c   6add     CLRF      0xdd,0x0                                                                                        
00400e   cfd9     MOVFF     0xfd9,0xfe9    	adc <<= 8;                                                                      C:\mort\mort_code_2006_PrePalmetto\adc.c
004010   ffe9                                                                                                               
004012   cfda     MOVFF     0xfda,0xfea                                                                                     
004014   ffea                                                                                                               
004016   50ee     MOVF      0xee,0x0,0x0                                                                                    
004018   6eed     MOVWF     0xed,0x0                                                                                        
00401a   6aef     CLRF      0xef,0x0                                                                                        
00401c   50c3     MOVF      0xc3,0x0,0x0   	adc += ADRESL;                                                                  C:\mort\mort_code_2006_PrePalmetto\adc.c
00401e   26de     ADDWF     0xde,0x1,0x0                                                                                    
004020   0e00     MOVLW     0x0                                                                                             
004022   22dd     ADDWFC    0xdd,0x1,0x0                                                                                    
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	// add the ADC data to the appropriate accumulator                              C:\mort\mort_code_2006_PrePalmetto\adc.c
004024   cfde     MOVFF     0xfde,0x0      	accum[channel] += (long)adc;                                                    C:\mort\mort_code_2006_PrePalmetto\adc.c
004026   f000                                                                                                               
004028   cfdd     MOVFF     0xfdd,0x1                                                                                       
00402a   f001                                                                                                               
00402c   6a02     CLRF      0x2,0x0                                                                                         
00402e   6a03     CLRF      0x3,0x0                                                                                         
004030   0102     MOVLB     0x2                                                                                             
004032   513b     MOVF      0x3b,0x0,0x1                                                                                    
004034   0d04     MULLW     0x4                                                                                             
004036   cff3     MOVFF     0xff3,0xfe9                                                                                     
004038   ffe9                                                                                                               
00403a   cff4     MOVFF     0xff4,0xfea                                                                                     
00403c   ffea                                                                                                               
00403e   0e33     MOVLW     0x33                                                                                            
004040   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
004042   0e02     MOVLW     0x2                                                                                             
004044   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
004046   5000     MOVF      0x0,0x0,0x0                                                                                     
004048   26ee     ADDWF     0xee,0x1,0x0                                                                                    
00404a   5001     MOVF      0x1,0x0,0x0                                                                                     
00404c   22ee     ADDWFC    0xee,0x1,0x0                                                                                    
00404e   5002     MOVF      0x2,0x0,0x0                                                                                     
004050   22ee     ADDWFC    0xee,0x1,0x0                                                                                    
004052   5003     MOVF      0x3,0x0,0x0                                                                                     
004054   22ee     ADDWFC    0xee,0x1,0x0                                                                                    
                                           	                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	// increment the ADC channel index                                              C:\mort\mort_code_2006_PrePalmetto\adc.c
004056   2b3b     INCF      0x3b,0x1,0x1   	channel++;                                                                      C:\mort\mort_code_2006_PrePalmetto\adc.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	// do we need to wrap around to zero?                                           C:\mort\mort_code_2006_PrePalmetto\adc.c
004058   5131     MOVF      0x31,0x0,0x1   	if(channel >= num_adc_channels)                                                 C:\mort\mort_code_2006_PrePalmetto\adc.c
00405a   5d3b     SUBWF     0x3b,0x0,0x1                                                                                    
00405c   e304     BNC       0x4066                                                                                          
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\adc.c
00405e   6b3b     CLRF      0x3b,0x1       		channel = 0;                                                                   C:\mort\mort_code_2006_PrePalmetto\adc.c
004060   2b39     INCF      0x39,0x1,0x1   		samples++;                                                                     C:\mort\mort_code_2006_PrePalmetto\adc.c
004062   0e00     MOVLW     0x0                                                                                             
004064   233a     ADDWFC    0x3a,0x1,0x1                                                                                    
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\adc.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	// Select next ADC channel. This also starts the process whereby the ADC        C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	// sample and hold capacitor is allowed to start charging, which must be        C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	// completed before the next analog to digital conversion can be started.       C:\mort\mort_code_2006_PrePalmetto\adc.c
004066   0e02     MOVLW     0x2            	adcon0_temp = channel;                                                          C:\mort\mort_code_2006_PrePalmetto\adc.c
004068   c23b     MOVFF     0x23b,0xfdb                                                                                     
00406a   ffdb                                                                                                               
00406c   50db     MOVF      0xdb,0x0,0x0   	adcon0_temp <<= 2;                                                              C:\mort\mort_code_2006_PrePalmetto\adc.c
00406e   0d04     MULLW     0x4                                                                                             
004070   0e02     MOVLW     0x2                                                                                             
004072   cff3     MOVFF     0xff3,0xfdb                                                                                     
004074   ffdb                                                                                                               
004076   80db     BSF       0xdb,0x0,0x0   	adcon0_temp |= 0b00000001;                                                      C:\mort\mort_code_2006_PrePalmetto\adc.c
004078   50db     MOVF      0xdb,0x0,0x0   	ADCON0 = adcon0_temp;                                                           C:\mort\mort_code_2006_PrePalmetto\adc.c
00407a   6ec2     MOVWF     0xc2,0x0                                                                                        
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           	// check to see if we've got a full sample set                                  C:\mort\mort_code_2006_PrePalmetto\adc.c
00407c   512f     MOVF      0x2f,0x0,0x1   	if(samples >= adc_samples_per_update)                                           C:\mort\mort_code_2006_PrePalmetto\adc.c
00407e   5d39     SUBWF     0x39,0x0,0x1                                                                                    
004080   5130     MOVF      0x30,0x0,0x1                                                                                    
004082   593a     SUBWFB    0x3a,0x0,0x1                                                                                    
004084   e201     BC        0x4088                                                                                          
004086   d083     BRA       0x418e                                                                                          
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           		// update the ADC result array                                                 C:\mort\mort_code_2006_PrePalmetto\adc.c
004088   0e03     MOVLW     0x3            		for(i=0; i < num_adc_channels; i++)                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
00408a   6adb     CLRF      0xdb,0x0                                                                                        
00408c   0e04     MOVLW     0x4                                                                                             
00408e   6adb     CLRF      0xdb,0x0                                                                                        
004090   0e03     MOVLW     0x3                                                                                             
004092   cfdb     MOVFF     0xfdb,0x0                                                                                       
004094   f000                                                                                                               
004096   0e04     MOVLW     0x4                                                                                             
004098   cfdb     MOVFF     0xfdb,0x1                                                                                       
00409a   f001                                                                                                               
00409c   0102     MOVLB     0x2                                                                                             
00409e   5131     MOVF      0x31,0x0,0x1                                                                                    
0040a0   0100     MOVLB     0x0                                                                                             
0040a2   ae01     BTFSS     0x1,0x7,0x0                                                                                     
0040a4   d002     BRA       0x40aa                                                                                          
0040a6   90d8     BCF       0xd8,0x0,0x0                                                                                    
0040a8   d003     BRA       0x40b0                                                                                          
0040aa   5c00     SUBWF     0x0,0x0,0x0                                                                                     
0040ac   0e00     MOVLW     0x0                                                                                             
0040ae   5801     SUBWFB    0x1,0x0,0x0                                                                                     
0040b0   e23a     BC        0x4126                                                                                          
00411a   0e03     MOVLW     0x3                                                                                             
00411c   2adb     INCF      0xdb,0x1,0x0                                                                                    
00411e   0e04     MOVLW     0x4                                                                                             
004120   e301     BNC       0x4124                                                                                          
004122   2adb     INCF      0xdb,0x1,0x0                                                                                    
004124   d7b5     BRA       0x4090                                                                                          
                                           		{                                                                              C:\mort\mort_code_2006_PrePalmetto\adc.c
0040b2   0e03     MOVLW     0x3            			adc_result[i] = (long)(accum[i] >> adc_result_divisor);                       C:\mort\mort_code_2006_PrePalmetto\adc.c
0040b4   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
0040b6   ffe9                                                                                                               
0040b8   0e04     MOVLW     0x4                                                                                             
0040ba   cfdb     MOVFF     0xfdb,0xfea                                                                                     
0040bc   ffea                                                                                                               
0040be   90d8     BCF       0xd8,0x0,0x0                                                                                    
0040c0   36e9     RLCF      0xe9,0x1,0x0                                                                                    
0040c2   36ea     RLCF      0xea,0x1,0x0                                                                                    
0040c4   90d8     BCF       0xd8,0x0,0x0                                                                                    
0040c6   36e9     RLCF      0xe9,0x1,0x0                                                                                    
0040c8   36ea     RLCF      0xea,0x1,0x0                                                                                    
0040ca   0e33     MOVLW     0x33                                                                                            
0040cc   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
0040ce   0e02     MOVLW     0x2                                                                                             
0040d0   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
0040d2   0102     MOVLB     0x2                                                                                             
0040d4   5132     MOVF      0x32,0x0,0x1                                                                                    
0040d6   0b1f     ANDLW     0x1f                                                                                            
0040d8   cfee     MOVFF     0xfee,0x0                                                                                       
0040da   f000                                                                                                               
0040dc   cfee     MOVFF     0xfee,0x1                                                                                       
0040de   f001                                                                                                               
0040e0   cfee     MOVFF     0xfee,0x2                                                                                       
0040e2   f002                                                                                                               
0040e4   cfee     MOVFF     0xfee,0x3                                                                                       
0040e6   f003                                                                                                               
0040e8   e007     BZ        0x40f8                                                                                          
0040ea   90d8     BCF       0xd8,0x0,0x0                                                                                    
0040ec   3203     RRCF      0x3,0x1,0x0                                                                                     
0040ee   3202     RRCF      0x2,0x1,0x0                                                                                     
0040f0   3201     RRCF      0x1,0x1,0x0                                                                                     
0040f2   3200     RRCF      0x0,0x1,0x0                                                                                     
0040f4   06e8     DECF      0xe8,0x1,0x0                                                                                    
0040f6   e1f9     BNZ       0x40ea                                                                                          
0040f8   0e03     MOVLW     0x3                                                                                             
0040fa   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
0040fc   ffe9                                                                                                               
0040fe   0e04     MOVLW     0x4                                                                                             
004100   cfdb     MOVFF     0xfdb,0xfea                                                                                     
004102   ffea                                                                                                               
004104   90d8     BCF       0xd8,0x0,0x0                                                                                    
004106   36e9     RLCF      0xe9,0x1,0x0                                                                                    
004108   36ea     RLCF      0xea,0x1,0x0                                                                                    
00410a   0e37     MOVLW     0x37                                                                                            
00410c   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
00410e   0e02     MOVLW     0x2                                                                                             
004110   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
004112   c000     MOVFF     0x0,0xfee                                                                                       
004114   ffee                                                                                                               
004116   c001     MOVFF     0x1,0xfed                                                                                       
004118   ffed                                                                                                               
                                           		}                                                                              C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           		// reset the sample accumulator(s) to zero                                     C:\mort\mort_code_2006_PrePalmetto\adc.c
004126   0e03     MOVLW     0x3            		for(i=0; i < num_adc_channels; i++)                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
004128   6adb     CLRF      0xdb,0x0                                                                                        
00412a   0e04     MOVLW     0x4                                                                                             
00412c   6adb     CLRF      0xdb,0x0                                                                                        
00412e   0e03     MOVLW     0x3                                                                                             
004130   cfdb     MOVFF     0xfdb,0x0                                                                                       
004132   f000                                                                                                               
004134   0e04     MOVLW     0x4                                                                                             
004136   cfdb     MOVFF     0xfdb,0x1                                                                                       
004138   f001                                                                                                               
00413a   0102     MOVLB     0x2                                                                                             
00413c   5131     MOVF      0x31,0x0,0x1                                                                                    
00413e   0100     MOVLB     0x0                                                                                             
004140   ae01     BTFSS     0x1,0x7,0x0                                                                                     
004142   d002     BRA       0x4148                                                                                          
004144   90d8     BCF       0xd8,0x0,0x0                                                                                    
004146   d003     BRA       0x414e                                                                                          
004148   5c00     SUBWF     0x0,0x0,0x0                                                                                     
00414a   0e00     MOVLW     0x0                                                                                             
00414c   5801     SUBWFB    0x1,0x0,0x0                                                                                     
00414e   e21a     BC        0x4184                                                                                          
004178   0e03     MOVLW     0x3                                                                                             
00417a   2adb     INCF      0xdb,0x1,0x0                                                                                    
00417c   0e04     MOVLW     0x4                                                                                             
00417e   e301     BNC       0x4182                                                                                          
004180   2adb     INCF      0xdb,0x1,0x0                                                                                    
004182   d7d5     BRA       0x412e                                                                                          
                                           		{                                                                              C:\mort\mort_code_2006_PrePalmetto\adc.c
004150   0e03     MOVLW     0x3            			accum[i] = 0L;                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
004152   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
004154   ffe9                                                                                                               
004156   0e04     MOVLW     0x4                                                                                             
004158   cfdb     MOVFF     0xfdb,0xfea                                                                                     
00415a   ffea                                                                                                               
00415c   90d8     BCF       0xd8,0x0,0x0                                                                                    
00415e   36e9     RLCF      0xe9,0x1,0x0                                                                                    
004160   36ea     RLCF      0xea,0x1,0x0                                                                                    
004162   90d8     BCF       0xd8,0x0,0x0                                                                                    
004164   36e9     RLCF      0xe9,0x1,0x0                                                                                    
004166   36ea     RLCF      0xea,0x1,0x0                                                                                    
004168   0e33     MOVLW     0x33                                                                                            
00416a   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
00416c   0e02     MOVLW     0x2                                                                                             
00416e   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
004170   6aee     CLRF      0xee,0x0                                                                                        
004172   6aee     CLRF      0xee,0x0                                                                                        
004174   6aee     CLRF      0xee,0x0                                                                                        
004176   6aee     CLRF      0xee,0x0                                                                                        
                                           		}                                                                              C:\mort\mort_code_2006_PrePalmetto\adc.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           		// signal that a fresh sample set is available                                 C:\mort\mort_code_2006_PrePalmetto\adc.c
004184   0101     MOVLB     0x1            		adc_update_count++;                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
004186   2bff     INCF      0xff,0x1,0x1                                                                                    
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\adc.c
                                           		// start a fresh sample set                                                    C:\mort\mort_code_2006_PrePalmetto\adc.c
004188   0102     MOVLB     0x2            		samples = 0;                                                                   C:\mort\mort_code_2006_PrePalmetto\adc.c
00418a   6b39     CLRF      0x39,0x1                                                                                        
00418c   6b3a     CLRF      0x3a,0x1                                                                                        
                                           	}	                                                                              C:\mort\mort_code_2006_PrePalmetto\adc.c
00418e   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\mort\mort_code_2006_PrePalmetto\adc.c
004190   ffe1                                                                                                               
004192   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004194   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004196   ffd9                                                                                                               
004198   0012     RETURN    0x0                                                                                             
                                           /******************************************************************************* C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           * FILE NAME: autonomous.c                                                        C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           * DESCRIPTION:                                                                   C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           * This file contains autonomous mode functions                                   C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           *                                                                                C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           *******************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           #include <stdio.h>                                                               C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           #include "ifi_aliases.h"                                                         C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           #include "ifi_default.h"                                                         C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           #include "ifi_utilities.h"                                                       C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           #include "user_routines.h"                                                       C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           #include "camera.h"                                                              C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           #include "MORT_TRACKING.h"                                                       C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           #include "MORT_AUTONOMOUS.h"                                                     C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           #include "MORT_TIMERS.h"                                                         C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           /************************************************************************************* C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                                                              MORT VARIABLES                                   C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           *************************************************************************************/ C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           int auton_state;                                                                 C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           unsigned char first_run = 1;                                                     C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           extern unsigned char tracking_lock;                                              C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           extern unsigned char tracking_lock_pan;                                          C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           extern unsigned char Collector_Debounce;                                         C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           extern unsigned char Gravity_Debounce;                                           C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           extern unsigned char Shooter_Debounce;                                           C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           extern unsigned char Manual_Toggle_State;                                        C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           extern unsigned char Feed_Debounce;                                              C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           int counter = 0;                                                                 C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           int Get_Auto_Mode(void)                                                          C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0034b6   b481     BTFSC     0x81,0x2,0x0   	if (rc_dig_in01 == 0)                                                           C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0034b8   d005     BRA       0x34c4                                                                                          
0034ba   0e01     MOVLW     0x1            		return 1;                                                                      C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0034bc   6ef3     MOVWF     0xf3,0x0                                                                                        
0034be   6af4     CLRF      0xf4,0x0                                                                                        
0034c0   d027     BRA       0x3510                                                                                          
0034c2   d026     BRA       0x3510         	else if (rc_dig_in02 == 0)                                                      C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0034c4   b681     BTFSC     0x81,0x3,0x0                                                                                    
0034c6   d005     BRA       0x34d2                                                                                          
0034c8   0e02     MOVLW     0x2            		return 2;                                                                      C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0034ca   6ef3     MOVWF     0xf3,0x0                                                                                        
0034cc   6af4     CLRF      0xf4,0x0                                                                                        
0034ce   d020     BRA       0x3510                                                                                          
0034d0   d01f     BRA       0x3510         	else if (rc_dig_in03 == 0)                                                      C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0034d2   b881     BTFSC     0x81,0x4,0x0                                                                                    
0034d4   d005     BRA       0x34e0                                                                                          
0034d6   0e03     MOVLW     0x3            		return 3;                                                                      C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0034d8   6ef3     MOVWF     0xf3,0x0                                                                                        
0034da   6af4     CLRF      0xf4,0x0                                                                                        
0034dc   d019     BRA       0x3510                                                                                          
0034de   d018     BRA       0x3510         	else if (rc_dig_in04 == 0)                                                      C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0034e0   ba81     BTFSC     0x81,0x5,0x0                                                                                    
0034e2   d005     BRA       0x34ee                                                                                          
0034e4   0e04     MOVLW     0x4            		return 4;                                                                      C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0034e6   6ef3     MOVWF     0xf3,0x0                                                                                        
0034e8   6af4     CLRF      0xf4,0x0                                                                                        
0034ea   d012     BRA       0x3510                                                                                          
0034ec   d011     BRA       0x3510         	else if (rc_dig_in05 == 0)                                                      C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0034ee   bc81     BTFSC     0x81,0x6,0x0                                                                                    
0034f0   d005     BRA       0x34fc                                                                                          
0034f2   0e05     MOVLW     0x5            		return 5;                                                                      C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0034f4   6ef3     MOVWF     0xf3,0x0                                                                                        
0034f6   6af4     CLRF      0xf4,0x0                                                                                        
0034f8   d00b     BRA       0x3510                                                                                          
0034fa   d00a     BRA       0x3510         	else if (rc_dig_in06 == 0)                                                      C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0034fc   be81     BTFSC     0x81,0x7,0x0                                                                                    
0034fe   d005     BRA       0x350a                                                                                          
003500   0e06     MOVLW     0x6            		return 6;                                                                      C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003502   6ef3     MOVWF     0xf3,0x0                                                                                        
003504   6af4     CLRF      0xf4,0x0                                                                                        
003506   d004     BRA       0x3510                                                                                          
003508   d003     BRA       0x3510         	else                                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
00350a   6af3     CLRF      0xf3,0x0       		return 0;                                                                      C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
00350c   6af4     CLRF      0xf4,0x0                                                                                        
00350e   d000     BRA       0x3510                                                                                          
003510   0012     RETURN    0x0            }                                                                                C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003512   cfd9     MOVFF     0xfd9,0xfe6    void MORT_autonomous_mode( int mode )                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003514   ffe6                                                                                                               
003516   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
003518   ffd9                                                                                                               
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
00351a   0efd     MOVLW     0xfd           	switch (mode)                                                                   C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
00351c   cfdb     MOVFF     0xfdb,0x35                                                                                      
00351e   f035                                                                                                               
003520   0efe     MOVLW     0xfe                                                                                            
003522   cfdb     MOVFF     0xfdb,0x36                                                                                      
003524   f036                                                                                                               
003526   0e05     MOVLW     0x5                                                                                             
003528   1835     XORWF     0x35,0x0,0x0                                                                                    
00352a   e101     BNZ       0x352e                                                                                          
00352c   5036     MOVF      0x36,0x0,0x0                                                                                    
00352e   e038     BZ        0x35a0                                                                                          
003530   0e04     MOVLW     0x4                                                                                             
003532   1835     XORWF     0x35,0x0,0x0                                                                                    
003534   e101     BNZ       0x3538                                                                                          
003536   5036     MOVF      0x36,0x0,0x0                                                                                    
003538   e027     BZ        0x3588                                                                                          
00353a   0e03     MOVLW     0x3                                                                                             
00353c   1835     XORWF     0x35,0x0,0x0                                                                                    
00353e   e101     BNZ       0x3542                                                                                          
003540   5036     MOVF      0x36,0x0,0x0                                                                                    
003542   e016     BZ        0x3570                                                                                          
003544   0e01     MOVLW     0x1                                                                                             
003546   1835     XORWF     0x35,0x0,0x0                                                                                    
003548   e101     BNZ       0x354c                                                                                          
00354a   5036     MOVF      0x36,0x0,0x0                                                                                    
00354c   e00f     BZ        0x356c                                                                                          
00354e   0e02     MOVLW     0x2                                                                                             
003550   1835     XORWF     0x35,0x0,0x0                                                                                    
003552   e101     BNZ       0x3556                                                                                          
003554   5036     MOVF      0x36,0x0,0x0                                                                                    
003556   e002     BZ        0x355c                                                                                          
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           		case CLOSE_STRAIGHT:                                                           C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
00355c   0102     MOVLB     0x2            			if (first_run)                                                                C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
00355e   5163     MOVF      0x63,0x0,0x1                                                                                    
003560   e003     BZ        0x3568                                                                                          
                                           			{                                                                             C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003562   6b64     CLRF      0x64,0x1       				counter = 0;                                                                 C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003564   6b65     CLRF      0x65,0x1                                                                                        
003566   6b63     CLRF      0x63,0x1       				first_run = 0;                                                               C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           			}                                                                             C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003568   d829     RCALL     0x35bc         			close_straight();                                                             C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
00356a   d022     BRA       0x35b0         			break;                                                                        C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           		case CLOSE_SHOOT:                                                              C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
00356c   d8d2     RCALL     0x3712         			close_shoot();                                                                C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
00356e   d020     BRA       0x35b0         			break;                                                                        C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           		case CLOSE_DELAY:                                                              C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003570   0102     MOVLB     0x2            			if (first_run)                                                                C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003572   5163     MOVF      0x63,0x0,0x1                                                                                    
003574   e007     BZ        0x3584                                                                                          
                                           			{                                                                             C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003576   6b64     CLRF      0x64,0x1       				counter = 0;                                                                 C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003578   6b65     CLRF      0x65,0x1                                                                                        
00357a   6b63     CLRF      0x63,0x1       				first_run = 0;                                                               C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
00357c   0e01     MOVLW     0x1            				auton_state = CLOSE_DELAY_WAIT;                                              C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
00357e   0102     MOVLB     0x2                                                                                             
003580   6f6a     MOVWF     0x6a,0x1                                                                                        
003582   6b6b     CLRF      0x6b,0x1                                                                                        
                                           			}                                                                             C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003584   d860     RCALL     0x3646         			close_delay();                                                                C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003586   d014     BRA       0x35b0         			break;                                                                        C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           		case MIDDLE_RIGHT:                                                             C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003588   0102     MOVLB     0x2            			if (first_run)                                                                C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
00358a   5163     MOVF      0x63,0x0,0x1                                                                                    
00358c   e007     BZ        0x359c                                                                                          
                                           			{                                                                             C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
00358e   6b64     CLRF      0x64,0x1       				counter = 0;                                                                 C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003590   6b65     CLRF      0x65,0x1                                                                                        
003592   6b63     CLRF      0x63,0x1       				first_run = 0;                                                               C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003594   0e01     MOVLW     0x1            				auton_state = MIDDLE_RIGHT_OUT;                                              C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003596   0102     MOVLB     0x2                                                                                             
003598   6f6a     MOVWF     0x6a,0x1                                                                                        
00359a   6b6b     CLRF      0x6b,0x1                                                                                        
                                           			}                                                                             C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
00359c   d8e2     RCALL     0x3762         			middle_right();                                                               C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
00359e   d008     BRA       0x35b0         			break;                                                                        C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           		                                                                               C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           		case DEFENSE:                                                                  C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0035a0   0102     MOVLB     0x2            			if (first_run)                                                                C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0035a2   5163     MOVF      0x63,0x0,0x1                                                                                    
0035a4   e003     BZ        0x35ac                                                                                          
                                           			{                                                                             C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0035a6   6b64     CLRF      0x64,0x1       				counter = 0;                                                                 C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0035a8   6b65     CLRF      0x65,0x1                                                                                        
0035aa   6b63     CLRF      0x63,0x1       				first_run = 0;                                                               C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           			}                                                                             C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0035ac   d9af     RCALL     0x390c         			defense();                                                                    C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0035ae   d000     BRA       0x35b0         			break;                                                                        C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           		default:                                                                       C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003558   d9f3     RCALL     0x3940         			turn_off_everything();                                                        C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
00355a   d02a     BRA       0x35b0         			break;                                                                        C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0035b0   ec42     CALL      0x1484,0x0     	Limit_Turret();                                                                 C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0035b2   f00a                                                                                                               
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0035b4   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0035b6   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0035b8   ffd9                                                                                                               
0035ba   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           //******************************************************************************************************** C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           //							AUTONOMOUS MODE STATE MACHINE	                                          C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           //******************************************************************************************************** C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           void close_straight(void)                                                        C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0035bc   ec87     CALL      0x290e,0x0     	Camera_Handler();	// We always want to get new data from camera                 C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0035be   f014                                                                                                               
0035c0   ec30     CALL      0x4c60,0x0     	Turret_Track();                                                                 C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0035c2   f026                                                                                                               
0035c4   ec0a     CALL      0x1214,0x0     	Run_Ball_System();                                                              C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0035c6   f009                                                                                                               
0035c8   ec43     CALL      0x1286,0x0     	Run_Shooter_Wheel();                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0035ca   f009                                                                                                               
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0035cc   0101     MOVLB     0x1            	p1_y = 200;                                                                     C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0035ce   0ec8     MOVLW     0xc8                                                                                            
0035d0   6fa6     MOVWF     0xa6,0x1                                                                                        
0035d2   0e7f     MOVLW     0x7f           	p1_x = 127;                                                                     C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0035d4   6faa     MOVWF     0xaa,0x1                                                                                        
0035d6   0102     MOVLB     0x2            	counter++;                                                                      C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0035d8   2b64     INCF      0x64,0x1,0x1                                                                                    
0035da   0e00     MOVLW     0x0                                                                                             
0035dc   2365     ADDWFC    0x65,0x1,0x1                                                                                    
                                           	                                                                                C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0035de   0e0f     MOVLW     0xf            	if (counter >= 15 && counter < 40)                                              C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0035e0   af65     BTFSS     0x65,0x7,0x1                                                                                    
0035e2   d002     BRA       0x35e8                                                                                          
0035e4   90d8     BCF       0xd8,0x0,0x0                                                                                    
0035e6   d003     BRA       0x35ee                                                                                          
0035e8   5d64     SUBWF     0x64,0x0,0x1                                                                                    
0035ea   0e00     MOVLW     0x0                                                                                             
0035ec   5965     SUBWFB    0x65,0x0,0x1                                                                                    
0035ee   e311     BNC       0x3612                                                                                          
0035f0   0e28     MOVLW     0x28                                                                                            
0035f2   af65     BTFSS     0x65,0x7,0x1                                                                                    
0035f4   d002     BRA       0x35fa                                                                                          
0035f6   90d8     BCF       0xd8,0x0,0x0                                                                                    
0035f8   d003     BRA       0x3600                                                                                          
0035fa   5d64     SUBWF     0x64,0x0,0x1                                                                                    
0035fc   0e00     MOVLW     0x0                                                                                             
0035fe   5965     SUBWFB    0x65,0x0,0x1                                                                                    
003600   e208     BC        0x3612                                                                                          
003602   0e0f     MOVLW     0xf            		Run_Shooter_Belt(15);                                                          C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003604   6ee6     MOVWF     0xe6,0x0                                                                                        
003606   6ae6     CLRF      0xe6,0x0                                                                                        
003608   ec54     CALL      0x12a8,0x0                                                                                      
00360a   f009                                                                                                               
00360c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00360e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003610   d019     BRA       0x3644         	else if (counter >= 40)                                                         C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003612   0e28     MOVLW     0x28                                                                                            
003614   af65     BTFSS     0x65,0x7,0x1                                                                                    
003616   d002     BRA       0x361c                                                                                          
003618   90d8     BCF       0xd8,0x0,0x0                                                                                    
00361a   d003     BRA       0x3622                                                                                          
00361c   5d64     SUBWF     0x64,0x0,0x1                                                                                    
00361e   0e00     MOVLW     0x0                                                                                             
003620   5965     SUBWFB    0x65,0x0,0x1                                                                                    
003622   e310     BNC       0x3644                                                                                          
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003624   0e28     MOVLW     0x28           		counter = 40;                                                                  C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003626   6f64     MOVWF     0x64,0x1                                                                                        
003628   6b65     CLRF      0x65,0x1                                                                                        
00362a   0101     MOVLB     0x1            		COLLECTOR = 0;                                                                 C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
00362c   6b8a     CLRF      0x8a,0x1                                                                                        
00362e   0101     MOVLB     0x1            		p1_y = 127;                                                                    C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003630   0e7f     MOVLW     0x7f                                                                                            
003632   6fa6     MOVWF     0xa6,0x1                                                                                        
003634   6faa     MOVWF     0xaa,0x1       		p1_x = 127;                                                                    C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003636   0e0f     MOVLW     0xf            		Run_Shooter_Belt(15);                                                          C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003638   6ee6     MOVWF     0xe6,0x0                                                                                        
00363a   6ae6     CLRF      0xe6,0x0                                                                                        
00363c   ec54     CALL      0x12a8,0x0                                                                                      
00363e   f009                                                                                                               
003640   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003642   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003644   0012     RETURN    0x0            }                                                                                C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           void close_delay(void)                                                           C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003646   ec87     CALL      0x290e,0x0     	Camera_Handler();                                                               C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003648   f014                                                                                                               
00364a   ec30     CALL      0x4c60,0x0     	Turret_Track();                                                                 C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
00364c   f026                                                                                                               
00364e   ec0a     CALL      0x1214,0x0     	Run_Ball_System();                                                              C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003650   f009                                                                                                               
003652   ec43     CALL      0x1286,0x0     	Run_Shooter_Wheel();                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003654   f009                                                                                                               
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003656   0e02     MOVLW     0x2            	switch (auton_state)                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003658   0102     MOVLB     0x2                                                                                             
00365a   196a     XORWF     0x6a,0x0,0x1                                                                                    
00365c   e101     BNZ       0x3660                                                                                          
00365e   516b     MOVF      0x6b,0x0,0x1                                                                                    
003660   e01a     BZ        0x3696                                                                                          
003662   0e01     MOVLW     0x1                                                                                             
003664   196a     XORWF     0x6a,0x0,0x1                                                                                    
003666   e101     BNZ       0x366a                                                                                          
003668   516b     MOVF      0x6b,0x0,0x1                                                                                    
00366a   e001     BZ        0x366e                                                                                          
00366c   d051     BRA       0x3710                                                                                          
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           		case CLOSE_DELAY_WAIT:                                                         C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
00366e   0101     MOVLB     0x1            			p1_y = 127;                                                                   C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003670   0e7f     MOVLW     0x7f                                                                                            
003672   6fa6     MOVWF     0xa6,0x1                                                                                        
003674   6faa     MOVWF     0xaa,0x1       			p1_x = 127;                                                                   C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           			                                                                              C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003676   0102     MOVLB     0x2            			counter++;                                                                    C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003678   2b64     INCF      0x64,0x1,0x1                                                                                    
00367a   0e00     MOVLW     0x0                                                                                             
00367c   2365     ADDWFC    0x65,0x1,0x1                                                                                    
00367e   0e32     MOVLW     0x32           			if (counter == 50)                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003680   1964     XORWF     0x64,0x0,0x1                                                                                    
003682   e101     BNZ       0x3686                                                                                          
003684   5165     MOVF      0x65,0x0,0x1                                                                                    
003686   e106     BNZ       0x3694                                                                                          
                                           			{                                                                             C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003688   6b64     CLRF      0x64,0x1       				counter = 0;                                                                 C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
00368a   6b65     CLRF      0x65,0x1                                                                                        
00368c   0e02     MOVLW     0x2            				auton_state = CLOSE_DELAY_SHOOT;                                             C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
00368e   0102     MOVLB     0x2                                                                                             
003690   6f6a     MOVWF     0x6a,0x1                                                                                        
003692   6b6b     CLRF      0x6b,0x1                                                                                        
                                           			}                                                                             C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           			                                                                              C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003694   d03d     BRA       0x3710         			break;                                                                        C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           		case CLOSE_DELAY_SHOOT:                                                        C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003696   0101     MOVLB     0x1            			p1_y = 200;                                                                   C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003698   0ec8     MOVLW     0xc8                                                                                            
00369a   6fa6     MOVWF     0xa6,0x1                                                                                        
00369c   0e7f     MOVLW     0x7f           			p1_x = 127;                                                                   C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
00369e   6faa     MOVWF     0xaa,0x1                                                                                        
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0036a0   0102     MOVLB     0x2            			counter++;			                                                                 C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0036a2   2b64     INCF      0x64,0x1,0x1                                                                                    
0036a4   0e00     MOVLW     0x0                                                                                             
0036a6   2365     ADDWFC    0x65,0x1,0x1                                                                                    
0036a8   0e0f     MOVLW     0xf            			if (counter >= 15 && counter < 40)                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0036aa   af65     BTFSS     0x65,0x7,0x1                                                                                    
0036ac   d002     BRA       0x36b2                                                                                          
0036ae   90d8     BCF       0xd8,0x0,0x0                                                                                    
0036b0   d003     BRA       0x36b8                                                                                          
0036b2   5d64     SUBWF     0x64,0x0,0x1                                                                                    
0036b4   0e00     MOVLW     0x0                                                                                             
0036b6   5965     SUBWFB    0x65,0x0,0x1                                                                                    
0036b8   e311     BNC       0x36dc                                                                                          
0036ba   0e28     MOVLW     0x28                                                                                            
0036bc   af65     BTFSS     0x65,0x7,0x1                                                                                    
0036be   d002     BRA       0x36c4                                                                                          
0036c0   90d8     BCF       0xd8,0x0,0x0                                                                                    
0036c2   d003     BRA       0x36ca                                                                                          
0036c4   5d64     SUBWF     0x64,0x0,0x1                                                                                    
0036c6   0e00     MOVLW     0x0                                                                                             
0036c8   5965     SUBWFB    0x65,0x0,0x1                                                                                    
0036ca   e208     BC        0x36dc                                                                                          
0036cc   0e0f     MOVLW     0xf            				Run_Shooter_Belt(15);                                                        C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0036ce   6ee6     MOVWF     0xe6,0x0                                                                                        
0036d0   6ae6     CLRF      0xe6,0x0                                                                                        
0036d2   ec54     CALL      0x12a8,0x0                                                                                      
0036d4   f009                                                                                                               
0036d6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0036d8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0036da   d019     BRA       0x370e         			else if (counter >= 40)                                                       C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0036dc   0e28     MOVLW     0x28                                                                                            
0036de   af65     BTFSS     0x65,0x7,0x1                                                                                    
0036e0   d002     BRA       0x36e6                                                                                          
0036e2   90d8     BCF       0xd8,0x0,0x0                                                                                    
0036e4   d003     BRA       0x36ec                                                                                          
0036e6   5d64     SUBWF     0x64,0x0,0x1                                                                                    
0036e8   0e00     MOVLW     0x0                                                                                             
0036ea   5965     SUBWFB    0x65,0x0,0x1                                                                                    
0036ec   e310     BNC       0x370e                                                                                          
                                           			{                                                                             C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0036ee   0e28     MOVLW     0x28           				counter = 40;                                                                C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0036f0   6f64     MOVWF     0x64,0x1                                                                                        
0036f2   6b65     CLRF      0x65,0x1                                                                                        
0036f4   0101     MOVLB     0x1            				COLLECTOR = 0;                                                               C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0036f6   6b8a     CLRF      0x8a,0x1                                                                                        
0036f8   0101     MOVLB     0x1            				p1_y = 127;                                                                  C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0036fa   0e7f     MOVLW     0x7f                                                                                            
0036fc   6fa6     MOVWF     0xa6,0x1                                                                                        
0036fe   6faa     MOVWF     0xaa,0x1       				p1_x = 127;                                                                  C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003700   0e0f     MOVLW     0xf            				Run_Shooter_Belt(15);                                                        C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003702   6ee6     MOVWF     0xe6,0x0                                                                                        
003704   6ae6     CLRF      0xe6,0x0                                                                                        
003706   ec54     CALL      0x12a8,0x0                                                                                      
003708   f009                                                                                                               
00370a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00370c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           			}                                                                             C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
00370e   d000     BRA       0x3710         			break;                                                                        C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003710   0012     RETURN    0x0            }                                                                                C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           void close_shoot( void )                                                         C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003712   ec0a     CALL      0x1214,0x0     	Run_Ball_System();                                                              C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003714   f009                                                                                                               
003716   ec43     CALL      0x1286,0x0     	Run_Shooter_Wheel();                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003718   f009                                                                                                               
00371a   ec87     CALL      0x290e,0x0     	Camera_Handler();                                                               C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
00371c   f014                                                                                                               
00371e   ec30     CALL      0x4c60,0x0     	Turret_Track();                                                                 C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003720   f026                                                                                                               
                                           				                                                                             C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           	// The following code will over-write the turret_tilt set in turret_track()     C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           	// Pull the tilt all the way back                                               C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003722   0e8f     MOVLW     0x8f           	if (Get_Analog_Value(TURRET_TILT_POT) < TILT_POT_BACKWARD)                      C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003724   6ee6     MOVWF     0xe6,0x0                                                                                        
003726   eced     CALL      0x4bda,0x0                                                                                      
003728   f025                                                                                                               
00372a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00372c   cff3     MOVFF     0xff3,0x0                                                                                       
00372e   f000                                                                                                               
003730   cff4     MOVFF     0xff4,0x1                                                                                       
003732   f001                                                                                                               
003734   0e6c     MOVLW     0x6c                                                                                            
003736   5c00     SUBWF     0x0,0x0,0x0                                                                                     
003738   0e02     MOVLW     0x2                                                                                             
00373a   5801     SUBWFB    0x1,0x0,0x0                                                                                     
00373c   e204     BC        0x3746                                                                                          
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
00373e   0101     MOVLB     0x1            		TURRET_TILT = TURRET_BACKWARD_MAX;			// Turret Forward                         C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003740   0e98     MOVLW     0x98                                                                                            
003742   6f89     MOVWF     0x89,0x1                                                                                        
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003744   d00d     BRA       0x3760         	else                                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003746   0101     MOVLB     0x1            		TURRET_TILT = 127;                                                             C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003748   0e7f     MOVLW     0x7f                                                                                            
00374a   6f89     MOVWF     0x89,0x1                                                                                        
                                           		                                                                               C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
00374c   0102     MOVLB     0x2            		if (tracking_lock_pan)                                                         C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
00374e   5151     MOVF      0x51,0x0,0x1                                                                                    
003750   e007     BZ        0x3760                                                                                          
                                           		{                                                                              C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003752   0e14     MOVLW     0x14           			Run_Shooter_Belt(20);                                                         C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003754   6ee6     MOVWF     0xe6,0x0                                                                                        
003756   6ae6     CLRF      0xe6,0x0                                                                                        
003758   ec54     CALL      0x12a8,0x0                                                                                      
00375a   f009                                                                                                               
00375c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00375e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           		}                                                                              C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           	}	                                                                              C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003760   0012     RETURN    0x0            }                                                                                C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           			                                                                              C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           void middle_right( void )                                                        C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003762   ec87     CALL      0x290e,0x0     	Camera_Handler();				// We always want the camera to have data                  C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003764   f014                                                                                                               
003766   ec30     CALL      0x4c60,0x0     	Turret_Track();                                                                 C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003768   f026                                                                                                               
00376a   ec0a     CALL      0x1214,0x0     	Run_Ball_System();                                                              C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
00376c   f009                                                                                                               
00376e   ec43     CALL      0x1286,0x0     	Run_Shooter_Wheel();                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003770   f009                                                                                                               
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003772   0e06     MOVLW     0x6            	switch (auton_state)                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003774   0102     MOVLB     0x2                                                                                             
003776   196a     XORWF     0x6a,0x0,0x1                                                                                    
003778   e101     BNZ       0x377c                                                                                          
00377a   516b     MOVF      0x6b,0x0,0x1                                                                                    
00377c   e101     BNZ       0x3780                                                                                          
00377e   d0b7     BRA       0x38ee                                                                                          
003780   0e05     MOVLW     0x5                                                                                             
003782   196a     XORWF     0x6a,0x0,0x1                                                                                    
003784   e101     BNZ       0x3788                                                                                          
003786   516b     MOVF      0x6b,0x0,0x1                                                                                    
003788   e101     BNZ       0x378c                                                                                          
00378a   d077     BRA       0x387a                                                                                          
00378c   0e04     MOVLW     0x4                                                                                             
00378e   196a     XORWF     0x6a,0x0,0x1                                                                                    
003790   e101     BNZ       0x3794                                                                                          
003792   516b     MOVF      0x6b,0x0,0x1                                                                                    
003794   e05a     BZ        0x384a                                                                                          
003796   0e03     MOVLW     0x3                                                                                             
003798   196a     XORWF     0x6a,0x0,0x1                                                                                    
00379a   e101     BNZ       0x379e                                                                                          
00379c   516b     MOVF      0x6b,0x0,0x1                                                                                    
00379e   e03c     BZ        0x3818                                                                                          
0037a0   0e02     MOVLW     0x2                                                                                             
0037a2   196a     XORWF     0x6a,0x0,0x1                                                                                    
0037a4   e101     BNZ       0x37a8                                                                                          
0037a6   516b     MOVF      0x6b,0x0,0x1                                                                                    
0037a8   e01f     BZ        0x37e8                                                                                          
0037aa   0e01     MOVLW     0x1                                                                                             
0037ac   196a     XORWF     0x6a,0x0,0x1                                                                                    
0037ae   e101     BNZ       0x37b2                                                                                          
0037b0   516b     MOVF      0x6b,0x0,0x1                                                                                    
0037b2   e001     BZ        0x37b6                                                                                          
0037b4   d0aa     BRA       0x390a                                                                                          
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           		                                                                               C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           		case MIDDLE_RIGHT_OUT:                                                         C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0037b6   0101     MOVLB     0x1            			p1_x = 127;                                                                   C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0037b8   0e7f     MOVLW     0x7f                                                                                            
0037ba   6faa     MOVWF     0xaa,0x1                                                                                        
0037bc   0ec8     MOVLW     0xc8           			p1_y = 200;                                                                   C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0037be   6fa6     MOVWF     0xa6,0x1                                                                                        
0037c0   0102     MOVLB     0x2            			counter++;                                                                    C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0037c2   2b64     INCF      0x64,0x1,0x1                                                                                    
0037c4   0e00     MOVLW     0x0                                                                                             
0037c6   2365     ADDWFC    0x65,0x1,0x1                                                                                    
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0037c8   0e23     MOVLW     0x23           			if (counter >= 35)                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0037ca   af65     BTFSS     0x65,0x7,0x1                                                                                    
0037cc   d002     BRA       0x37d2                                                                                          
0037ce   90d8     BCF       0xd8,0x0,0x0                                                                                    
0037d0   d003     BRA       0x37d8                                                                                          
0037d2   5d64     SUBWF     0x64,0x0,0x1                                                                                    
0037d4   0e00     MOVLW     0x0                                                                                             
0037d6   5965     SUBWFB    0x65,0x0,0x1                                                                                    
0037d8   e306     BNC       0x37e6                                                                                          
                                           			{                                                                             C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0037da   6b64     CLRF      0x64,0x1       				counter = 0;                                                                 C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0037dc   6b65     CLRF      0x65,0x1                                                                                        
0037de   0e02     MOVLW     0x2            				auton_state = MIDDLE_RIGHT_DELAY;                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0037e0   0102     MOVLB     0x2                                                                                             
0037e2   6f6a     MOVWF     0x6a,0x1                                                                                        
0037e4   6b6b     CLRF      0x6b,0x1                                                                                        
                                           			}                                                                             C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0037e6   d091     BRA       0x390a         			break;                                                                        C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           		case MIDDLE_RIGHT_DELAY:                                                       C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0037e8   0101     MOVLB     0x1            			p1_x = 127;                                                                   C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0037ea   0e7f     MOVLW     0x7f                                                                                            
0037ec   6faa     MOVWF     0xaa,0x1                                                                                        
0037ee   6fa6     MOVWF     0xa6,0x1       			p1_y = 127;                                                                   C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0037f0   0102     MOVLB     0x2            			counter++;                                                                    C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0037f2   2b64     INCF      0x64,0x1,0x1                                                                                    
0037f4   0e00     MOVLW     0x0                                                                                             
0037f6   2365     ADDWFC    0x65,0x1,0x1                                                                                    
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0037f8   0e05     MOVLW     0x5            			if (counter >= 5)                                                             C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0037fa   af65     BTFSS     0x65,0x7,0x1                                                                                    
0037fc   d002     BRA       0x3802                                                                                          
0037fe   90d8     BCF       0xd8,0x0,0x0                                                                                    
003800   d003     BRA       0x3808                                                                                          
003802   5d64     SUBWF     0x64,0x0,0x1                                                                                    
003804   0e00     MOVLW     0x0                                                                                             
003806   5965     SUBWFB    0x65,0x0,0x1                                                                                    
003808   e306     BNC       0x3816                                                                                          
                                           			{	                                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
00380a   6b64     CLRF      0x64,0x1       				counter = 0;                                                                 C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
00380c   6b65     CLRF      0x65,0x1                                                                                        
00380e   0e03     MOVLW     0x3            				auton_state = MIDDLE_RIGHT_TURN;                                             C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003810   0102     MOVLB     0x2                                                                                             
003812   6f6a     MOVWF     0x6a,0x1                                                                                        
003814   6b6b     CLRF      0x6b,0x1                                                                                        
                                           			}                                                                             C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003816   d079     BRA       0x390a         			break;                                                                        C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           		case MIDDLE_RIGHT_TURN:                                                        C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003818   0101     MOVLB     0x1            			p1_x = 200;                                                                   C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
00381a   0ec8     MOVLW     0xc8                                                                                            
00381c   6faa     MOVWF     0xaa,0x1                                                                                        
00381e   0e7f     MOVLW     0x7f           			p1_y = 127;                                                                   C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003820   6fa6     MOVWF     0xa6,0x1                                                                                        
003822   0102     MOVLB     0x2            			counter++;                                                                    C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003824   2b64     INCF      0x64,0x1,0x1                                                                                    
003826   0e00     MOVLW     0x0                                                                                             
003828   2365     ADDWFC    0x65,0x1,0x1                                                                                    
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
00382a   0e19     MOVLW     0x19           			if (counter >= 25)                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
00382c   af65     BTFSS     0x65,0x7,0x1                                                                                    
00382e   d002     BRA       0x3834                                                                                          
003830   90d8     BCF       0xd8,0x0,0x0                                                                                    
003832   d003     BRA       0x383a                                                                                          
003834   5d64     SUBWF     0x64,0x0,0x1                                                                                    
003836   0e00     MOVLW     0x0                                                                                             
003838   5965     SUBWFB    0x65,0x0,0x1                                                                                    
00383a   e306     BNC       0x3848                                                                                          
                                           			{                                                                             C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
00383c   6b64     CLRF      0x64,0x1       				counter = 0;                                                                 C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
00383e   6b65     CLRF      0x65,0x1                                                                                        
003840   0e04     MOVLW     0x4            				auton_state = MIDDLE_RIGHT_DELAY_TWO;                                        C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003842   0102     MOVLB     0x2                                                                                             
003844   6f6a     MOVWF     0x6a,0x1                                                                                        
003846   6b6b     CLRF      0x6b,0x1                                                                                        
                                           			}                                                                             C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003848   d060     BRA       0x390a         			break;                                                                        C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           		case MIDDLE_RIGHT_DELAY_TWO:                                                   C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
00384a   0101     MOVLB     0x1            			p1_x = 127;                                                                   C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
00384c   0e7f     MOVLW     0x7f                                                                                            
00384e   6faa     MOVWF     0xaa,0x1                                                                                        
003850   6fa6     MOVWF     0xa6,0x1       			p1_y = 127;                                                                   C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003852   0102     MOVLB     0x2            			counter++;                                                                    C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003854   2b64     INCF      0x64,0x1,0x1                                                                                    
003856   0e00     MOVLW     0x0                                                                                             
003858   2365     ADDWFC    0x65,0x1,0x1                                                                                    
00385a   0e05     MOVLW     0x5            			if (counter >= 5)                                                             C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
00385c   af65     BTFSS     0x65,0x7,0x1                                                                                    
00385e   d002     BRA       0x3864                                                                                          
003860   90d8     BCF       0xd8,0x0,0x0                                                                                    
003862   d003     BRA       0x386a                                                                                          
003864   5d64     SUBWF     0x64,0x0,0x1                                                                                    
003866   0e00     MOVLW     0x0                                                                                             
003868   5965     SUBWFB    0x65,0x0,0x1                                                                                    
00386a   e306     BNC       0x3878                                                                                          
                                           			{	                                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
00386c   6b64     CLRF      0x64,0x1       				counter = 0;                                                                 C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
00386e   6b65     CLRF      0x65,0x1                                                                                        
003870   0e05     MOVLW     0x5            				auton_state = MIDDLE_RIGHT_APPROACH;                                         C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003872   0102     MOVLB     0x2                                                                                             
003874   6f6a     MOVWF     0x6a,0x1                                                                                        
003876   6b6b     CLRF      0x6b,0x1                                                                                        
                                           			}                                                                             C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003878   d048     BRA       0x390a         			break;                                                                        C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           		case MIDDLE_RIGHT_APPROACH:                                                    C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
00387a   0101     MOVLB     0x1            			p1_x = 127;                                                                   C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
00387c   0e7f     MOVLW     0x7f                                                                                            
00387e   6faa     MOVWF     0xaa,0x1                                                                                        
003880   0ec8     MOVLW     0xc8           			p1_y = 200;                                                                   C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003882   6fa6     MOVWF     0xa6,0x1                                                                                        
003884   0102     MOVLB     0x2            			counter++;                                                                    C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003886   2b64     INCF      0x64,0x1,0x1                                                                                    
003888   0e00     MOVLW     0x0                                                                                             
00388a   2365     ADDWFC    0x65,0x1,0x1                                                                                    
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
00388c   0e0f     MOVLW     0xf            			if (counter >= 15 && counter < 35)                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
00388e   af65     BTFSS     0x65,0x7,0x1                                                                                    
003890   d002     BRA       0x3896                                                                                          
003892   90d8     BCF       0xd8,0x0,0x0                                                                                    
003894   d003     BRA       0x389c                                                                                          
003896   5d64     SUBWF     0x64,0x0,0x1                                                                                    
003898   0e00     MOVLW     0x0                                                                                             
00389a   5965     SUBWFB    0x65,0x0,0x1                                                                                    
00389c   e311     BNC       0x38c0                                                                                          
00389e   0e23     MOVLW     0x23                                                                                            
0038a0   af65     BTFSS     0x65,0x7,0x1                                                                                    
0038a2   d002     BRA       0x38a8                                                                                          
0038a4   90d8     BCF       0xd8,0x0,0x0                                                                                    
0038a6   d003     BRA       0x38ae                                                                                          
0038a8   5d64     SUBWF     0x64,0x0,0x1                                                                                    
0038aa   0e00     MOVLW     0x0                                                                                             
0038ac   5965     SUBWFB    0x65,0x0,0x1                                                                                    
0038ae   e208     BC        0x38c0                                                                                          
0038b0   0e0f     MOVLW     0xf            				Run_Shooter_Belt(15);                                                        C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0038b2   6ee6     MOVWF     0xe6,0x0                                                                                        
0038b4   6ae6     CLRF      0xe6,0x0                                                                                        
0038b6   ec54     CALL      0x12a8,0x0                                                                                      
0038b8   f009                                                                                                               
0038ba   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0038bc   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0038be   d016     BRA       0x38ec         			else if (counter >= 35)                                                       C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0038c0   0e23     MOVLW     0x23                                                                                            
0038c2   af65     BTFSS     0x65,0x7,0x1                                                                                    
0038c4   d002     BRA       0x38ca                                                                                          
0038c6   90d8     BCF       0xd8,0x0,0x0                                                                                    
0038c8   d003     BRA       0x38d0                                                                                          
0038ca   5d64     SUBWF     0x64,0x0,0x1                                                                                    
0038cc   0e00     MOVLW     0x0                                                                                             
0038ce   5965     SUBWFB    0x65,0x0,0x1                                                                                    
0038d0   e30d     BNC       0x38ec                                                                                          
                                           			{                                                                             C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0038d2   6b64     CLRF      0x64,0x1       				counter = 0;                                                                 C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0038d4   6b65     CLRF      0x65,0x1                                                                                        
0038d6   0e0f     MOVLW     0xf            				Run_Shooter_Belt(15);                                                        C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0038d8   6ee6     MOVWF     0xe6,0x0                                                                                        
0038da   6ae6     CLRF      0xe6,0x0                                                                                        
0038dc   ec54     CALL      0x12a8,0x0                                                                                      
0038de   f009                                                                                                               
0038e0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0038e2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0038e4   0e06     MOVLW     0x6            				auton_state = MIDDLE_RIGHT_SHOOT;                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0038e6   0102     MOVLB     0x2                                                                                             
0038e8   6f6a     MOVWF     0x6a,0x1                                                                                        
0038ea   6b6b     CLRF      0x6b,0x1                                                                                        
                                           			}                                                                             C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           			                                                                              C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0038ec   d00e     BRA       0x390a         			break;                                                                        C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           	                                                                                C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           		case MIDDLE_RIGHT_SHOOT:                                                       C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           			                                                                              C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0038ee   0101     MOVLB     0x1            			p1_x = 127;                                                                   C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0038f0   0e7f     MOVLW     0x7f                                                                                            
0038f2   6faa     MOVWF     0xaa,0x1                                                                                        
0038f4   6fa6     MOVWF     0xa6,0x1       			p1_y = 127;                                                                   C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0038f6   0e0f     MOVLW     0xf            			Run_Shooter_Belt(15);                                                         C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
0038f8   6ee6     MOVWF     0xe6,0x0                                                                                        
0038fa   6ae6     CLRF      0xe6,0x0                                                                                        
0038fc   ec54     CALL      0x12a8,0x0                                                                                      
0038fe   f009                                                                                                               
003900   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003902   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003904   0101     MOVLB     0x1            			COLLECTOR = 0;                                                                C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003906   6b8a     CLRF      0x8a,0x1                                                                                        
                                           		                                                                               C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003908   d000     BRA       0x390a         			break;                                                                        C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
00390a   0012     RETURN    0x0            }                                                                                C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           void defense(void)                                                               C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
00390c   0101     MOVLB     0x1            	p1_x = 127;                                                                     C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
00390e   0e7f     MOVLW     0x7f                                                                                            
003910   6faa     MOVWF     0xaa,0x1                                                                                        
003912   0ec8     MOVLW     0xc8           	p1_y = 200;                                                                     C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003914   6fa6     MOVWF     0xa6,0x1                                                                                        
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003916   0102     MOVLB     0x2            	counter++;                                                                      C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003918   2b64     INCF      0x64,0x1,0x1                                                                                    
00391a   0e00     MOVLW     0x0                                                                                             
00391c   2365     ADDWFC    0x65,0x1,0x1                                                                                    
00391e   0e37     MOVLW     0x37           	if (counter >= 55)                                                              C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003920   af65     BTFSS     0x65,0x7,0x1                                                                                    
003922   d002     BRA       0x3928                                                                                          
003924   90d8     BCF       0xd8,0x0,0x0                                                                                    
003926   d003     BRA       0x392e                                                                                          
003928   5d64     SUBWF     0x64,0x0,0x1                                                                                    
00392a   0e00     MOVLW     0x0                                                                                             
00392c   5965     SUBWFB    0x65,0x0,0x1                                                                                    
00392e   e307     BNC       0x393e                                                                                          
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003930   0e37     MOVLW     0x37           		counter = 55;                                                                  C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003932   6f64     MOVWF     0x64,0x1                                                                                        
003934   6b65     CLRF      0x65,0x1                                                                                        
003936   0101     MOVLB     0x1            		p1_x = 127;                                                                    C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003938   0e7f     MOVLW     0x7f                                                                                            
00393a   6faa     MOVWF     0xaa,0x1                                                                                        
00393c   6fa6     MOVWF     0xa6,0x1       		p1_y = 127;                                                                    C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
00393e   0012     RETURN    0x0            }                                                                                C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           void turn_off_everything( void )                                                 C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003940   0101     MOVLB     0x1            	p1_x = 127;                                                                     C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003942   0e7f     MOVLW     0x7f                                                                                            
003944   6faa     MOVWF     0xaa,0x1                                                                                        
003946   6fa6     MOVWF     0xa6,0x1       	p1_y = 127;                                                                     C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003948   0101     MOVLB     0x1            	LEFT_WHEEL = 127;                                                               C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
00394a   6f84     MOVWF     0x84,0x1                                                                                        
00394c   6f85     MOVWF     0x85,0x1       	LEFT_WHEEL_2 = 127;                                                             C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
00394e   6f86     MOVWF     0x86,0x1       	RIGHT_WHEEL = 127;                                                              C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003950   6f87     MOVWF     0x87,0x1       	RIGHT_WHEEL_2 = 127;                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003952   6f88     MOVWF     0x88,0x1       	TURRET_PAN = 127;                                                               C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003954   6f89     MOVWF     0x89,0x1       	TURRET_TILT = 127;                                                              C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003956   6f8a     MOVWF     0x8a,0x1       	COLLECTOR = 127;                                                                C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
003958   6f8b     MOVWF     0x8b,0x1       	SHOOTER_BELT = 127;                                                             C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
00395a   6f8c     MOVWF     0x8c,0x1       	SHOOTER_WHEEL = 127;                                                            C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
00395c   0012     RETURN    0x0            }	                                                                               C:\mort\mort_code_2006_PrePalmetto\Autonomous.c
                                           #include "ifi_default.h"                                                         C:\mort\mort_code_2006_PrePalmetto\MORT_TIMERS.c
                                           #include "MORT_TIMERS.h"                                                         C:\mort\mort_code_2006_PrePalmetto\MORT_TIMERS.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\MORT_TIMERS.c
                                           long Timer1_Count = 0;                                                           C:\mort\mort_code_2006_PrePalmetto\MORT_TIMERS.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\MORT_TIMERS.c
                                           void Init_Timers( void )                                                         C:\mort\mort_code_2006_PrePalmetto\MORT_TIMERS.c
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\MORT_TIMERS.c
0055ee   88cd     BSF       0xcd,0x4,0x0   	T1CONbits.T1CKPS0 	= 	1;		//1:8 Prescale (clock=1.25MHx/each tick = 800ns)      C:\mort\mort_code_2006_PrePalmetto\MORT_TIMERS.c
0055f0   8acd     BSF       0xcd,0x5,0x0   	T1CONbits.T1CKPS1 	= 	1;                                                        C:\mort\mort_code_2006_PrePalmetto\MORT_TIMERS.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\MORT_TIMERS.c
0055f2   0e85     MOVLW     0x85           	TMR1H = 0x85;					// Set Timer1's most significant byte                         C:\mort\mort_code_2006_PrePalmetto\MORT_TIMERS.c
0055f4   6ecf     MOVWF     0xcf,0x0                                                                                        
0055f6   0eed     MOVLW     0xed           	TMR1L = 0xED;					// Set Timer1's least signifigant byte                        C:\mort\mort_code_2006_PrePalmetto\MORT_TIMERS.c
0055f8   6ece     MOVWF     0xce,0x0                                                                                        
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\MORT_TIMERS.c
0055fa   92cd     BCF       0xcd,0x1,0x0   	T1CONbits.TMR1CS 	= 	0;		// Uses internal clock                                 C:\mort\mort_code_2006_PrePalmetto\MORT_TIMERS.c
                                           	                                                                                C:\mort\mort_code_2006_PrePalmetto\MORT_TIMERS.c
0055fc   96cd     BCF       0xcd,0x3,0x0   	T1CONbits.T1OSCEN 	= 	0;		// Internal oscillator off                            C:\mort\mort_code_2006_PrePalmetto\MORT_TIMERS.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\MORT_TIMERS.c
0055fe   8ecd     BSF       0xcd,0x7,0x0   	T1CONbits.RD16 		=	1;		// Timer1 operation done in 16-bit accesses              C:\mort\mort_code_2006_PrePalmetto\MORT_TIMERS.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\MORT_TIMERS.c
005600   909f     BCF       0x9f,0x0,0x0   	IPR1bits.TMR1IP 	=	0;		// Sets interrupt as low priority                        C:\mort\mort_code_2006_PrePalmetto\MORT_TIMERS.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\MORT_TIMERS.c
005602   909e     BCF       0x9e,0x0,0x0   	PIR1bits.TMR1IF 	= 	0;		// Overflow flag                                        C:\mort\mort_code_2006_PrePalmetto\MORT_TIMERS.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\MORT_TIMERS.c
005604   809d     BSF       0x9d,0x0,0x0   	PIE1bits.TMR1IE 	= 	1;		// Timer1 interrupt OK                                  C:\mort\mort_code_2006_PrePalmetto\MORT_TIMERS.c
                                           	                                                                                C:\mort\mort_code_2006_PrePalmetto\MORT_TIMERS.c
005606   8cf2     BSF       0xf2,0x6,0x0   	INTCONbits.GIEL 	= 	1;		// Low priority interrups OK                            C:\mort\mort_code_2006_PrePalmetto\MORT_TIMERS.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\MORT_TIMERS.c
005608   80cd     BSF       0xcd,0x0,0x0   	T1CONbits.TMR1ON 	= 	1;		// Timer1 set as on                                    C:\mort\mort_code_2006_PrePalmetto\MORT_TIMERS.c
00560a   0012     RETURN    0x0            }                                                                                C:\mort\mort_code_2006_PrePalmetto\MORT_TIMERS.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\MORT_TIMERS.c
                                           void Timer1_Handler( void )                                                      C:\mort\mort_code_2006_PrePalmetto\MORT_TIMERS.c
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\MORT_TIMERS.c
00560c   0102     MOVLB     0x2            	Timer1_Count++;                                                                 C:\mort\mort_code_2006_PrePalmetto\MORT_TIMERS.c
00560e   2b5f     INCF      0x5f,0x1,0x1                                                                                    
005610   0e00     MOVLW     0x0                                                                                             
005612   2360     ADDWFC    0x60,0x1,0x1                                                                                    
005614   2361     ADDWFC    0x61,0x1,0x1                                                                                    
005616   2362     ADDWFC    0x62,0x1,0x1                                                                                    
005618   0012     RETURN    0x0            }                                                                                C:\mort\mort_code_2006_PrePalmetto\MORT_TIMERS.c
                                           #include <stdio.h>                                                               C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                           #include "ifi_default.h"                                                         C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                           #include "ifi_aliases.h"                                                         C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                           #include "camera.h"                                                              C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                           #include "MORT_TRACKING.h"                                                       C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                           #include "MORT_DEFINES.h"                                                        C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                           unsigned char tracking_lock_pan = 0;                                             C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                           unsigned char tracking_lock_tilt = 0;                                            C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                           unsigned char tracking_lock = 0;                                                 C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004c60   cfd9     MOVFF     0xfd9,0xfe6    void Turret_Track(void)                                                          C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004c62   ffe6                                                                                                               
004c64   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004c66   ffd9                                                                                                               
004c68   0e08     MOVLW     0x8                                                                                             
004c6a   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                           	static unsigned int old_camera_t_packets = 0;                                   C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                           	static unsigned char loop_count = 0;                                            C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                           	int pan_error;                                                                  C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                           	int tilt_error;                                                                 C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                           	int pan_step;                                                                   C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                           	int tilt_step;                                                                  C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                           	// Has a new camera t-packet arrived since we last checked?                     C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004c6c   0102     MOVLB     0x2            	if (camera_t_packets != old_camera_t_packets)                                   C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004c6e   5154     MOVF      0x54,0x0,0x1                                                                                    
004c70   0102     MOVLB     0x2                                                                                             
004c72   193d     XORWF     0x3d,0x0,0x1                                                                                    
004c74   e104     BNZ       0x4c7e                                                                                          
004c76   0102     MOVLB     0x2                                                                                             
004c78   5155     MOVF      0x55,0x0,0x1                                                                                    
004c7a   0102     MOVLB     0x2                                                                                             
004c7c   193e     XORWF     0x3e,0x0,0x1                                                                                    
004c7e   e101     BNZ       0x4c82                                                                                          
004c80   d0c3     BRA       0x4e08                                                                                          
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004c82   c23d     MOVFF     0x23d,0x254    		old_camera_t_packets = camera_t_packets;                                       C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004c84   f254                                                                                                               
004c86   c23e     MOVFF     0x23e,0x255                                                                                     
004c88   f255                                                                                                               
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                           		// Does the camera have a tracking solution?                                   C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004c8a   0e14     MOVLW     0x14           		if (T_Packet_Data.confidence >= CONFIDENCE_THRESHOLD_DEFAULT)                  C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004c8c   0101     MOVLB     0x1                                                                                             
004c8e   5dc8     SUBWF     0xc8,0x0,0x1                                                                                    
004c90   e201     BC        0x4c94                                                                                          
004c92   d0b3     BRA       0x4dfa                                                                                          
                                           		{                                                                              C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                           			///////////////////////////////                                               C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                           			//							 //                                                                  C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                           			// x-axes/tilt tracking code //                                               C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                           			//                           //                                               C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                           			///////////////////////////////                                               C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                           			// Calculate how many image pixels we're away from the vertical center line   C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004c94   51c1     MOVF      0xc1,0x0,0x1   			pan_error = (int)T_Packet_Data.mx - PAN_TARGET_PIXEL_DEFAULT;                 C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004c96   6e00     MOVWF     0x0,0x0                                                                                         
004c98   6a01     CLRF      0x1,0x0                                                                                         
004c9a   0e62     MOVLW     0x62                                                                                            
004c9c   5e00     SUBWF     0x0,0x1,0x0                                                                                     
004c9e   0e00     MOVLW     0x0                                                                                             
004ca0   5a01     SUBWFB    0x1,0x1,0x0                                                                                     
004ca2   c000     MOVFF     0x0,0xfde                                                                                       
004ca4   ffde                                                                                                               
004ca6   c001     MOVFF     0x1,0xfdd                                                                                       
004ca8   ffdd                                                                                                               
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004caa   cfde     MOVFF     0xfde,0xfe6    			printf("pan_error: %d \r\n", pan_error);                                      C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004cac   ffe6                                                                                                               
004cae   cfdd     MOVFF     0xfdd,0xfe6                                                                                     
004cb0   ffe6                                                                                                               
004cb2   0ed8     MOVLW     0xd8                                                                                            
004cb4   6e00     MOVWF     0x0,0x0                                                                                         
004cb6   0e56     MOVLW     0x56                                                                                            
004cb8   6e01     MOVWF     0x1,0x0                                                                                         
004cba   6a02     CLRF      0x2,0x0                                                                                         
004cbc   c000     MOVFF     0x0,0xfe6                                                                                       
004cbe   ffe6                                                                                                               
004cc0   c001     MOVFF     0x1,0xfe6                                                                                       
004cc2   ffe6                                                                                                               
004cc4   c002     MOVFF     0x2,0xfe6                                                                                       
004cc6   ffe6                                                                                                               
004cc8   ec0e     CALL      0x521c,0x0                                                                                      
004cca   f029                                                                                                               
004ccc   6ef5     MOVWF     0xf5,0x0                                                                                        
004cce   0e05     MOVLW     0x5                                                                                             
004cd0   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
004cd2   50f5     MOVF      0xf5,0x0,0x0                                                                                    
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                           			// Are we too far to the left or right of the vertical center line?           C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004cd4   cfde     MOVFF     0xfde,0x0      			if (pan_error > PAN_ALLOWABLE_ERROR_DEFAULT )                                 C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004cd6   f000                                                                                                               
004cd8   cfdd     MOVFF     0xfdd,0x1                                                                                       
004cda   f001                                                                                                               
004cdc   3401     RLCF      0x1,0x0,0x0                                                                                     
004cde   e204     BC        0x4ce8                                                                                          
004ce0   5000     MOVF      0x0,0x0,0x0                                                                                     
004ce2   0808     SUBLW     0x8                                                                                             
004ce4   0e00     MOVLW     0x0                                                                                             
004ce6   5401     SUBFWB    0x1,0x0,0x0                                                                                     
004ce8   e217     BC        0x4d18                                                                                          
                                           			{                                                                             C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004cea   cfde     MOVFF     0xfde,0x0      				if (pan_error > 35)                                                          C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004cec   f000                                                                                                               
004cee   cfdd     MOVFF     0xfdd,0x1                                                                                       
004cf0   f001                                                                                                               
004cf2   3401     RLCF      0x1,0x0,0x0                                                                                     
004cf4   e204     BC        0x4cfe                                                                                          
004cf6   5000     MOVF      0x0,0x0,0x0                                                                                     
004cf8   0823     SUBLW     0x23                                                                                            
004cfa   0e00     MOVLW     0x0                                                                                             
004cfc   5401     SUBFWB    0x1,0x0,0x0                                                                                     
004cfe   e206     BC        0x4d0c                                                                                          
                                           				{                                                                            C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004d00   0101     MOVLB     0x1            					TURRET_PAN = TURRET_RIGHT_MAX;                                              C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004d02   0ebe     MOVLW     0xbe                                                                                            
004d04   6f88     MOVWF     0x88,0x1                                                                                        
004d06   0102     MOVLB     0x2            					tracking_lock_pan = 0;	                                                     C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004d08   6b51     CLRF      0x51,0x1                                                                                        
                                           				}                                                                            C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004d0a   d005     BRA       0x4d16         				else                                                                         C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                           				{                                                                            C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004d0c   0101     MOVLB     0x1            					TURRET_PAN = TURRET_RIGHT_MIN;                                              C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004d0e   0e8d     MOVLW     0x8d                                                                                            
004d10   6f88     MOVWF     0x88,0x1                                                                                        
004d12   0102     MOVLB     0x2            					tracking_lock_pan = 0;                                                      C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004d14   6b51     CLRF      0x51,0x1                                                                                        
                                           				}                                                                            C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                           			}                                                                             C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004d16   d02a     BRA       0x4d6c         			else if (pan_error < -1 * PAN_ALLOWABLE_ERROR_DEFAULT)                        C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004d18   cfde     MOVFF     0xfde,0x0                                                                                       
004d1a   f000                                                                                                               
004d1c   cfdd     MOVFF     0xfdd,0x1                                                                                       
004d1e   f001                                                                                                               
004d20   80d8     BSF       0xd8,0x0,0x0                                                                                    
004d22   5001     MOVF      0x1,0x0,0x0                                                                                     
004d24   e704     BNN       0x4d2e                                                                                          
004d26   0ef8     MOVLW     0xf8                                                                                            
004d28   5c00     SUBWF     0x0,0x0,0x0                                                                                     
004d2a   0eff     MOVLW     0xff                                                                                            
004d2c   5801     SUBWFB    0x1,0x0,0x0                                                                                     
004d2e   e218     BC        0x4d60                                                                                          
                                           			{                                                                             C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004d30   cfde     MOVFF     0xfde,0x0      				if (pan_error < -35)                                                         C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004d32   f000                                                                                                               
004d34   cfdd     MOVFF     0xfdd,0x1                                                                                       
004d36   f001                                                                                                               
004d38   80d8     BSF       0xd8,0x0,0x0                                                                                    
004d3a   5001     MOVF      0x1,0x0,0x0                                                                                     
004d3c   e704     BNN       0x4d46                                                                                          
004d3e   0edd     MOVLW     0xdd                                                                                            
004d40   5c00     SUBWF     0x0,0x0,0x0                                                                                     
004d42   0eff     MOVLW     0xff                                                                                            
004d44   5801     SUBWFB    0x1,0x0,0x0                                                                                     
004d46   e206     BC        0x4d54                                                                                          
                                           				{                                                                            C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004d48   0101     MOVLB     0x1            					TURRET_PAN = TURRET_LEFT_MAX;                                               C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004d4a   0e38     MOVLW     0x38                                                                                            
004d4c   6f88     MOVWF     0x88,0x1                                                                                        
004d4e   0102     MOVLB     0x2            					tracking_lock_pan = 0;                                                      C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004d50   6b51     CLRF      0x51,0x1                                                                                        
                                           				}                                                                            C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004d52   d005     BRA       0x4d5e         				else                                                                         C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                           				{                                                                            C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004d54   0101     MOVLB     0x1            					TURRET_PAN = TURRET_LEFT_MIN;                                               C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004d56   0e78     MOVLW     0x78                                                                                            
004d58   6f88     MOVWF     0x88,0x1                                                                                        
004d5a   0102     MOVLB     0x2            					tracking_lock_pan = 0;                                                      C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004d5c   6b51     CLRF      0x51,0x1                                                                                        
                                           				}                                                                            C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                           				                                                                             C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                           			}	                                                                            C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004d5e   d006     BRA       0x4d6c         			else                                                                          C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                           			{                                                                             C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                           				// We need no more adjustment on the pan                                     C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004d60   0101     MOVLB     0x1            				TURRET_PAN = 127;                                                            C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004d62   0e7f     MOVLW     0x7f                                                                                            
004d64   6f88     MOVWF     0x88,0x1                                                                                        
004d66   0102     MOVLB     0x2            				tracking_lock_pan = 1;                                                       C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004d68   0e01     MOVLW     0x1                                                                                             
004d6a   6f51     MOVWF     0x51,0x1                                                                                        
                                           			}                                                                             C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                           			///////////////////////////////                                               C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                           			//							 //                                                                  C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                           			// y-axes/tilt tracking code //                                               C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                           			//                           //                                               C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                           			///////////////////////////////                                               C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                           			// Calculate how many image pixels we're away from the horizontal center line C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004d6c   0101     MOVLB     0x1            			tilt_error = (int)T_Packet_Data.my - TILT_TARGET_PIXEL_DEFAULT;               C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004d6e   51c2     MOVF      0xc2,0x0,0x1                                                                                    
004d70   6e00     MOVWF     0x0,0x0                                                                                         
004d72   6a01     CLRF      0x1,0x0                                                                                         
004d74   0e77     MOVLW     0x77                                                                                            
004d76   5e00     SUBWF     0x0,0x1,0x0                                                                                     
004d78   0e00     MOVLW     0x0                                                                                             
004d7a   5a01     SUBWFB    0x1,0x1,0x0                                                                                     
004d7c   0e02     MOVLW     0x2                                                                                             
004d7e   c000     MOVFF     0x0,0xfdb                                                                                       
004d80   ffdb                                                                                                               
004d82   0e03     MOVLW     0x3                                                                                             
004d84   c001     MOVFF     0x1,0xfdb                                                                                       
004d86   ffdb                                                                                                               
                                           			                                                                              C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                           //			printf("tilt error: %d \r\n", tilt_error);                                  C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004d88   0e02     MOVLW     0x2            			if (tilt_error > TILT_ALLOWABLE_ERROR_DEFAULT)                                C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004d8a   cfdb     MOVFF     0xfdb,0x0                                                                                       
004d8c   f000                                                                                                               
004d8e   0e03     MOVLW     0x3                                                                                             
004d90   cfdb     MOVFF     0xfdb,0x1                                                                                       
004d92   f001                                                                                                               
004d94   3401     RLCF      0x1,0x0,0x0                                                                                     
004d96   e204     BC        0x4da0                                                                                          
004d98   5000     MOVF      0x0,0x0,0x0                                                                                     
004d9a   080e     SUBLW     0xe                                                                                             
004d9c   0e00     MOVLW     0x0                                                                                             
004d9e   5401     SUBFWB    0x1,0x0,0x0                                                                                     
004da0   e206     BC        0x4dae                                                                                          
                                           			{                                                                             C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                           	                                                                                C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004da2   0101     MOVLB     0x1            				TURRET_TILT = TURRET_FORWARD_MIN;                                            C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004da4   0e74     MOVLW     0x74                                                                                            
004da6   6f89     MOVWF     0x89,0x1                                                                                        
004da8   0102     MOVLB     0x2            				tracking_lock_tilt = 0;                                                      C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004daa   6b52     CLRF      0x52,0x1                                                                                        
                                           	                                                                                C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                           			}                                                                             C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004dac   d01a     BRA       0x4de2         			else if (tilt_error < -1 * TILT_ALLOWABLE_ERROR_DEFAULT)                      C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004dae   0e02     MOVLW     0x2                                                                                             
004db0   cfdb     MOVFF     0xfdb,0x0                                                                                       
004db2   f000                                                                                                               
004db4   0e03     MOVLW     0x3                                                                                             
004db6   cfdb     MOVFF     0xfdb,0x1                                                                                       
004db8   f001                                                                                                               
004dba   80d8     BSF       0xd8,0x0,0x0                                                                                    
004dbc   5001     MOVF      0x1,0x0,0x0                                                                                     
004dbe   e704     BNN       0x4dc8                                                                                          
004dc0   0ef2     MOVLW     0xf2                                                                                            
004dc2   5c00     SUBWF     0x0,0x0,0x0                                                                                     
004dc4   0eff     MOVLW     0xff                                                                                            
004dc6   5801     SUBWFB    0x1,0x0,0x0                                                                                     
004dc8   e206     BC        0x4dd6                                                                                          
                                           			{                                                                             C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                           	                                                                                C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004dca   0101     MOVLB     0x1            				TURRET_TILT = TURRET_BACKWARD_MIN;                                           C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004dcc   0e93     MOVLW     0x93                                                                                            
004dce   6f89     MOVWF     0x89,0x1                                                                                        
004dd0   0102     MOVLB     0x2            				tracking_lock_tilt = 0;                                                      C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004dd2   6b52     CLRF      0x52,0x1                                                                                        
                                           	                                                                                C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                           			}                                                                             C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004dd4   d006     BRA       0x4de2         			else                                                                          C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                           			{                                                                             C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004dd6   0101     MOVLB     0x1            				TURRET_TILT = 127;                                                           C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004dd8   0e7f     MOVLW     0x7f                                                                                            
004dda   6f89     MOVWF     0x89,0x1                                                                                        
004ddc   0102     MOVLB     0x2            				tracking_lock_tilt = 1;                                                      C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004dde   0e01     MOVLW     0x1                                                                                             
004de0   6f52     MOVWF     0x52,0x1                                                                                        
                                           			}                                                                             C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004de2   ec42     CALL      0x1484,0x0     			Limit_Turret();                                                               C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004de4   f00a                                                                                                               
                                                                                                                            C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004de6   0102     MOVLB     0x2            			if (tracking_lock_tilt && tracking_lock_pan)                                  C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004de8   5152     MOVF      0x52,0x0,0x1                                                                                    
004dea   e005     BZ        0x4df6                                                                                          
004dec   5151     MOVF      0x51,0x0,0x1                                                                                    
004dee   e003     BZ        0x4df6                                                                                          
004df0   0e01     MOVLW     0x1            				tracking_lock = 1;                                                           C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004df2   6f53     MOVWF     0x53,0x1                                                                                        
004df4   d001     BRA       0x4df8         			else                                                                          C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004df6   6b53     CLRF      0x53,0x1       				tracking_lock = 0;                                                           C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                           		}	                                                                             C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004df8   d006     BRA       0x4e06         		else                                                                           C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                           		{	                                                                             C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                           			// No target in site                                                          C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004dfa   0102     MOVLB     0x2            			tracking_lock = 0;                                                            C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004dfc   6b53     CLRF      0x53,0x1                                                                                        
004dfe   0101     MOVLB     0x1            			TURRET_TILT = 127;                                                            C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004e00   0e7f     MOVLW     0x7f                                                                                            
004e02   6f89     MOVWF     0x89,0x1                                                                                        
004e04   6f88     MOVWF     0x88,0x1       			TURRET_PAN = 127;                                                             C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                           		}                                                                              C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004e06   d000     BRA       0x4e08         	else                                                                            C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                           	{                                                                               C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                           	//	TURRET_TILT = 127;                                                           C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                           	//	TURRET_PAN = 127;                                                            C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
                                           	}                                                                               C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004e08   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\mort\mort_code_2006_PrePalmetto\MORT_TRACKING.c
004e0a   ffe1                                                                                                               
004e0c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004e0e   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004e10   ffd9                                                                                                               
004e12   0012     RETURN    0x0                                                                                             
                                           ;	RCS Header $Id: aarg.asm,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $               C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           ;       CMATH18 DATA DEFINITION FILE                                             C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           ;   VARIABLE ALLOCATION - Core math library routines                             C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           MATH_DATA      UDATA_ACS                                                         C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           REMB3                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AARGB7		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           REMB2                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AARGB6		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           REMB1                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AARGB5		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           REMB0                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AARGB4		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AARGB3		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AARGB2		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AARGB1		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AARGB0		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AEXP		RES 1       ; 8 bit biased exponent for argument A                         C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           	GLOBAL	AARGB0, AARGB1, AARGB2, AARGB3                                           C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                   GLOBAL  AARGB4, AARGB5, AARGB6, AARGB7                                   C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           	GLOBAL  AEXP                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           	GLOBAL  REMB3, REMB2, REMB1, REMB0                                              C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                   END                                                                      C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                   LIST P=18F8722                                                           C:\MCC18\SRC\TRADIT~1\PROC\p18f8722.asm
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\PROC\p18f8722.asm
                                                   END                                                                      C:\MCC18\SRC\TRADIT~1\PROC\p18f8722.asm
                                           ;	RCS Header $Id: barg.asm,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $               C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           ;       CMATH18 DATA DEFINITION FILE                                             C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           ;   VARIABLE ALLOCATION - Core math library routines                             C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           MATH_DATA      UDATA_ACS                                                         C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           BARGB3		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           BARGB2		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           BARGB1		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           BARGB0		RES 1       ; most significant byte of argument B                        C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           BEXP		RES 1       ; 8 bit biased exponent for argument B                         C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                   GLOBAL  BARGB3, BARGB2, BARGB1, BARGB0                                   C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                   GLOBAL  BEXP                                                             C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                   END                                                                      C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           /* $Id: adcbusy.c,v 1.1 2003/12/09 22:52:09 GrosbaJ Exp $ */                     C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           #include <p18cxxx.h>                                                             C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           #include <adc.h>                                                                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           /****************************************************************                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           *    Function Name:  BusyADC                                    *                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           *    Return Value:   char: 1 - A/D busy, 0 - Done converting    *                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           *    Parameters:     void                                       *                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           *    Description:    This routine checks the GO bit to see if   *                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           *                    the A/D conversion is done.                *                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           ****************************************************************/                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           char BusyADC(void)                                                               C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           {                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                             /* If the GO bit is set then A/D is busy converting                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                              * Otherwise A/D is done converting                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                              */                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
00080e   50c2     MOVF      0xc2,0x0,0x0     return(ADCON0bits.GO);                                                         C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
000810   0b02     ANDLW     0x2                                                                                             
000812   e001     BZ        0x816                                                                                           
000814   0e01     MOVLW     0x1                                                                                             
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
000816   0012     RETURN    0x0            }                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           /* $Id: adcclose.c,v 1.1 2003/12/09 22:52:09 GrosbaJ Exp $ */                    C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           #include <p18cxxx.h>                                                             C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           #include <adc.h>                                                                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           /************************************************************************        C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           *    Function Name:  CloseADC                                           *        C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           *    Return Value:   void                                               *        C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           *    Parameters:     void                                               *        C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           *    Description:    This routine turns the A/D off and disables        *        C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           *                    the A/D interrupt                                  *        C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           ************************************************************************/        C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           void CloseADC(void)                                                              C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           {                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
0056fa   90c2     BCF       0xc2,0x0,0x0     ADCON0bits.ADON = 0;                                                           C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
0056fc   9c9d     BCF       0x9d,0x6,0x0     PIE1bits.ADIE = 0;                                                             C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
0056fe   0012     RETURN    0x0            }                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           /* $Id: adcconv.c,v 1.1 2003/12/09 22:52:09 GrosbaJ Exp $ */                     C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           #include <p18cxxx.h>                                                             C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           #include <adc.h>                                                                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           /********************************************************************            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           *    Function Name:  ConvertADC                                     *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           *    Return Value:   void                                           *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           *    Parameters:     void                                           *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           *    Description:    This routine starts an A/D conversion by       *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           *                    setting the GO bit.                            *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           ********************************************************************/            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           void ConvertADC(void)                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           {                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
005700   82c2     BSF       0xc2,0x1,0x0     ADCON0bits.GO = 1;  // Set the GO bit to start a conversion                    C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
005702   0012     RETURN    0x0            }                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           #include "p18cxxx.inc"                                                           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                                   LIST                                                                     C:\MCC18\MPASM\p18cxxx.inc
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\p18cxxx.inc
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;/********************************************************************           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*   Function Name: Delay10TCYx                                      *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*   Return Value:  void                                             *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*   Parameters:    unit:                                            *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*   Description:   This routine delays for multiples of 10          *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*                  instruction cycles that is specified in unit.    *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*   Special Note:  This routine provides multiples of 10 Tcy.       *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*                  A value of 1 to 255 provides 10 to 2550   Tcy    *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*                  delay.  A value of 0 will provide a delay of     *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*                  2560 Tcy.                                        *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;********************************************************************/           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           D10TCYXCODE CODE                                                                 C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           Delay10TCYx                                                                      C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
0056c2   0eff     MOVLW     0xff               movlw   0xff                                                                 C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
0056c4   50e3     MOVF      0xe3,0x0,0x0       movf    PLUSW1,0                                                             C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
0056c6   4ee8     DCFSNZ    0xe8,0x1,0x0       dcfsnz  WREG,1                                                               C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
0056c8   0012     RETURN    0x0                return                                                                       C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           D10x                                                                             C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
0056ca   0000     NOP                          nop                                                                          C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
0056cc   d000     BRA       0x56ce             bra     $+2                                                                  C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
0056ce   d000     BRA       0x56d0             bra     $+2                                                                  C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
0056d0   d000     BRA       0x56d2             bra     $+2                                                                  C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           D10_1                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
0056d2   2ee8     DECFSZ    0xe8,0x1,0x0       decfsz  WREG,1                                                               C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
0056d4   d7fa     BRA       0x56ca             bra     D10x                                                                 C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
0056d6   0012     RETURN    0x0                return                                                                       C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                               GLOBAL  Delay10TCYx                                                          C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                               END                                                                          C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           #include "p18cxxx.inc"                                                           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                                   LIST                                                                     C:\MCC18\MPASM\p18cxxx.inc
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\p18cxxx.inc
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;/********************************************************************           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*   Function Name: Delay1KTCYx                                      *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*   Return Value:  void                                             *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*   Parameters:    unit:                                            *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*   Description:   This routine delays for multiples of 1000        *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*                  instruction cycles that is specified in unit.    *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*   Special Note:  This routine provides multiples of 1000 Tcy      *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*                  A value of 1 to 255 to provides 1000 to          *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*                  255000 Tcy delay.  A value of 0 will provide     *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*                  a delay of 256000 Tcy.                           *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;********************************************************************/           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                               EXTERN  DelayCounter1                                                        C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           D1KTCYXCODE CODE                                                                 C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           Delay1KTCYx                                                                      C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
005686   0eff     MOVLW     0xff               movlw   0xff                                                                 C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
005688   50e3     MOVF      0xe3,0x0,0x0       movf    PLUSW1,0                                                             C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
00568a   6e43     MOVWF     0x43,0x0           movwf   DelayCounter1                                                        C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
00568c   0e48     MOVLW     0x48               movlw   0x48                                                                 C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
00568e   d001     BRA       0x5692             bra     D1K_1                                                                C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           D1Kx                                                                             C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
005690   0e4c     MOVLW     0x4c               movlw   0x4c                                                                 C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           D1K_1                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
005692   6ee7     MOVWF     0xe7,0x0           movwf   INDF1                                                                C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
005694   2ee7     DECFSZ    0xe7,0x1,0x0       decfsz  INDF1,1                                                              C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
005696   d7fe     BRA       0x5694             bra     $-2                                                                  C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
005698   6ae7     CLRF      0xe7,0x0           clrf    INDF1                                                                C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
00569a   2ee7     DECFSZ    0xe7,0x1,0x0       decfsz  INDF1,1                                                              C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
00569c   d7fe     BRA       0x569a             bra     $-2                                                                  C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
00569e   2e43     DECFSZ    0x43,0x1,0x0       decfsz  DelayCounter1,1                                                      C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
0056a0   d7f7     BRA       0x5690             bra     D1Kx                                                                 C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
0056a2   0000     NOP                          nop                                                                          C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
0056a4   0012     RETURN    0x0                return                                                                       C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                               GLOBAL  Delay1KTCYx                                                          C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                               END                                                                          C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           DELAYDAT1      UDATA_ACS                                                         C:\MCC18\SRC\TRADIT~1\DELAYS\delayd1.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\delayd1.asm
                                           DelayCounter1  RES 1                                                             C:\MCC18\SRC\TRADIT~1\DELAYS\delayd1.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\delayd1.asm
                                                          GLOBAL DelayCounter1                                              C:\MCC18\SRC\TRADIT~1\DELAYS\delayd1.asm
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\DELAYS\delayd1.asm
                                           	       END                                                                      C:\MCC18\SRC\TRADIT~1\DELAYS\delayd1.asm
                                           #include <P18CXXX.INC>           ; general Golden Gate definitions               C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                           #include "fpmacros.inc"                                                          C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ; Macros, constants, defines and variable externs used by float routines.        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;        radix dec                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Uses traditional global names                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN FPFLAGS                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB7                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB6                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB5                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB4                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fFlg  FPFLAGS                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA3    AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA2    AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA1    AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA0    AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fAexp  AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB3    BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB2    BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB1    BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB0    BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fBexp  BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT1     TEMPB3                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT0     TEMPB2                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW3     TEMPB1                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW2     TEMPB0                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW1     AARGB7                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW0     AARGB6                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexp   AARGB5                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexpHi AARGB4                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA0 AARGB0   ;msb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA1 AARGB1                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA2 AARGB2                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA3 AARGB3   ;lsb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_BIAS        equ      127    ; exponent bias                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_SMIN        equ     -149    ; min unbiased subnormal exponent                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMIN        equ     -126    ; min unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMAX        equ      127    ; max unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Flags for both A and B arguments                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_A    0  ; A: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_A     1  ; A: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_A    2  ; A: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_NaN_AorB  3  ; A or B is a NaN  (A or B)                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_B    4  ; B: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_B     5  ; B: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_B    6  ; B: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_ABW  7  ; ABW: Sign (A xor B) or W                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Exchange macro Var0, Var1                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var0,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movff   Var1,Var0                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movwf   Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Clear4 macro Var0, Var1, Var2, Var3                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var2                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var3                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Logical shift                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4 macro Var0,Var1,Var2,Var3                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bcf     STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR2C macro Var0,Var1                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C invalid                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   infsnz  Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Decrement 2 bytes. WREG unchanged.                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Dec2 macro Var0, Var1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   decf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   decf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
002f5a   6c35     NEGF      0x35,0x0               negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
002f5c   1e36     COMF      0x36,0x1,0x0           comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
002f5e   6ae8     CLRF      0xe8,0x0               clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
002f60   2236     ADDWFC    0x36,0x1,0x0           addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg5 macro Var0,Var1,Var2,Var3,Var4                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add32 macro AVar0,AVar1,AVar2, BVar0,BVar1                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add41 macro AVar0,AVar1,AVar2,AVar3, BVar0                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add42 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub2 macro AVar0,AVar1, BVar0,BVar1                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub3 macro AVar0,AVar1,AVar2, BVar0,BVar1,BVar2                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; (PRODL,PRODH) = AVar*Bvar                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Mul2 macro AVar,BVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   mulwf   AVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== R E L  B R A N C H E S ===================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit set                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braSet macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit clear                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braClr macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
002f56   ae36     BTFSS     0x36,0x7,0x0           btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
002f58   d005     BRA       0x2f64                 bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqZ macro Var,jZero                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jZero                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneZ macro Var,jNotZero                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jNotZero                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var <= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfsgt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var >= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfslt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 == Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 != Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfslt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfsgt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFltF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   STATUS,Z                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bc      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== A B S O L U T E    B R A N C H E S =======================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit set                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoSet macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit clear                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoClr macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if F == Lit                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFeqL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F != Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFneL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F >= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFgeL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfslt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F <= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFleL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfsgt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                           ; FLO1632U:                                                                      C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                           ; FLO1632S:                                                                      C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                           ; Description:                                                                   C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                           ;         Two byte integer to Float conversion                                   C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                           ; Input:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                           ;         FLO1632U: Two byte unsigned integer in iA0,iA1                         C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                           ;         FLO1632S: Two byte signed integer in iA0,iA1                           C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                           ; Output:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                           ;         IEEE 754 format float fA                                               C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                           ;---------------------------------------------------------------------------------------------- C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                                     GLOBAL FLO1632U                                                        C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                                     GLOBAL FLO1632S                                                        C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                                     EXTERN __FpPack                                                        C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                           PROG    CODE                                                                     C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                           FLO1632U:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
002f50   9e3e     BCF       0x3e,0x7,0x0             bcf       fFlg,FLG_SIGN_ABW   ;; Flag as unsigned                      C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
002f52   d008     BRA       0x2f64                   bra       jI2F16Beg                                                    C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                           FLO1632S:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
002f54   9e3e     BCF       0x3e,0x7,0x0             bcf       fFlg,FLG_SIGN_ABW                                            C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                                     braClr    iA0,7,jI2F16Beg                                              C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                                     ;; Negate                                                              C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                                     Neg2      iA1,iA0                                                      C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
002f62   8e3e     BSF       0x3e,0x7,0x0             bsf       fFlg,FLG_SIGN_ABW                                            C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                           jI2F16Beg:                                                                       C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                                     ;; Copy integer to fW                                                  C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
002f64   c036     MOVFF     0x36,0x30                movff     iA0,fW0                                                      C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
002f66   f030                                                                                                               
002f68   c035     MOVFF     0x35,0x2f                movff     iA1,fW1                                                      C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
002f6a   f02f                                                                                                               
002f6c   6a42     CLRF      0x42,0x0                 clrf      fW2                                                          C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
002f6e   6a41     CLRF      0x41,0x0                 clrf      fW3                                                          C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
002f70   0e8e     MOVLW     0x8e                     movlw     0x8E                                                         C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
002f72   6e31     MOVWF     0x31,0x0                 movwf     fWexp                                                        C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
002f74   6a32     CLRF      0x32,0x0                 clrf      fWexpHi                                                      C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                           ;; Sign is Flg.FLG_SIGN_ABW                                                      C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
002f76   ef40     GOTO      0x3280                   goto      __FpPack                                                     C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
002f78   f019                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                                     END                                                                    C:\MCC18\SRC\TRADIT~1\MATH\cast16FP.asm
                                           #include <P18CXXX.INC>           ; general Golden Gate definitions               C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                           #include "fpmacros.inc"                                                          C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ; Macros, constants, defines and variable externs used by float routines.        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;        radix dec                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Uses traditional global names                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN FPFLAGS                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB7                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB6                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB5                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB4                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fFlg  FPFLAGS                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA3    AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA2    AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA1    AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA0    AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fAexp  AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB3    BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB2    BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB1    BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB0    BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fBexp  BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT1     TEMPB3                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT0     TEMPB2                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW3     TEMPB1                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW2     TEMPB0                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW1     AARGB7                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW0     AARGB6                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexp   AARGB5                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexpHi AARGB4                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA0 AARGB0   ;msb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA1 AARGB1                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA2 AARGB2                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA3 AARGB3   ;lsb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_BIAS        equ      127    ; exponent bias                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_SMIN        equ     -149    ; min unbiased subnormal exponent                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMIN        equ     -126    ; min unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMAX        equ      127    ; max unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Flags for both A and B arguments                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_A    0  ; A: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_A     1  ; A: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_A    2  ; A: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_NaN_AorB  3  ; A or B is a NaN  (A or B)                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_B    4  ; B: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_B     5  ; B: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_B    6  ; B: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_ABW  7  ; ABW: Sign (A xor B) or W                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Exchange macro Var0, Var1                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var0,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movff   Var1,Var0                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movwf   Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Clear4 macro Var0, Var1, Var2, Var3                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var2                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var3                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Logical shift                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4 macro Var0,Var1,Var2,Var3                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bcf     STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR2C macro Var0,Var1                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003054   3236     RRCF      0x36,0x1,0x0           rrcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003096   3230     RRCF      0x30,0x1,0x0                                                                                    
003056   3235     RRCF      0x35,0x1,0x0           rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003098   322f     RRCF      0x2f,0x1,0x0                                                                                    
003058   3234     RRCF      0x34,0x1,0x0           rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00309a   3242     RRCF      0x42,0x1,0x0                                                                                    
00305a   3233     RRCF      0x33,0x1,0x0           rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00309c   3241     RRCF      0x41,0x1,0x0                                                                                    
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C invalid                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   infsnz  Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Decrement 2 bytes. WREG unchanged.                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Dec2 macro Var0, Var1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   decf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   decf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003028   6c34     NEGF      0x34,0x0               negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00303c   6c42     NEGF      0x42,0x0                                                                                        
00302a   1e35     COMF      0x35,0x1,0x0           comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00303e   1e2f     COMF      0x2f,0x1,0x0                                                                                    
00302c   1e36     COMF      0x36,0x1,0x0           comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003040   1e30     COMF      0x30,0x1,0x0                                                                                    
00302e   1e37     COMF      0x37,0x1,0x0           comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003042   1e31     COMF      0x31,0x1,0x0                                                                                    
003030   6ae8     CLRF      0xe8,0x0               clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003044   6ae8     CLRF      0xe8,0x0                                                                                        
003032   2235     ADDWFC    0x35,0x1,0x0           addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003046   222f     ADDWFC    0x2f,0x1,0x0                                                                                    
003034   2236     ADDWFC    0x36,0x1,0x0           addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003048   2230     ADDWFC    0x30,0x1,0x0                                                                                    
003036   2237     ADDWFC    0x37,0x1,0x0           addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00304a   2231     ADDWFC    0x31,0x1,0x0                                                                                    
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg5 macro Var0,Var1,Var2,Var3,Var4                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00307a   6c41     NEGF      0x41,0x0               negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00307c   1e42     COMF      0x42,0x1,0x0           comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00307e   1e2f     COMF      0x2f,0x1,0x0           comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003080   1e30     COMF      0x30,0x1,0x0           comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003082   1e31     COMF      0x31,0x1,0x0           comf    Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003084   6ae8     CLRF      0xe8,0x0               clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003086   2242     ADDWFC    0x42,0x1,0x0           addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003088   222f     ADDWFC    0x2f,0x1,0x0           addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00308a   2230     ADDWFC    0x30,0x1,0x0           addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00308c   2231     ADDWFC    0x31,0x1,0x0           addwfc  Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add32 macro AVar0,AVar1,AVar2, BVar0,BVar1                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add41 macro AVar0,AVar1,AVar2,AVar3, BVar0                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add42 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003060   5034     MOVF      0x34,0x0,0x0           movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003062   2642     ADDWF     0x42,0x1,0x0           addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003064   5035     MOVF      0x35,0x0,0x0           movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003066   222f     ADDWFC    0x2f,0x1,0x0           addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003068   5036     MOVF      0x36,0x0,0x0           movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00306a   2230     ADDWFC    0x30,0x1,0x0           addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00306c   5037     MOVF      0x37,0x0,0x0           movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00306e   2231     ADDWFC    0x31,0x1,0x0           addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub2 macro AVar0,AVar1, BVar0,BVar1                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub3 macro AVar0,AVar1,AVar2, BVar0,BVar1,BVar2                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; (PRODL,PRODH) = AVar*Bvar                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Mul2 macro AVar,BVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   mulwf   AVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== R E L  B R A N C H E S ===================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit set                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braSet macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
002fba   be3e     BTFSC     0x3e,0x7,0x0           btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
002fbc   d004     BRA       0x2fc6                 bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit clear                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braClr macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
002f8c   a23e     BTFSS     0x3e,0x1,0x0           btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
002f90   aa3e     BTFSS     0x3e,0x5,0x0                                                                                    
002fa4   aa3e     BTFSS     0x3e,0x5,0x0                                                                                    
002fb2   a03e     BTFSS     0x3e,0x0,0x0                                                                                    
002fb6   a83e     BTFSS     0x3e,0x4,0x0                                                                                    
002fbe   a43e     BTFSS     0x3e,0x2,0x0                                                                                    
003024   a43e     BTFSS     0x3e,0x2,0x0                                                                                    
003038   ac3e     BTFSS     0x3e,0x6,0x0                                                                                    
003076   ae31     BTFSS     0x31,0x7,0x0                                                                                    
003090   a031     BTFSS     0x31,0x0,0x0                                                                                    
002f8e   d00a     BRA       0x2fa4                 bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
002f92   d003     BRA       0x2f9a                                                                                          
002fa6   d005     BRA       0x2fb2                                                                                          
002fb4   d00a     BRA       0x2fca                                                                                          
002fb8   d008     BRA       0x2fca                                                                                          
002fc0   d002     BRA       0x2fc6                                                                                          
003026   d008     BRA       0x3038                                                                                          
00303a   d008     BRA       0x304c                                                                                          
003078   d00b     BRA       0x3090                                                                                          
003092   d006     BRA       0x30a0                                                                                          
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqZ macro Var,jZero                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00304e   5240     MOVF      0x40,0x1,0x0           movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003050   e007     BZ        0x3060                 bz      jZero                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneZ macro Var,jNotZero                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jNotZero                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var <= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfsgt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var >= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfslt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 == Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 != Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfslt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfsgt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFltF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   STATUS,Z                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bc      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== A B S O L U T E    B R A N C H E S =======================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit set                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoSet macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
002f86   b63e     BTFSC     0x3e,0x3,0x0           btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
002f94   be3e     BTFSC     0x3e,0x7,0x0                                                                                    
003012   b03e     BTFSC     0x3e,0x0,0x0                                                                                    
002f88   ef24     GOTO      0x3248                 goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
002f8a   f019                                                                                                               
002f96   ef24     GOTO      0x3248                                                                                          
002f98   f019                                                                                                               
003014   ef6c     GOTO      0x32d8                                                                                          
003016   f019                                                                                                               
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit clear                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoClr macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
002f9a   a43e     BTFSS     0x3e,0x2,0x0           btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
002fa8   ac3e     BTFSS     0x3e,0x6,0x0                                                                                    
002f9c   ef30     GOTO      0x3260                 goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
002f9e   f019                                                                                                               
002faa   ef30     GOTO      0x3260                                                                                          
002fac   f019                                                                                                               
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if F == Lit                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFeqL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F != Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFneL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F >= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFgeL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003018   0e1a     MOVLW     0x1a                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00301a   6040     CPFSLT    0x40,0x0                 cpfslt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00301c   ef6c     GOTO      0x32d8                   goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00301e   f019                                                                                                               
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F <= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFleL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfsgt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           ; FPS32                                                                          C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           ; FPA32                                                                          C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           ; Description:                                                                   C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           ;         Addition     fA+fB for floats fA and fB                                C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           ;         Subtraction  fA-fB for floats fA and fB                                C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           ; Input:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           ;         IEEE 754 format floats fAexp...fA2, fBexp...fB2.                       C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           ; Output:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           ;         IEEE 754 format float fA = fA+fB or fA = fA-fB                         C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           ;---------------------------------------------------------------------------------------------- C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     GLOBAL FPS32, FPA32                                                    C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     EXTERN __FpUnPackA, __FpUnPackB, __FpPack                              C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     EXTERN __FpReturnW                                                     C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     EXTERN __FpReturnNaN, __FpReturnPosZero, __FpReturnNegZero             C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     EXTERN __FpReturnPosInf, __FpReturnNegInf, __FpReturnSignInf           C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           PROG    CODE                                                                     C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           FPS32                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
002f7a   7e3c     BTG       0x3c,0x7,0x0             btg       fBexp,7                                                      C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           FPA32                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           ;------ Unpack the operands                                                      C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
002f7c   6a3e     CLRF      0x3e,0x0                 clrf      fFlg                                                         C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
002f7e   ec7c     CALL      0x32f8,0x0               call      __FpUnPackA                                                  C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
002f80   f019                                                                                                               
002f82   ec94     CALL      0x3328,0x0               call      __FpUnPackB                                                  C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
002f84   f019                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     gotoSet   fFlg,FLG_NaN_AorB,__FpReturnNaN                              C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     braClr    fFlg,FLG_INF_A,jANotInf                                      C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           ;------ A is Infinite                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     braClr    fFlg,FLG_INF_B,jBANotInf                                     C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           ;------ A and B Infinite                                                         C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     gotoSet   fFlg,FLG_SIGN_ABW,__FpReturnNaN ; Inf - Inf => return NaN    C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           jBANotInf:                                                                       C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           ;------ A infinite and B not infinite or both infinite with same sign            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     gotoClr   fFlg,FLG_SIGN_A,__FpReturnPosInf                             C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
002fa0   ef2d     GOTO      0x325a                   goto      __FpReturnNegInf                                             C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
002fa2   f019                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           jANotInf:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     braClr    fFlg,FLG_INF_B,jBNotInf                                      C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; A finite, B infinite => return signed infinite                      C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     gotoClr   fFlg,FLG_SIGN_B,__FpReturnPosInf                             C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
002fae   ef2d     GOTO      0x325a                   goto      __FpReturnNegInf                                             C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
002fb0   f019                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           jBNotInf:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           ;-----------------------------------------------------------------------;        C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           ;       Both operands are finite                                                 C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           ;-----------------------------------------------------------------------;        C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     braClr    fFlg,FLG_ZERO_A,jNotBothZero                                 C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     braClr    fFlg,FLG_ZERO_B,jNotBothZero                                 C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; The cases of (+/-0)+(+/-0) must be trapped since IEEE requires:     C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;;        (+0)+(+0), (+0)+(-0) and (-0)+(+0) to = (+0)                 C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;;        (-0)+(-0) = (-0)                                             C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     braSet    fFlg,FLG_SIGN_ABW,jDifOrPosSign                              C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     braClr    fFlg,FLG_SIGN_A,jDifOrPosSign                                C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
002fc2   ef39     GOTO      0x3272                   goto      __FpReturnNegZero   ;; Return (-0)                           C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
002fc4   f019                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           jDifOrPosSign:                                                                   C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
002fc6   ef3d     GOTO      0x327a                   goto      __FpReturnPosZero   ;; Return (+0)                           C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
002fc8   f019                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           jNotBothZero:                                                                    C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
002fca   6a41     CLRF      0x41,0x0                 clrf      fW3                                                          C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
002fcc   6a32     CLRF      0x32,0x0                 clrf      fWexpHi                                                      C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; fT0 = fAexp - fBexp                                                 C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
002fce   503c     MOVF      0x3c,0x0,0x0             movf      fBexp,W                                                      C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
002fd0   5c37     SUBWF     0x37,0x0,0x0             subwf     fAexp,W                                                      C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
002fd2   6e40     MOVWF     0x40,0x0                 movwf     fT0                                                          C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
002fd4   e310     BNC       0x2ff6                   bnc       jAltBexp                                                     C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; fAexp >= fBexp   => copy fA -> fW and fB -> fA                      C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
002fd6   c034     MOVFF     0x34,0x42                movff     fA2,fW2                                                      C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
002fd8   f042                                                                                                               
002fda   c035     MOVFF     0x35,0x2f                movff     fA1,fW1                                                      C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
002fdc   f02f                                                                                                               
002fde   c036     MOVFF     0x36,0x30                movff     fA0,fW0                                                      C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
002fe0   f030                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; save largest exponent                                               C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
002fe2   c037     MOVFF     0x37,0x3f                movff     fAexp,fT1                                                    C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
002fe4   f03f                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
002fe6   c039     MOVFF     0x39,0x34                movff     fB2,fA2                                                      C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
002fe8   f034                                                                                                               
002fea   c03a     MOVFF     0x3a,0x35                movff     fB1,fA1                                                      C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
002fec   f035                                                                                                               
002fee   c03b     MOVFF     0x3b,0x36                movff     fB0,fA0                                                      C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
002ff0   f036                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; Exchange A & B flags.                                               C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; Note: meaning of FLG_NaN_AorB and FLG_SIGN_ABW swapped!             C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
002ff2   3a3e     SWAPF     0x3e,0x1,0x0             swapf     fFlg,F                                                       C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
002ff4   d009     BRA       0x3008                   bra       jAandWsetup                                                  C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           jAltBexp:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; fAexp < fBexp copy fB -> fW                                         C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
002ff6   c039     MOVFF     0x39,0x42                movff     fB2,fW2                                                      C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
002ff8   f042                                                                                                               
002ffa   c03a     MOVFF     0x3a,0x2f                movff     fB1,fW1                                                      C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
002ffc   f02f                                                                                                               
002ffe   c03b     MOVFF     0x3b,0x30                movff     fB0,fW0                                                      C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
003000   f030                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; save largest exponent                                               C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
003002   c03c     MOVFF     0x3c,0x3f                movff     fBexp,fT1                                                    C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
003004   f03f                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; make fT0 absolute value                                             C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
003006   6c40     NEGF      0x40,0x0                 negf      fT0                                                          C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           jAandWsetup:                                                                     C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; At this point Flg's for A refer to fA and Flg's for B refer to fW.  C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; Since flag nibbles may have been swapped FLG_NaN_AorB and           C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;;        FLG_SIGN_ABW may be incorrect.                               C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; Must set FLG_SIGN_ABW and fWexp in case ReturnW is used.            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; Flg.FLG_SIGN_ABW = Flg.FLG_SIGN_B                                   C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
003008   9e3e     BCF       0x3e,0x7,0x0             bcf       fFlg,FLG_SIGN_ABW                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
00300a   bc3e     BTFSC     0x3e,0x6,0x0             btfsc     fFlg,FLG_SIGN_B                                              C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
00300c   8e3e     BSF       0x3e,0x7,0x0             bsf       fFlg,FLG_SIGN_ABW                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
00300e   c03f     MOVFF     0x3f,0x31                movff     fT1,fWexp           ;; largest exponent                      C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
003010   f031                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; if fA contains zero => return fW                                    C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     gotoSet   fFlg,FLG_ZERO_A,__FpReturnW                                  C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; fW contains the value with the larger exponent                      C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; fT0 contains the absolute difference between the exponents          C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     gotoFgeL  fT0,26,__FpReturnW  ;; fA too small to contribute            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; Past here fAexp and fWexp are used as the upper byte of Significants. C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; The upper byte is required both for negation and because the        C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; results can exceed fA0 or fW0, i.e. 0.1xx + 0.1xx => 1.xxx          C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
003020   6a31     CLRF      0x31,0x0                 clrf      fWexp                                                        C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
003022   6a37     CLRF      0x37,0x0                 clrf      fAexp                                                        C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; Switch from sign and absolute value representation to               C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; signed representation                                               C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     braClr    fFlg,FLG_SIGN_A,jANotNeg                                     C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; Negate fA                                                           C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     Neg4      fA2,fA1,fA0,fAexp                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           jANotNeg:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     braClr    fFlg,FLG_SIGN_B,jWNotNeg                                     C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; Negate fW                                                           C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     Neg4      fW2,fW1,fW0,fWexp                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           jWNotNeg:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; Have to add additional lower byte, fA3, to capture                  C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; roundoff & sticky bits                                              C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
00304c   6a33     CLRF      0x33,0x0                 clrf      fA3                                                          C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     braFeqZ   fT0,jShiftDone   ;; exponents already equal                  C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; Shift fA right with sign extension until exponents equal            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           jShiftLoop:                                                                      C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
003052   3437     RLCF      0x37,0x0,0x0             rlcf      fAexp,W             ;; Set C for sign extension              C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ShiftR4C  fA3,fA2,fA1,fA0                                              C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
00305c   2e40     DECFSZ    0x40,0x1,0x0             decfsz    fT0,F                                                        C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
00305e   d7f9     BRA       0x3052                   bra       jShiftLoop                                                   C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           jShiftDone:                                                                      C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; Finally we can add.                                                 C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; Note that fA3 will not be changed by Add                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     Add4      fW2,fW1,fW0,fWexp, fA2,fA1,fA0,fAexp                         C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
003070   c033     MOVFF     0x33,0x41                movff     fA3,fW3                                                      C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
003072   f041                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; Switch back to Sign,absolute value representation                   C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
003074   9e3e     BCF       0x3e,0x7,0x0             bcf       fFlg,FLG_SIGN_ABW                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     braClr    fWexp,7,jSignDone                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; Result is negative.  Negate and record sign                         C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     Neg5      fW3,fW2,fW1,fW0,fWexp                                        C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
00308e   8e3e     BSF       0x3e,0x7,0x0             bsf       fFlg,FLG_SIGN_ABW                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           jSignDone:                                                                       C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; If results has form 1.xxx must shift to right before going          C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; to FpPack                                                           C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     braClr    fWexp,0,jFinalSign                                           C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
003094   80d8     BSF       0xd8,0x0,0x0             bsf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ShiftR4C  fW3,fW2,fW1,fW0                                              C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
00309e   2a3f     INCF      0x3f,0x1,0x0             incf      fT1,F                         ;; Note: this can't exceed 255 C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           jFinalSign:                                                                      C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; load exponent for pack                                              C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
0030a0   c03f     MOVFF     0x3f,0x31                movff     fT1,fWexp                                                    C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
0030a2   f031                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     ;; Sign is FLG_SIGN_ABW                                                C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
0030a4   ef40     GOTO      0x3280                   goto __FpPack                                                          C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
0030a6   f019                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                     END                                                                    C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\addFP.asm
                                           ;	RCS Header $Id: cmath18.asm,v 1.4 2004/10/01 19:13:22 GrosbaJ Exp $            C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           ;       CMATH18 DATA DEFINITION FILE                                             C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           ;   VARIABLE ALLOCATION - Core math library routines                             C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           MATH_DATA      UDATA_ACS                                                         C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           SIGN		RES 1       ; save location for sign in MSB                                C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           FPFLAGSbits                                                                      C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           FPFLAGS		RES 1       ; floating point library exception flags                    C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                   GLOBAL  SIGN, FPFLAGS, FPFLAGSbits                                       C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                   END                                                                      C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           #include <P18CXXX.INC>           ; general Golden Gate definitions               C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                           #include "fpmacros.inc"                                                          C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ; Macros, constants, defines and variable externs used by float routines.        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;        radix dec                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Uses traditional global names                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN FPFLAGS                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB7                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB6                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB5                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB4                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fFlg  FPFLAGS                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA3    AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA2    AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA1    AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA0    AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fAexp  AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB3    BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB2    BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB1    BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB0    BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fBexp  BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT1     TEMPB3                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT0     TEMPB2                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW3     TEMPB1                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW2     TEMPB0                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW1     AARGB7                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW0     AARGB6                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexp   AARGB5                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexpHi AARGB4                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA0 AARGB0   ;msb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA1 AARGB1                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA2 AARGB2                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA3 AARGB3   ;lsb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_BIAS        equ      127    ; exponent bias                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_SMIN        equ     -149    ; min unbiased subnormal exponent                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMIN        equ     -126    ; min unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMAX        equ      127    ; max unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Flags for both A and B arguments                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_A    0  ; A: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_A     1  ; A: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_A    2  ; A: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_NaN_AorB  3  ; A or B is a NaN  (A or B)                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_B    4  ; B: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_B     5  ; B: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_B    6  ; B: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_ABW  7  ; ABW: Sign (A xor B) or W                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Exchange macro Var0, Var1                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var0,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movff   Var1,Var0                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movwf   Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Clear4 macro Var0, Var1, Var2, Var3                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0030f4   6a41     CLRF      0x41,0x0               clrf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0030f6   6a42     CLRF      0x42,0x0               clrf    Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0030f8   6a2f     CLRF      0x2f,0x0               clrf    Var2                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0030fa   6a30     CLRF      0x30,0x0               clrf    Var3                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Logical shift                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4 macro Var0,Var1,Var2,Var3                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bcf     STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR2C macro Var0,Var1                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C invalid                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   infsnz  Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Decrement 2 bytes. WREG unchanged.                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Dec2 macro Var0, Var1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   decf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   decf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg5 macro Var0,Var1,Var2,Var3,Var4                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add32 macro AVar0,AVar1,AVar2, BVar0,BVar1                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00310c   50f3     MOVF      0xf3,0x0,0x0           movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00311c   50f3     MOVF      0xf3,0x0,0x0                                                                                    
00310e   2642     ADDWF     0x42,0x1,0x0           addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00311e   2642     ADDWF     0x42,0x1,0x0                                                                                    
003110   50f4     MOVF      0xf4,0x0,0x0           movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003120   50f4     MOVF      0xf4,0x0,0x0                                                                                    
003112   222f     ADDWFC    0x2f,0x1,0x0           addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003122   222f     ADDWFC    0x2f,0x1,0x0                                                                                    
003114   0e00     MOVLW     0x0                    movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003124   0e00     MOVLW     0x0                                                                                             
003116   2230     ADDWFC    0x30,0x1,0x0           addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003126   2230     ADDWFC    0x30,0x1,0x0                                                                                    
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add41 macro AVar0,AVar1,AVar2,AVar3, BVar0                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003162   50f4     MOVF      0xf4,0x0,0x0           movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003172   50f4     MOVF      0xf4,0x0,0x0                                                                                    
003164   2641     ADDWF     0x41,0x1,0x0           addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003174   2641     ADDWF     0x41,0x1,0x0                                                                                    
003166   0e00     MOVLW     0x0                    movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003176   0e00     MOVLW     0x0                                                                                             
003168   2242     ADDWFC    0x42,0x1,0x0           addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003178   2242     ADDWFC    0x42,0x1,0x0                                                                                    
00316a   222f     ADDWFC    0x2f,0x1,0x0           addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00317a   222f     ADDWFC    0x2f,0x1,0x0                                                                                    
00316c   2230     ADDWFC    0x30,0x1,0x0           addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00317c   2230     ADDWFC    0x30,0x1,0x0                                                                                    
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add42 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00312c   50f3     MOVF      0xf3,0x0,0x0           movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00313e   50f3     MOVF      0xf3,0x0,0x0                                                                                    
003150   50f3     MOVF      0xf3,0x0,0x0                                                                                    
00312e   2641     ADDWF     0x41,0x1,0x0           addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003140   2641     ADDWF     0x41,0x1,0x0                                                                                    
003152   2641     ADDWF     0x41,0x1,0x0                                                                                    
003130   50f4     MOVF      0xf4,0x0,0x0           movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003142   50f4     MOVF      0xf4,0x0,0x0                                                                                    
003154   50f4     MOVF      0xf4,0x0,0x0                                                                                    
003132   2242     ADDWFC    0x42,0x1,0x0           addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003144   2242     ADDWFC    0x42,0x1,0x0                                                                                    
003156   2242     ADDWFC    0x42,0x1,0x0                                                                                    
003134   0e00     MOVLW     0x0                    movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003146   0e00     MOVLW     0x0                                                                                             
003158   0e00     MOVLW     0x0                                                                                             
003136   222f     ADDWFC    0x2f,0x1,0x0           addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003148   222f     ADDWFC    0x2f,0x1,0x0                                                                                    
00315a   222f     ADDWFC    0x2f,0x1,0x0                                                                                    
003138   2230     ADDWFC    0x30,0x1,0x0           addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00314a   2230     ADDWFC    0x30,0x1,0x0                                                                                    
00315c   2230     ADDWFC    0x30,0x1,0x0                                                                                    
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub2 macro AVar0,AVar1, BVar0,BVar1                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub3 macro AVar0,AVar1,AVar2, BVar0,BVar1,BVar2                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; (PRODL,PRODH) = AVar*Bvar                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Mul2 macro AVar,BVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0030fc   503b     MOVF      0x3b,0x0,0x0           movf    BVar,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003108   503a     MOVF      0x3a,0x0,0x0                                                                                    
003118   503b     MOVF      0x3b,0x0,0x0                                                                                    
003128   5039     MOVF      0x39,0x0,0x0                                                                                    
00313a   503a     MOVF      0x3a,0x0,0x0                                                                                    
00314c   503b     MOVF      0x3b,0x0,0x0                                                                                    
00315e   5039     MOVF      0x39,0x0,0x0                                                                                    
00316e   503a     MOVF      0x3a,0x0,0x0                                                                                    
0030fe   0236     MULWF     0x36,0x0               mulwf   AVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00310a   0236     MULWF     0x36,0x0                                                                                        
00311a   0235     MULWF     0x35,0x0                                                                                        
00312a   0236     MULWF     0x36,0x0                                                                                        
00313c   0235     MULWF     0x35,0x0                                                                                        
00314e   0234     MULWF     0x34,0x0                                                                                        
003160   0235     MULWF     0x35,0x0                                                                                        
003170   0234     MULWF     0x34,0x0                                                                                        
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== R E L  B R A N C H E S ===================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit set                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braSet macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0030d4   b03e     BTFSC     0x3e,0x0,0x0           btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0030d6   d002     BRA       0x30dc                 bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit clear                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braClr macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0030b8   a23e     BTFSS     0x3e,0x1,0x0           btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0030c6   aa3e     BTFSS     0x3e,0x5,0x0                                                                                    
0030d8   a83e     BTFSS     0x3e,0x4,0x0                                                                                    
0030ba   d005     BRA       0x30c6                 bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0030c8   d005     BRA       0x30d4                                                                                          
0030da   d002     BRA       0x30e0                                                                                          
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqZ macro Var,jZero                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jZero                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneZ macro Var,jNotZero                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jNotZero                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var <= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfsgt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var >= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfslt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 == Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 != Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfslt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfsgt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFltF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   STATUS,Z                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bc      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== A B S O L U T E    B R A N C H E S =======================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit set                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoSet macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0030b2   b63e     BTFSC     0x3e,0x3,0x0           btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0030bc   b83e     BTFSC     0x3e,0x4,0x0                                                                                    
0030ca   b03e     BTFSC     0x3e,0x0,0x0                                                                                    
0030b4   ef24     GOTO      0x3248                 goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0030b6   f019                                                                                                               
0030be   ef24     GOTO      0x3248                                                                                          
0030c0   f019                                                                                                               
0030cc   ef24     GOTO      0x3248                                                                                          
0030ce   f019                                                                                                               
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit clear                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoClr macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if F == Lit                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFeqL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F != Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFneL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F >= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFgeL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfslt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F <= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFleL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfsgt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ; FPM32                                                                          C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ; Description:                                                                   C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;         Mutiplication  fA*fB for floats fA and fB                              C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ; Input:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;         IEEE 754 format floats fAexp...fA2, fBexp...fB2.                       C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ; Output:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;         IEEE 754 format float fA = fA*fB                                       C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;------------------------------------------------------------------------------  C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     GLOBAL FPM32                                                           C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     EXTERN __FpUnPackA, __FpUnPackB, __FpPack                              C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     EXTERN __FpReturnNaN                                                   C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     EXTERN __FpReturnPosZero,__FpReturnNegZero,__FpReturnSignZero          C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     EXTERN __FpReturnPosInf, __FpReturnNegInf, __FpReturnSignInf           C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           PROG    CODE                                                                     C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           FPM32                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;------ Unpack the operands                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
0030a8   6a3e     CLRF      0x3e,0x0                 clrf      fFlg                                                         C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
0030aa   ec7c     CALL      0x32f8,0x0               call      __FpUnPackA                                                  C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
0030ac   f019                                                                                                               
0030ae   ec94     CALL      0x3328,0x0               call      __FpUnPackB                                                  C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
0030b0   f019                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     gotoSet   fFlg,FLG_NaN_AorB,__FpReturnNaN                              C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     braClr    fFlg,FLG_INF_A,jANotInf                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;------ A is Infinity                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     ;; Is b zero                                                           C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     gotoSet   fFlg,FLG_ZERO_B,__FpReturnNaN  ; Inf * Zero => return NaN    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     ;; B finite, A infinite => return infinite with FLG_SIGN_ABW sign      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
0030c2   ef2b     GOTO      0x3256                   goto      __FpReturnSignInf                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
0030c4   f019                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           jANotInf:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     ;; A not infinite                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     braClr    fFlg,FLG_INF_B,jBothFinite                                   C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     ;; A finite, B infinite                                                C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     gotoSet   fFlg,FLG_ZERO_A,__FpReturnNaN  ; Zero * Inf => return NaN    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
0030d0   ef2b     GOTO      0x3256                   goto      __FpReturnSignInf                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
0030d2   f019                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           jBothFinite:                                                                     C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;------ Both operands are finite: check for zeros                                C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     braSet    fFlg,FLG_ZERO_A,jHaveZero                                    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     braClr    fFlg,FLG_ZERO_B,jBothNotZero                                 C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           jHaveZero:                                                                       C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     ;; A or B is zero                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     ;; Return zero with sign of product                                    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
0030dc   ef37     GOTO      0x326e                   goto      __FpReturnSignZero                                           C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
0030de   f019                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           jBothNotZero:                                                                    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;-----------------------------------------------------------------------;        C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;       Both operands are finite and non-zero                                    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;-----------------------------------------------------------------------;        C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     ;; Calculate resulting exponent (two byte resultant)                   C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     ;; ExpW = (ExpA+127) + (ExpB+127) - 127 + 1                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
0030e0   6a32     CLRF      0x32,0x0                 clrf      fWexpHi                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
0030e2   503c     MOVF      0x3c,0x0,0x0             movf      fBexp,W                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
0030e4   2437     ADDWF     0x37,0x0,0x0             addwf     fAexp,W                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
0030e6   6e31     MOVWF     0x31,0x0                 movwf     fWexp                                                        C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
0030e8   6ae8     CLRF      0xe8,0x0                 clrf      WREG                                                         C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
0030ea   2232     ADDWFC    0x32,0x1,0x0             addwfc    fWexpHi,F                                                    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
0030ec   0e7e     MOVLW     0x7e                     movlw     FLT_BIAS-1                                                   C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
0030ee   5e31     SUBWF     0x31,0x1,0x0             subwf     fWexp,F                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
0030f0   6ae8     CLRF      0xe8,0x0                 clrf      WREG                                                         C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
0030f2   5a32     SUBWFB    0x32,0x1,0x0             subwfb    fWexpHi,F                                                    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; Not all products are calculated and not all products are included             C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; This will have a slight effect on the rounding and could cause                C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; a round toward zero when a round up is required by IEEE754                    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; round to nearest mode.  Effectively the round up threshold is changed         C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; from 0.5 to about 0.5001                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;;                                                                               C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; a0b0    a0b0                    not     not                                   C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;;         a1b0    a1b0            added   added                                 C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;;         a0b1    a0b1             |       |                                    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;;                 a2b0    a2b0     V       V                                    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;;                 a1b1    a1b1                                                  C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;;                 a0b2    a0b2                                                  C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;;                         a1b2    a1b2                                          C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;;                         a2b1    a2b1                                          C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;;                                 a2b2    a2b2                                  C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; added to get                                                                  C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;;                                                                               C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; fW0      fW1     fW2     fW3    NA      NA                                    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;;                                                                               C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; If msb of fW0   is 0 then the results will have to be left shifted            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; which will move the msb of fA3 into fA2. After this is done then              C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; the msb of fW3 becomes the Round bit and the rest of the less significant     C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; bits combine to form the Sticky bit.  Since the full product is not           C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; calculated fW3 could be a maximum of 2 too small. Since bits 0 -> 6 of        C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; fW3 are used only for rounding the effect is a very small failure to          C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; round up.                                                                     C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     Clear4    fW3, fW2, fW1, fW0                                           C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     Mul2      fA0,fB0                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
003100   cff4     MOVFF     0xff4,0x30               movff     PRODH,fW0                                                    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
003102   f030                                                                                                               
003104   cff3     MOVFF     0xff3,0x2f               movff     PRODL,fW1                                                    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
003106   f02f                                                                                                               
                                                     Mul2      fA0,fB1                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     Add32     fW2,fW1,fW0, PRODL, PRODH                                    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     Mul2      fA1,fB0                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     Add32     fW2,fW1,fW0, PRODL, PRODH                                    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     Mul2      fA0,fB2                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     Add42     fW3,fW2,fW1,fW0, PRODL, PRODH                                C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     Mul2      fA1,fB1                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     Add42     fW3,fW2,fW1,fW0, PRODL, PRODH                                C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     Mul2      fA2,fB0                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     Add42     fW3,fW2,fW1,fW0, PRODL, PRODH                                C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     Mul2      fA1,fB2                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     Add41     fW3,fW2,fW1,fW0, PRODH                                       C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     Mul2      fA2,fB1                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     Add41     fW3,fW2,fW1,fW0, PRODH                                       C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; Start with form 0.f * 0.f                                                     C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; Results can be fW0 = 11xxxxxx -> 01xxxxxx                                     C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; Round and partial Sticky bits in fW3.                                         C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; One bit of signficant in fW3 in the 01xxxxxx case                             C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; Sign is Flg.FLG_SIGN_ABW                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
00317e   ef40     GOTO      0x3280                   goto      __FpPack                                                     C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
003180   f019                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     END                                                                    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;	RCS Header $Id: fxd3232s.asm,v 1.2 2004/10/01 19:13:23 GrosbaJ Exp $           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;	$Revision: 1.2 $                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           	include <P18CXXX.INC>		; general Golden Gate definitions                        C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           	include <CMATH18.INC>		; Math library definitions                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;	RCS Header $Id: cmath18.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                           ;	$Revision: 1.2 $                                                               C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                               LIST                                                                         C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                           ; CMATH18.INC  v1.0  Microchip Technology, Inc. / F.J. Testa                     C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           	include <AARG.INC>		; AARG declarations                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;	RCS Header $Id: aarg.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $               C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN	AARGB0, AARGB1, AARGB2, AARGB3                                           C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                   EXTERN  AARGB4, AARGB5, AARGB6, AARGB7                                   C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN  AEXP                                                                    C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN  REMB3, REMB2, REMB1, REMB0                                              C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           	include <BARG.INC>		; BARG declarations                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;	RCS Header $Id: barg.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $               C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                   EXTERN  BARGB3, BARGB2, BARGB1, BARGB0                                   C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                   EXTERN  BEXP                                                             C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;       32/32 Bit Signed Fixed Point Divide 32/32 -> 32.32                       C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;       Input:  32 bit fixed point dividend in AARGB0, AARGB1, AARGB2            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;               32 bit fixed point divisor in BARGB0, BARGB1                     C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;       Use:    CALL    FXD3232S                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;       Output: 32 bit fixed point quotient in AARGB0, AARGB1, AARGB2            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;               32 bit fixed point remainder in REMB0, REMB1                     C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;       Result: AARG, REM  <--  AARG / BARG                                      C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;	Testing from 100000 trials:                                                    C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;		min	max	mean                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;	Timing:	32	410	127.22	clks                                                     C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;       PM: 50             DM: 12                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;---------------------------------------------------------------------------------------------- C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           PROG	CODE                                                                        C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           		EXTERN		FXD3232U                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           FXD3232S                                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           		GLOBAL		FXD3232S                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003182   6a3d     CLRF      0x3d,0x0       		CLRF		SIGN		; clear sign                                                       C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003184   6ae8     CLRF      0xe8,0x0       		CLRF		WREG                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003186   ae3b     BTFSS     0x3b,0x7,0x0   		BTFSS		BARGB0,MSB                                                              C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003188   efce     GOTO      0x319c         		GOTO 		DA3232S                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
00318a   f018                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
00318c   6c38     NEGF      0x38,0x0       		NEGF 		BARGB3		; if BARG<0, negate and toggle sign                             C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
00318e   1e39     COMF      0x39,0x1,0x0   		COMF 		BARGB2,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003190   1e3a     COMF      0x3a,0x1,0x0   		COMF 		BARGB1,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003192   1e3b     COMF      0x3b,0x1,0x0   		COMF 		BARGB0,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003194   2239     ADDWFC    0x39,0x1,0x0   		ADDWFC		BARGB2,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003196   223a     ADDWFC    0x3a,0x1,0x0   		ADDWFC		BARGB1,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003198   223b     ADDWFC    0x3b,0x1,0x0   		ADDWFC		BARGB0,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
00319a   1e3d     COMF      0x3d,0x1,0x0   		COMF		SIGN,F                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           DA3232S                                                                          C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
00319c   ae36     BTFSS     0x36,0x7,0x0   		BTFSS       AARGB0,MSB                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
00319e   efd9     GOTO      0x31b2         		GOTO        D3232S                                                             C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0031a0   f018                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0031a2   6c33     NEGF      0x33,0x0       		NEGF        AARGB3		; if AARG<0, negate and toggle sign                        C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0031a4   1e34     COMF      0x34,0x1,0x0   		COMF        AARGB2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0031a6   1e35     COMF      0x35,0x1,0x0   		COMF        AARGB1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0031a8   1e36     COMF      0x36,0x1,0x0   		COMF        AARGB0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0031aa   2234     ADDWFC    0x34,0x1,0x0   		ADDWFC      AARGB2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0031ac   2235     ADDWFC    0x35,0x1,0x0   		ADDWFC      AARGB1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0031ae   2236     ADDWFC    0x36,0x1,0x0   		ADDWFC      AARGB0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0031b0   1e3d     COMF      0x3d,0x1,0x0   		COMF		SIGN,F                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           D3232S                                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0031b2   ec9e     CALL      0x553c,0x0     		CALL		FXD3232U                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0031b4   f02a                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0031b6   be36     BTFSC     0x36,0x7,0x0   		BTFSC		AARGB0,MSB	; test for exception                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0031b8   eff0     GOTO      0x31e0         		GOTO		D3232SX                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0031ba   f018                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           D3232SOK                                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0031bc   ae3d     BTFSS     0x3d,0x7,0x0   		BTFSS       SIGN,MSB                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0031be   0c00     RETLW     0x0                    RETLW       0x00                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           D3232SNEG                                                                        C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0031c0   6c33     NEGF      0x33,0x0       		NEGF  		AARGB3		; negate if result negative                                    C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0031c2   1e34     COMF      0x34,0x1,0x0   		COMF  		AARGB2,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0031c4   1e35     COMF      0x35,0x1,0x0   		COMF  		AARGB1,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0031c6   1e36     COMF      0x36,0x1,0x0   		COMF  		AARGB0,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0031c8   6ae8     CLRF      0xe8,0x0       		CLRF  		WREG                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0031ca   2234     ADDWFC    0x34,0x1,0x0   		ADDWFC		AARGB2,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0031cc   2235     ADDWFC    0x35,0x1,0x0   		ADDWFC		AARGB1,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0031ce   2236     ADDWFC    0x36,0x1,0x0   		ADDWFC		AARGB0,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0031d0   6c2f     NEGF      0x2f,0x0       		NEGF  		REMB3                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0031d2   1e30     COMF      0x30,0x1,0x0   		COMF  		REMB2,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0031d4   1e31     COMF      0x31,0x1,0x0   		COMF  		REMB1,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0031d6   1e32     COMF      0x32,0x1,0x0   		COMF  		REMB0,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0031d8   2230     ADDWFC    0x30,0x1,0x0   		ADDWFC		REMB2,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0031da   2231     ADDWFC    0x31,0x1,0x0   		ADDWFC		REMB1,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0031dc   2232     ADDWFC    0x32,0x1,0x0   		ADDWFC		REMB0,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0031de   0c00     RETLW     0x0            		RETLW 		0x00                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           D3232SX                                                                          C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0031e0   be3d     BTFSC     0x3d,0x7,0x0   		BTFSC		SIGN,MSB                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0031e2   efe0     GOTO      0x31c0         		GOTO		D3232SNEG                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0031e4   f018                                                                                                               
0031e6   883e     BSF       0x3e,0x4,0x0   		BSF			FPFLAGS,NAN	; NAN exception if AARG=0x800000                             C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
0031e8   0cff     RETLW     0xff           		RETLW		0xFF		; with positive sign                                              C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           		END                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           /*** Unsigned Integer Division: 32-bit by 32-bit                                 C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                            ***                                                                             C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                            *** Optimized: Dec. 21, 2000                                                    C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                            ***        by: Daniel R. Madill, Quanser Consulting Inc.                        C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                            ***       for: Saved (for the worst case) at least 8*32 = 256 instruction cycles C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                            ***            over the code supplied with MCC18 v1.00.12                       C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                            ***/                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           void  FXD3232U(void/* ulong aarg, ulong barg */)                                 C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           {                                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                             // use INDF1 for the counter...                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                               _asm                                                                         C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                               // REM = 0                                                                   C:\mcc18\src\TRADIT~1\math\fxd3232u.c
00553c   6a32     CLRF      0x32,0x0           clrf REMB0, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
00553e   6a31     CLRF      0x31,0x0           clrf REMB1, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005540   6a30     CLRF      0x30,0x0           clrf REMB2, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005542   6a2f     CLRF      0x2f,0x0           clrf REMB3, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                               // INDF1 = 32                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005544   0e20     MOVLW     0x20               movlw 32                                                                     C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005546   6ee7     MOVWF     0xe7,0x0           movwf INDF1, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                               // Clear the carry                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005548   90d8     BCF       0xd8,0x0,0x0       bcf STATUS, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           loop:                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           	//AARG32 <<= 1; The carry is always clear at the top of the loop.               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
00554a   3633     RLCF      0x33,0x1,0x0   	rlcf AARGB3, 1, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
00554c   3634     RLCF      0x34,0x1,0x0   	rlcf AARGB2, 1, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
00554e   3635     RLCF      0x35,0x1,0x0   	rlcf AARGB1, 1, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005550   3636     RLCF      0x36,0x1,0x0   	rlcf AARGB0, 1, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           	//REM32 = (REM32 << 1) | (AARG32 >> 32)                                         C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005552   362f     RLCF      0x2f,0x1,0x0   	rlcf REMB3, 1, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005554   3630     RLCF      0x30,0x1,0x0   	rlcf REMB2, 1, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005556   3631     RLCF      0x31,0x1,0x0   	rlcf REMB1, 1, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005558   3632     RLCF      0x32,0x1,0x0   	rlcf REMB0, 1, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           	                                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           	//if (PROD >= BARG32)                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
00555a   5038     MOVF      0x38,0x0,0x0   	movf BARGB3, 0, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
00555c   5c2f     SUBWF     0x2f,0x0,0x0   	subwf REMB3, 0, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
00555e   5039     MOVF      0x39,0x0,0x0   	movf BARGB2, 0, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005560   5830     SUBWFB    0x30,0x0,0x0   	subwfb REMB2, 0, 0                                                              C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005562   503a     MOVF      0x3a,0x0,0x0   	movf BARGB1, 0, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005564   5831     SUBWFB    0x31,0x0,0x0   	subwfb REMB1, 0, 0                                                              C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005566   503b     MOVF      0x3b,0x0,0x0   	movf BARGB0, 0, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005568   5832     SUBWFB    0x32,0x0,0x0   	subwfb REMB0, 0, 0                                                              C:\mcc18\src\TRADIT~1\math\fxd3232u.c
00556a   e309     BNC       0x557e         	bnc _false                                                                      C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                               //{                                                                          C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           	    //REM32-= BARG32;                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
00556c   5038     MOVF      0x38,0x0,0x0   	    movf BARGB3, 0, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
00556e   5e2f     SUBWF     0x2f,0x1,0x0   	    subwf REMB3, 1, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005570   5039     MOVF      0x39,0x0,0x0   	    movf BARGB2, 0, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005572   5a30     SUBWFB    0x30,0x1,0x0   	    subwfb REMB2, 1, 0                                                          C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005574   503a     MOVF      0x3a,0x0,0x0   	    movf BARGB1, 0, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005576   5a31     SUBWFB    0x31,0x1,0x0   	    subwfb REMB1, 1, 0                                                          C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005578   503b     MOVF      0x3b,0x0,0x0   	    movf BARGB0, 0, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
00557a   5a32     SUBWFB    0x32,0x1,0x0   	    subwfb REMB0, 1, 0                                                          C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           	    //++AARG32; Since AARG32 was shift to the left above, we only need to set   C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                   //          the lowest bit. Use incf so that the carry flag will also be cleared. C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                   //          Thus, the carry will always be clear at the top of the loop. C:\mcc18\src\TRADIT~1\math\fxd3232u.c
00557c   2a33     INCF      0x33,0x1,0x0   	    incf AARGB3, 1, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                               //}                                                                          C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           _false:                                                                          C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
00557e   2ee7     DECFSZ    0xe7,0x1,0x0       decfsz INDF1, 1, 0    // does not affect the carry bit                       C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005580   d7e4     BRA       0x554a             bra loop                                                                     C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                             /* result in AARG already... */                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                             _endasm                                                                        C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005582   0012     RETURN    0x0            }                                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           /* a signed multiply is only different from an unsigned multiply                 C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                            * if the upper bytes of the result matter, which for us they                    C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                            * don't.                                                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                            */                                                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                           #define PRODH	(PRODL + 1)                                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                           extern near unsigned char AARGB3, BARGB3;                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                           extern near unsigned char AARGB7;                                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                           void FXM3232 (void)                                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                           {                                                                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                             _asm                                                                           C:\mcc18\src\TRADIT~1\math\fxm3232.c
005334   5033     MOVF      0x33,0x0,0x0       movf AARGB3, 0, 0                                                            C:\mcc18\src\TRADIT~1\math\fxm3232.c
005336   0238     MULWF     0x38,0x0           mulwf BARGB3, 0                                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // low byte of both operands, so result adds into the low order              C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // result bytes                                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
005338   cff3     MOVFF     0xff3,0x2f         movff PRODL, AARGB7                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
00533a   f02f                                                                                                               
00533c   cff4     MOVFF     0xff4,0x30         movff PRODH, AARGB7 + 1                                                      C:\mcc18\src\TRADIT~1\math\fxm3232.c
00533e   f030                                                                                                               
                                               // W still contains AARGB3                                                   C:\mcc18\src\TRADIT~1\math\fxm3232.c
005340   0239     MULWF     0x39,0x0           mulwf BARGB3 + 1, 0                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // BARGB3[1], so result adds into AARGB7[1,2]                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
005342   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
005344   2630     ADDWF     0x30,0x1,0x0       addwf AARGB7 + 1, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
005346   0e00     MOVLW     0x0                movlw 0                                                                      C:\mcc18\src\TRADIT~1\math\fxm3232.c
005348   20f4     ADDWFC    0xf4,0x0,0x0       addwfc PRODH, 0, 0                                                           C:\mcc18\src\TRADIT~1\math\fxm3232.c
00534a   6e31     MOVWF     0x31,0x0           movwf AARGB7 + 2, 0                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // reload AARGB3 to continue                                                 C:\mcc18\src\TRADIT~1\math\fxm3232.c
00534c   5033     MOVF      0x33,0x0,0x0       movf AARGB3, 0, 0                                                            C:\mcc18\src\TRADIT~1\math\fxm3232.c
00534e   023a     MULWF     0x3a,0x0           mulwf BARGB3 + 2, 0                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // BARGB3[2], so result adds into AARGB7[2,3]                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
005350   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
005352   2631     ADDWF     0x31,0x1,0x0       addwf AARGB7 + 2, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
005354   0e00     MOVLW     0x0                movlw 0                                                                      C:\mcc18\src\TRADIT~1\math\fxm3232.c
005356   20f4     ADDWFC    0xf4,0x0,0x0       addwfc PRODH, 0, 0                                                           C:\mcc18\src\TRADIT~1\math\fxm3232.c
005358   6e32     MOVWF     0x32,0x0           movwf AARGB7 + 3, 0                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // reload AARGB3 to continue                                                 C:\mcc18\src\TRADIT~1\math\fxm3232.c
00535a   5033     MOVF      0x33,0x0,0x0       movf AARGB3, 0, 0                                                            C:\mcc18\src\TRADIT~1\math\fxm3232.c
00535c   023b     MULWF     0x3b,0x0           mulwf BARGB3 + 3, 0                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // BARGB3[3], so result adds into AARGB7[3].                                 C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // we don't care about result bytes above AARGB7[3], ignore prodh here.      C:\mcc18\src\TRADIT~1\math\fxm3232.c
00535e   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
005360   2632     ADDWF     0x32,0x1,0x0       addwf AARGB7 + 3, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // that's the end of all terms involving AARGB3[0].                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // load AARGB3[1] to continue                                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
005362   5034     MOVF      0x34,0x0,0x0       movf AARGB3 + 1, 0, 0                                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
005364   0238     MULWF     0x38,0x0           mulwf BARGB3, 0                                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // AARGB3[1], so result adds into AARGB7[1,2]                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
005366   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
005368   2630     ADDWF     0x30,0x1,0x0       addwf AARGB7 + 1, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
00536a   50f4     MOVF      0xf4,0x0,0x0       movf PRODH, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
00536c   2231     ADDWFC    0x31,0x1,0x0       addwfc AARGB7 + 2, 1, 0                                                      C:\mcc18\src\TRADIT~1\math\fxm3232.c
00536e   0e00     MOVLW     0x0                movlw 0                                                                      C:\mcc18\src\TRADIT~1\math\fxm3232.c
005370   2232     ADDWFC    0x32,0x1,0x0       addwfc AARGB7 + 3, 1, 0                                                      C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // reload AARGB3[1] to continue                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
005372   5034     MOVF      0x34,0x0,0x0       movf AARGB3 + 1, 0, 0                                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
005374   0239     MULWF     0x39,0x0           mulwf BARGB3 + 1, 0                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // AARGB3[1] and BARGB3[1], so result adds into AARGB7[2,3]                  C:\mcc18\src\TRADIT~1\math\fxm3232.c
005376   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
005378   2631     ADDWF     0x31,0x1,0x0       addwf AARGB7 + 2, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
00537a   50f4     MOVF      0xf4,0x0,0x0       movf PRODH, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
00537c   2232     ADDWFC    0x32,0x1,0x0       addwfc AARGB7 + 3, 1, 0                                                      C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // reload AARGB3[1] to continue                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
00537e   5034     MOVF      0x34,0x0,0x0       movf AARGB3 + 1, 0, 0                                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
005380   023a     MULWF     0x3a,0x0           mulwf BARGB3 + 2, 0                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // AARGB3[1] and BARGB3[2], so result adds into AARGB7[3]                    C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // we don't care about result bytes above AARGB7[3], ignore prodh here.      C:\mcc18\src\TRADIT~1\math\fxm3232.c
005382   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
005384   2632     ADDWF     0x32,0x1,0x0       addwf AARGB7 + 3, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // all bytes of the term from the product of AARGB3[1] and BARGB3[3] are     C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // above our 32-bit result, don't even need to bother calculating            C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // that term.                                                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // load AARGB3[2] to continue                                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
005386   5035     MOVF      0x35,0x0,0x0       movf AARGB3 + 2, 0, 0                                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
005388   0238     MULWF     0x38,0x0           mulwf BARGB3, 0                                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // AARGB3[2] and BARGB3[0], so result adds into AARGB7[2,3]                  C:\mcc18\src\TRADIT~1\math\fxm3232.c
00538a   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
00538c   2631     ADDWF     0x31,0x1,0x0       addwf AARGB7 + 2, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
00538e   50f4     MOVF      0xf4,0x0,0x0       movf PRODH, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
005390   2232     ADDWFC    0x32,0x1,0x0       addwfc AARGB7 + 3, 1, 0                                                      C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // reload AARGB3[2] to continue                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
005392   5035     MOVF      0x35,0x0,0x0       movf AARGB3 + 2, 0, 0                                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
005394   0239     MULWF     0x39,0x0           mulwf BARGB3 + 1, 0                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // AARGB3[2] and BARGB3[1], so result adds into AARGB7[3]                    C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // we don't care about result bytes above AARGB7[3], ignore prodh here.      C:\mcc18\src\TRADIT~1\math\fxm3232.c
005396   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
005398   2632     ADDWF     0x32,0x1,0x0       addwf AARGB7 + 3, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // all bytes of the termsfrom the products of AARGB3[2] and BARGB3[2,3] are  C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // above our 32-bit result, don't even need to bother calculating            C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // those terms.                                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // load AARGB3[3] to continue                                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
00539a   5036     MOVF      0x36,0x0,0x0       movf AARGB3 + 3, 0, 0                                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
00539c   0238     MULWF     0x38,0x0           mulwf BARGB3, 0                                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // AARGB3[3] and BARGB3[0], so result adds into AARGB7[3]                    C:\mcc18\src\TRADIT~1\math\fxm3232.c
00539e   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
0053a0   2632     ADDWF     0x32,0x1,0x0       addwf AARGB7 + 3, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               _endasm;                                                                     C:\mcc18\src\TRADIT~1\math\fxm3232.c
0053a2   0012     RETURN    0x0            }                                                                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                           #include <P18CXXX.INC>           ; general Golden Gate definitions               C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                           #include "fpmacros.inc"                                                          C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ; Macros, constants, defines and variable externs used by float routines.        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;        radix dec                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Uses traditional global names                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN FPFLAGS                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB7                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB6                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB5                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB4                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fFlg  FPFLAGS                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA3    AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA2    AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA1    AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA0    AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fAexp  AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB3    BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB2    BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB1    BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB0    BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fBexp  BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT1     TEMPB3                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT0     TEMPB2                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW3     TEMPB1                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW2     TEMPB0                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW1     AARGB7                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW0     AARGB6                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexp   AARGB5                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexpHi AARGB4                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA0 AARGB0   ;msb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA1 AARGB1                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA2 AARGB2                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA3 AARGB3   ;lsb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_BIAS        equ      127    ; exponent bias                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_SMIN        equ     -149    ; min unbiased subnormal exponent                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMIN        equ     -126    ; min unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMAX        equ      127    ; max unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Flags for both A and B arguments                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_A    0  ; A: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_A     1  ; A: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_A    2  ; A: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_NaN_AorB  3  ; A or B is a NaN  (A or B)                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_B    4  ; B: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_B     5  ; B: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_B    6  ; B: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_ABW  7  ; ABW: Sign (A xor B) or W                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Exchange macro Var0, Var1                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var0,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movff   Var1,Var0                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movwf   Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Clear4 macro Var0, Var1, Var2, Var3                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var2                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var3                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Logical shift                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4 macro Var0,Var1,Var2,Var3                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bcf     STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR2C macro Var0,Var1                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00322e   3236     RRCF      0x36,0x1,0x0           rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003230   3235     RRCF      0x35,0x1,0x0           rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C invalid                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   infsnz  Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Decrement 2 bytes. WREG unchanged.                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Dec2 macro Var0, Var1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   decf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   decf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00323a   6c35     NEGF      0x35,0x0               negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00323c   1e36     COMF      0x36,0x1,0x0           comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00323e   6ae8     CLRF      0xe8,0x0               clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003240   2236     ADDWFC    0x36,0x1,0x0           addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg5 macro Var0,Var1,Var2,Var3,Var4                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add32 macro AVar0,AVar1,AVar2, BVar0,BVar1                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add41 macro AVar0,AVar1,AVar2,AVar3, BVar0                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add42 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub2 macro AVar0,AVar1, BVar0,BVar1                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub3 macro AVar0,AVar1,AVar2, BVar0,BVar1,BVar2                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; (PRODL,PRODH) = AVar*Bvar                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Mul2 macro AVar,BVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   mulwf   AVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== R E L  B R A N C H E S ===================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit set                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braSet macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0031fa   b43e     BTFSC     0x3e,0x2,0x0           btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003216   b03e     BTFSC     0x3e,0x0,0x0                                                                                    
0031fc   d005     BRA       0x3208                 bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003218   d7fb     BRA       0x3210                                                                                          
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit clear                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braClr macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0031f6   a23e     BTFSS     0x3e,0x1,0x0           btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003236   a43e     BTFSS     0x3e,0x2,0x0                                                                                    
003242   ae36     BTFSS     0x36,0x7,0x0                                                                                    
0031f8   d00e     BRA       0x3216                 bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003238   d006     BRA       0x3246                                                                                          
003244   d7e5     BRA       0x3210                                                                                          
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqZ macro Var,jZero                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jZero                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneZ macro Var,jNotZero                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jNotZero                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003226   0e8e     MOVLW     0x8e                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003228   5c37     SUBWF     0x37,0x0,0x0           subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00322a   e005     BZ        0x3236                 bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var <= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003220   0e7e     MOVLW     0x7e                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003222   6437     CPFSGT    0x37,0x0               cpfsgt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003224   d7f5     BRA       0x3210                 bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var >= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00321a   0e8f     MOVLW     0x8f                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00321c   6037     CPFSLT    0x37,0x0               cpfslt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00321e   d7ed     BRA       0x31fa                 bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 == Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 != Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfslt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfsgt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFltF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   STATUS,Z                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bc      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== A B S O L U T E    B R A N C H E S =======================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit set                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoSet macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0031f0   b63e     BTFSC     0x3e,0x3,0x0           btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0031f2   efff     GOTO      0x31fe                 goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0031f4   f018                                                                                                               
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit clear                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoClr macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if F == Lit                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFeqL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F != Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFneL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F >= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFgeL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfslt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F <= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFleL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfsgt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           ; INT3216:                                                                       C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           ; Description:                                                                   C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           ;         Float to two byte integer conversion. Designed for both signed         C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           ;         and unsigned use.                                                      C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           ;         Results for special cases:                                             C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           ;         In                  Out                                                C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           ;         NaN                 0x7FFF                                             C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           ;         +Infinity           0x7FFF                                             C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           ;         -Infinity           0x8000                                             C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           ;         65535->32768        0xFFFF=>0x8000                                     C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           ;         <-32768             0                                                  C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           ; Input:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           ;         IEEE 754 format float fA                                               C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           ; Output:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           ;         INT3216U: Two byte signed integer in iA0,iA1                           C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           ;---------------------------------------------------------------------------------------------- C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                     GLOBAL INT3216                                                         C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                     EXTERN __FpUnPackA                                                     C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           PROG    CODE                                                                     C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           INT3216:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           ;------ Unpack the operand                                                       C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
0031ea   6a3e     CLRF      0x3e,0x0                 clrf      fFlg                                                         C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
0031ec   ec7c     CALL      0x32f8,0x0               call      __FpUnPackA                                                  C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
0031ee   f019                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                     gotoSet   fFlg,FLG_NaN_AorB,jMaxPos                                    C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                     braClr    fFlg,FLG_INF_A,jNotInf                                       C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           jMax:                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                     braSet    fFlg,FLG_SIGN_A,jMaxNeg                                      C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           jMaxPos:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
0031fe   0e7f     MOVLW     0x7f                     movlw     0x7F                                                         C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
003200   6e36     MOVWF     0x36,0x0                 movwf     fA0                                                          C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
003202   0eff     MOVLW     0xff                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
003204   6e35     MOVWF     0x35,0x0                 movwf     fA1                                                          C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
003206   d01f     BRA       0x3246                   bra       jExit                                                        C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           jMaxNeg:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
003208   0e80     MOVLW     0x80                     movlw     0x80                                                         C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
00320a   6e36     MOVWF     0x36,0x0                 movwf     fA0                                                          C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
00320c   6a35     CLRF      0x35,0x0                 clrf      fA1                                                          C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
00320e   d01b     BRA       0x3246                   bra       jExit                                                        C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           jZero:                                                                           C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
003210   6a36     CLRF      0x36,0x0                 clrf      fA0                                                          C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
003212   6a35     CLRF      0x35,0x0                 clrf      fA1                                                          C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
003214   d018     BRA       0x3246                   bra       jExit                                                        C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           jNotInf:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                     braSet    fFlg,FLG_ZERO_A,jZero                                        C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                     braFgeL   fAexp,0x8F,jMax         ;; exponent too large                C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                     braFleL   fAexp,0x7E,jZero        ;; exponent too small                C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           jLoop:                                                                           C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                     braFeqL   fAexp,0x8E,jLoopExit    ;; shift complete                    C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                     ;;braFeqL   fAexp,0x8F,jLoopExit    ;; shift complete                  C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
00322c   90d8     BCF       0xd8,0x0,0x0             bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                     ShiftR2C  fA1, fA0                                                     C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
003232   2a37     INCF      0x37,0x1,0x0             incf      fAexp,F                                                      C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
003234   d7f8     BRA       0x3226                   bra       jLoop                                                        C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           jLoopExit:                                                                       C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                     braClr    fFlg,FLG_SIGN_A,jExit                                        C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                     Neg2      fA1,fA0                                                      C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                     braClr    fA0,7,jZero    ;; too negative for signed & unsigned illegal C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           jExit:                                                                           C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
003246   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                                     END                                                                    C:\MCC18\SRC\TRADIT~1\MATH\castFP16.asm
                                           #include <p18cxxx.h>                                                             C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           #include <usart.h>                                                               C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           #if defined(__18F6525) || defined(__18F6621) || \                                C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                               defined(__18F8525) || defined(__18F8621)                                     C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           #define RC1IE RCIE                                                               C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           #define TX1IE TXIE                                                               C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           #endif                                                                           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           // USART1 Status Structure                                                       C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           extern union USART1 USART1_Status;                                               C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           /********************************************************************            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *    Function Name:  Open1USART                                      *           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *    Return Value:   void                                           *            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *    Parameters:     config: bit definitions to configure USART1     *           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *                    spbrg: baudrate value for register SPBRG1      *            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *    Description:    This routine first resets the USART1 regs       *           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *                    to the POR state. It then configures the       *            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *                    USART1 for interrupts, synch/async, 8/9-bit,    *           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *                    sync slave/master and single/cont. rx.         *            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *    Notes:          The bit definitions for config can be found    *            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *                    in the usart.h file.                           *            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           ********************************************************************/            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
0054d8   cfd9     MOVFF     0xfd9,0xfe6    void Open1USART( unsigned char config, char spbrg)                               C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
0054da   ffe6                                                                                                               
0054dc   cfda     MOVFF     0xfda,0xfe6                                                                                     
0054de   ffe6                                                                                                               
0054e0   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0054e2   ffd9                                                                                                               
0054e4   cfe2     MOVFF     0xfe2,0xfda                                                                                     
0054e6   ffda                                                                                                               
                                           {                                                                                C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
0054e8   6aac     CLRF      0xac,0x0         TXSTA1 = 0;           // Reset USART registers to POR state                    C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
0054ea   6aab     CLRF      0xab,0x0         RCSTA1 = 0;                                                                    C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
0054ec   0efd     MOVLW     0xfd             if(config&0x01)      // Sync or async operation                                C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
0054ee   b0db     BTFSC     0xdb,0x0,0x0                                                                                    
0054f0   88ac     BSF       0xac,0x4,0x0       TXSTA1bits.SYNC = 1;                                                         C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
0054f2   a2db     BTFSS     0xdb,0x1,0x0     if(config&0x02)      // 8- or 9-bit mode                                       C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
0054f4   d002     BRA       0x54fa                                                                                          
                                             {                                                                              C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
0054f6   8cac     BSF       0xac,0x6,0x0       TXSTA1bits.TX9 = 1;                                                          C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
0054f8   8cab     BSF       0xab,0x6,0x0       RCSTA1bits.RX9 = 1;                                                          C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                             }                                                                              C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
0054fa   b4db     BTFSC     0xdb,0x2,0x0     if(config&0x04)      // Master or Slave (sync only)                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
0054fc   8eac     BSF       0xac,0x7,0x0       TXSTA1bits.CSRC = 1;                                                         C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
0054fe   a6db     BTFSS     0xdb,0x3,0x0     if(config&0x08)      // Continuous or single reception                         C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005500   d002     BRA       0x5506                                                                                          
005502   88ab     BSF       0xab,0x4,0x0       RCSTA1bits.CREN = 1;                                                         C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005504   d001     BRA       0x5508           else                                                                           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005506   8aab     BSF       0xab,0x5,0x0       RCSTA1bits.SREN = 1;                                                         C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005508   a8db     BTFSS     0xdb,0x4,0x0     if(config&0x10)      // Baud rate select (asychronous mode only)               C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
00550a   d002     BRA       0x5510                                                                                          
00550c   84ac     BSF       0xac,0x2,0x0       TXSTA1bits.BRGH = 1;                                                         C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
00550e   d001     BRA       0x5512           else                                                                           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005510   94ac     BCF       0xac,0x2,0x0       TXSTA1bits.BRGH = 0;                                                         C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005512   acdb     BTFSS     0xdb,0x6,0x0     if(config&0x40)      // Interrupt on receipt                                   C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005514   d002     BRA       0x551a                                                                                          
005516   8a9d     BSF       0x9d,0x5,0x0       PIE1bits.RC1IE = 1;                                                          C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005518   d001     BRA       0x551c           else                                                                           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
00551a   9a9d     BCF       0x9d,0x5,0x0       PIE1bits.RC1IE = 0;                                                          C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
00551c   aedb     BTFSS     0xdb,0x7,0x0     if(config&0x80)      // Interrupt on transmission                              C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
00551e   d002     BRA       0x5524                                                                                          
005520   889d     BSF       0x9d,0x4,0x0       PIE1bits.TX1IE = 1;                                                          C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005522   d001     BRA       0x5526           else                                                                           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005524   989d     BCF       0x9d,0x4,0x0       PIE1bits.TX1IE = 0;                                                          C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005526   0efc     MOVLW     0xfc             SPBRG1 = spbrg;       // Write baudrate to SPBRG1                              C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005528   50db     MOVF      0xdb,0x0,0x0                                                                                    
00552a   6eaf     MOVWF     0xaf,0x0                                                                                        
00552c   8aac     BSF       0xac,0x5,0x0     TXSTA1bits.TXEN = 1;  // Enable transmitter                                    C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
00552e   8eab     BSF       0xab,0x7,0x0     RCSTA1bits.SPEN = 1;  // Enable receiver                                       C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005530   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005532   cfe5     MOVFF     0xfe5,0xfda                                                                                     
005534   ffda                                                                                                               
005536   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
005538   ffd9                                                                                                               
00553a   0012     RETURN    0x0                                                                                             
                                           /* $Id: adcopen.c,v 1.2 2004/02/10 22:11:33 sealep Exp $ */                      C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #include <p18cxxx.h>                                                             C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #include <adc.h>                                                                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           /********************************************************************            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *    Function Name:  OpenADC                                        *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *    Return Value:   void                                           *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *    Parameters:     config: bit definitions to configure A/D       *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *                    channel: channel selection                     *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *    Description:    This routine first resets the A/D registers    *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *                    to the POR state and then configures the       *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *                    A/D clock, interrupt, justification, vref      *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *                    source, and I/O.  It also sets the channel.    *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *    Notes:          The bit definitions for config and channel     *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *                    can be found in the adc16.h file.              *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           ********************************************************************/            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #if !defined(ADC_INTERFACE_OLD) && \                                             C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               !defined(__18C601)  && !defined(__18C801)  && \                              C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               !defined(__18C658)  && !defined(__18C858)  && \                              C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               !defined(__18F6520) && !defined(__18F6620) && !defined(__18F6720) && \       C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               !defined(__18F8520) && !defined(__18F8620) && !defined(__18F8720)            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
0053a4   cfd9     MOVFF     0xfd9,0xfe6    void OpenADC( unsigned char config,                                              C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
0053a6   ffe6                                                                                                               
0053a8   cfda     MOVFF     0xfda,0xfe6                                                                                     
0053aa   ffe6                                                                                                               
0053ac   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0053ae   ffd9                                                                                                               
0053b0   cfe2     MOVFF     0xfe2,0xfda                                                                                     
0053b2   ffda                                                                                                               
                                                         unsigned char config2,                                             C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                         unsigned char portconfig)                                          C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           {                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               // Reset A/D Registers to POR state                                          C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
0053b4   6ac2     CLRF      0xc2,0x0           ADCON0 = 0;                                                                  C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
0053b6   6ac1     CLRF      0xc1,0x0           ADCON1 = 0;                                                                  C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
0053b8   6ac0     CLRF      0xc0,0x0           ADCON2 = 0;                                                                  C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
0053ba   0efc     MOVLW     0xfc               ADCON0 = (config2 >> 1) & 0b00111100;     // Analog channel selection        C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
0053bc   40db     RRNCF     0xdb,0x0,0x0                                                                                    
0053be   0b7f     ANDLW     0x7f                                                                                            
0053c0   0b3c     ANDLW     0x3c                                                                                            
0053c2   6ec2     MOVWF     0xc2,0x0                                                                                        
0053c4   0efb     MOVLW     0xfb               ADCON1 = portconfig;                      // Port configuration              C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
0053c6   50db     MOVF      0xdb,0x0,0x0                                                                                    
0053c8   6ec1     MOVWF     0xc1,0x0                                                                                        
                                           #if defined(__18F1220) || defined(__18F1320)                                     C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               ADCON0 |= (config2 << 6) & 0b11000000;    // Voltage reference configuration C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #else                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
0053ca   0efc     MOVLW     0xfc               ADCON1 |= (config2 << 4) & 0b00110000;    // Voltage reference configuration C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
0053cc   38db     SWAPF     0xdb,0x0,0x0                                                                                    
0053ce   0bf0     ANDLW     0xf0                                                                                            
0053d0   0b30     ANDLW     0x30                                                                                            
0053d2   12c1     IORWF     0xc1,0x1,0x0                                                                                    
                                           #endif                                                                           C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
0053d4   0efd     MOVLW     0xfd               ADCON2 = config & 0b10000000;             // Result format                   C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
0053d6   50db     MOVF      0xdb,0x0,0x0                                                                                    
0053d8   0b80     ANDLW     0x80                                                                                            
0053da   6ec0     MOVWF     0xc0,0x0                                                                                        
0053dc   0efd     MOVLW     0xfd               ADCON2 |= (config >> 4) & 0b00000111;     // Conversion clock select         C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
0053de   38db     SWAPF     0xdb,0x0,0x0                                                                                    
0053e0   0b0f     ANDLW     0xf                                                                                             
0053e2   0b07     ANDLW     0x7                                                                                             
0053e4   12c0     IORWF     0xc0,0x1,0x0                                                                                    
0053e6   0efd     MOVLW     0xfd               ADCON2 |= (config << 2) & 0b00111000;     // Acquisition time select         C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
0053e8   50db     MOVF      0xdb,0x0,0x0                                                                                    
0053ea   0d04     MULLW     0x4                                                                                             
0053ec   50f3     MOVF      0xf3,0x0,0x0                                                                                    
0053ee   0b38     ANDLW     0x38                                                                                            
0053f0   12c0     IORWF     0xc0,0x1,0x0                                                                                    
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
0053f2   0efc     MOVLW     0xfc               if( config2 & 0b10000000 )   // Test the interrupt on/off                    C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
0053f4   aedb     BTFSS     0xdb,0x7,0x0                                                                                    
0053f6   d003     BRA       0x53fe                                                                                          
                                               {                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
0053f8   9c9e     BCF       0x9e,0x6,0x0         PIR1bits.ADIF = 0;         // Clear the A/D interrupt flag                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
0053fa   8c9d     BSF       0x9d,0x6,0x0         PIE1bits.ADIE = 1;         // Enable the A/D interrupt                     C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
0053fc   8cf2     BSF       0xf2,0x6,0x0         INTCONbits.PEIE = 1;       // Enable peripheral interrupts                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               }                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
0053fe   80c2     BSF       0xc2,0x0,0x0       ADCON0bits.ADON = 1;         // Enable the A/D                               C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005400   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005402   cfe5     MOVFF     0xfe5,0xfda                                                                                     
005404   ffda                                                                                                               
005406   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
005408   ffd9                                                                                                               
00540a   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #else                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           void OpenADC( unsigned char config, unsigned char config2)                       C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           {                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             // Reset A/D Registers to POR state                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON0 = 0;                                                                    C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON1 = 0;                                                                    C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #ifndef ADC_INTERFACE_OLD                                                        C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON2 = 0;                                                                    C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #endif                                                                           C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             // Configure ADCON registers as per config selections                          C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #ifdef ADC_INTERFACE_OLD                                                         C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON1 = config;             // Set the A/D clock source                       C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON0 = (config<<2) & 0xC0; // Set the I/O selection                          C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON0 |= config2 &0x3f;     // Set the channel mask out the interrupt bit.    C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #else // New ADC interface                                                       C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON0 = (config2 >> 1) & 0b00111100;    // Analog channel selection           C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON1 = ((config2 << 4) & 0b00110000) | // Voltage reference configuration    C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                      (config & 0b00001111);          // Port configuration                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON2 = (config & 0b10000000) |         // Result format                      C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                      ((config >> 4) & 0b00000111);   // Conversion clock select            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #endif                                                                           C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             if( config2 & 0b10000000 )   // Test the interrupt on/off                      C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             {                                                                              C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               PIR1bits.ADIF = 0;         // Clear the A/D interrupt flag                   C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               PIE1bits.ADIE = 1;         // Enable the A/D interrupt                       C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               INTCONbits.PEIE = 1;       // Enable peripheral interrupts                   C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             }                                                                              C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON0bits.ADON = 1;         // Enable the A/D                                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           }                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #endif                                                                           C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           /* $Id:  */                                                                      C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                           #include <p18cxxx.h>                                                             C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                           #include <spi.h>                                                                 C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                           /********************************************************************            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                           *   Function Name:  OpenSPI1                                        *            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                           *   Return Value:   void                                            *            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                           *   Parameters:     SSP1 peripheral setup bytes                     *            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                           *   Description:    This function sets up the SSP1 module on a      *            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                           *                   PIC18Cxxx device for use with a Microchip SPI   *            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                           *                   EEPROM device or SPI bus device.                *            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                           ********************************************************************/            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005472   cfd9     MOVFF     0xfd9,0xfe6    void OpenSPI1( unsigned char sync_mode, unsigned char bus_mode, unsigned char smp_phase) C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005474   ffe6                                                                                                               
005476   cfda     MOVFF     0xfda,0xfe6                                                                                     
005478   ffe6                                                                                                               
00547a   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00547c   ffd9                                                                                                               
00547e   cfe2     MOVFF     0xfe2,0xfda                                                                                     
005480   ffda                                                                                                               
                                           {                                                                                C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005482   0e3f     MOVLW     0x3f             SSP1STAT &= 0x3F;               // power on state                              C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005484   16c7     ANDWF     0xc7,0x1,0x0                                                                                    
005486   6ac6     CLRF      0xc6,0x0         SSP1CON1 = 0x00;                // power on state                              C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005488   0efd     MOVLW     0xfd             SSP1CON1 |= sync_mode;          // select serial mode                          C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
00548a   50db     MOVF      0xdb,0x0,0x0                                                                                    
00548c   12c6     IORWF     0xc6,0x1,0x0                                                                                    
00548e   0efb     MOVLW     0xfb             SSP1STAT |= smp_phase;          // select data input sample phase              C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005490   50db     MOVF      0xdb,0x0,0x0                                                                                    
005492   12c7     IORWF     0xc7,0x1,0x0                                                                                    
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005494   0efc     MOVLW     0xfc             switch( bus_mode )                                                             C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005496   50db     MOVF      0xdb,0x0,0x0                                                                                    
005498   0a03     XORLW     0x3                                                                                             
00549a   e009     BZ        0x54ae                                                                                          
00549c   0a01     XORLW     0x1                                                                                             
00549e   e004     BZ        0x54a8                                                                                          
0054a0   0a02     XORLW     0x2                                                                                             
0054a2   e106     BNZ       0x54b0                                                                                          
                                             {                                                                              C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                               case 0:                       // SPI1 bus mode 0,0                           C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
0054a4   8cc7     BSF       0xc7,0x6,0x0         SSP1STATbits.CKE = 1;       // data transmitted on rising edge             C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
0054a6   d004     BRA       0x54b0               break;                                                                     C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                               case 2:                       // SPI1 bus mode 1,0                           C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
0054a8   8cc7     BSF       0xc7,0x6,0x0         SSP1STATbits.CKE = 1;       // data transmitted on falling edge            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
0054aa   88c6     BSF       0xc6,0x4,0x0         SSP1CON1bits.CKP = 1;       // clock idle state high                       C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
0054ac   d001     BRA       0x54b0               break;                                                                     C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                               case 3:                       // SPI1 bus mode 1,1                           C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
0054ae   88c6     BSF       0xc6,0x4,0x0         SSP1CON1bits.CKP = 1;       // clock idle state high                       C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                                 break;                                                                     C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                               default:                      // default SPI1 bus mode 0,1                   C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                                 break;                                                                     C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                             }                                                                              C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
0054b0   0efd     MOVLW     0xfd             switch( sync_mode )                                                            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
0054b2   50db     MOVF      0xdb,0x0,0x0                                                                                    
0054b4   0a05     XORLW     0x5                                                                                             
0054b6   e003     BZ        0x54be                                                                                          
0054b8   0a01     XORLW     0x1                                                                                             
0054ba   e104     BNZ       0x54c4                                                                                          
                                             {                                                                              C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                               case 4:                       // slave mode w /SS enable                     C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
0054bc   8e97     BSF       0x97,0x7,0x0         TRISFbits.TRISF7 = 1;       // define /SS pin as input                     C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                               case 5:                       // slave mode w/o /SS enable                   C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
0054be   8694     BSF       0x94,0x3,0x0         TRISCbits.TRISC3 = 1;       // define clock pin as input                   C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
0054c0   9ec7     BCF       0xc7,0x7,0x0         SSP1STATbits.SMP = 0;       // must be cleared in slave SPI mode           C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
0054c2   d001     BRA       0x54c6               break;                                                                     C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                               default:                      // master mode, define clock pin as output     C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
0054c4   9694     BCF       0x94,0x3,0x0         TRISCbits.TRISC3 = 0;       // define clock pin as output                  C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                                 break;                                                                     C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                             }                                                                              C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
0054c6   9a94     BCF       0x94,0x5,0x0     TRISC &= 0xDF;                  // define SDO as output (master or slave)      C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
0054c8   8894     BSF       0x94,0x4,0x0     TRISC |= 0x10;                  // define SDI as input (master or slave)       C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
0054ca   8ac6     BSF       0xc6,0x5,0x0     SSP1CON1 |= SSPENB;             // enable synchronous serial port              C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
0054cc   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
0054ce   cfe5     MOVFF     0xfe5,0xfda                                                                                     
0054d0   ffda                                                                                                               
0054d2   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0054d4   ffd9                                                                                                               
0054d6   0012     RETURN    0x0                                                                                             
                                           /* $Id: adcread.c,v 1.1 2003/12/09 22:52:09 GrosbaJ Exp $ */                     C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           #include <p18cxxx.h>                                                             C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           #include <adc.h>                                                                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           /********************************************************************            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           *    Function Name:  ReadADC                                        *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           *    Return Value:   int, A/D result                                *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           *    Parameters:     void                                           *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           *    Description:    This routine reads the ADRESL and ADRESH       *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           *                    and returns these as a long.                   *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           ********************************************************************/            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
005584   cfd9     MOVFF     0xfd9,0xfe6    int ReadADC(void)                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
005586   ffe6                                                                                                               
005588   cfda     MOVFF     0xfda,0xfe6                                                                                     
00558a   ffe6                                                                                                               
00558c   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00558e   ffd9                                                                                                               
005590   cfe2     MOVFF     0xfe2,0xfda                                                                                     
005592   ffda                                                                                                               
005594   52e6     MOVF      0xe6,0x1,0x0                                                                                    
005596   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                             union ADCResult i; // A union is used to read the                              C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                                                // A/D result due to issues with                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                                                // handling long variables                                  C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
005598   50c3     MOVF      0xc3,0x0,0x0     i.br[0] = ADRESL;  // Read ADRESL into the lower byte                          C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
00559a   6edf     MOVWF     0xdf,0x0                                                                                        
00559c   0e01     MOVLW     0x1              i.br[1] = ADRESH;  // Read ADRESH into the high byte                           C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
00559e   cfc4     MOVFF     0xfc4,0xfdb                                                                                     
0055a0   ffdb                                                                                                               
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
0055a2   cfde     MOVFF     0xfde,0x0        return (i.lr);     // Return the long variable                                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
0055a4   f000                                                                                                               
0055a6   cfdd     MOVFF     0xfdd,0x1                                                                                       
0055a8   f001                                                                                                               
0055aa   c000     MOVFF     0x0,0xff3                                                                                       
0055ac   fff3                                                                                                               
0055ae   c001     MOVFF     0x1,0xff4                                                                                       
0055b0   fff4                                                                                                               
0055b2   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
0055b4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0055b6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0055b8   cfe5     MOVFF     0xfe5,0xfda                                                                                     
0055ba   ffda                                                                                                               
0055bc   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0055be   ffd9                                                                                                               
0055c0   0012     RETURN    0x0                                                                                             
                                           ;	RCS Header $Id: temparg.asm,v 1.2 2004/10/01 19:13:23 GrosbaJ Exp $            C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           ;       CMATH18 DATA DEFINITION FILE                                             C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           ;   VARIABLE ALLOCATION - Core math library routines                             C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           MATH_DATA      UDATA_ACS                                                         C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           TEMPB3		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           TEMPB2		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           TEMPB1		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           TEMP                                                                             C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           TEMPB0		RES 1       ; temporary storage                                          C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                   GLOBAL  TEMPB3, TEMPB2, TEMPB1, TEMPB0, TEMP                             C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                   END                                                                      C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           #include <P18CXXX.INC>           ; general Golden Gate definitions               C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                           #include "fpmacros.inc"                                                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ; Macros, constants, defines and variable externs used by float routines.        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;        radix dec                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Uses traditional global names                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN FPFLAGS                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB7                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB6                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB5                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB4                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fFlg  FPFLAGS                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA3    AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA2    AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA1    AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA0    AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fAexp  AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB3    BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB2    BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB1    BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB0    BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fBexp  BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT1     TEMPB3                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT0     TEMPB2                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW3     TEMPB1                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW2     TEMPB0                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW1     AARGB7                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW0     AARGB6                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexp   AARGB5                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexpHi AARGB4                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA0 AARGB0   ;msb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA1 AARGB1                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA2 AARGB2                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA3 AARGB3   ;lsb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_BIAS        equ      127    ; exponent bias                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_SMIN        equ     -149    ; min unbiased subnormal exponent                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMIN        equ     -126    ; min unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMAX        equ      127    ; max unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Flags for both A and B arguments                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_A    0  ; A: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_A     1  ; A: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_A    2  ; A: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_NaN_AorB  3  ; A or B is a NaN  (A or B)                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_B    4  ; B: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_B     5  ; B: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_B    6  ; B: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_ABW  7  ; ABW: Sign (A xor B) or W                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Exchange macro Var0, Var1                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var0,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movff   Var1,Var0                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movwf   Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Clear4 macro Var0, Var1, Var2, Var3                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var2                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var3                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00329a   3641     RLCF      0x41,0x1,0x0           rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00329c   3642     RLCF      0x42,0x1,0x0           rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00329e   362f     RLCF      0x2f,0x1,0x0           rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0032a0   3630     RLCF      0x30,0x1,0x0           rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Logical shift                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4 macro Var0,Var1,Var2,Var3                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bcf     STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR2C macro Var0,Var1                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0032cc   3230     RRCF      0x30,0x1,0x0           rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0032ce   322f     RRCF      0x2f,0x1,0x0           rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0032d0   3242     RRCF      0x42,0x1,0x0           rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C invalid                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   infsnz  Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0032c0   2a42     INCF      0x42,0x1,0x0           incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0032c2   6ae8     CLRF      0xe8,0x0               clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0032c4   222f     ADDWFC    0x2f,0x1,0x0           addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0032c6   2230     ADDWFC    0x30,0x1,0x0           addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Decrement 2 bytes. WREG unchanged.                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Dec2 macro Var0, Var1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0032a2   0631     DECF      0x31,0x1,0x0           decf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0032a4   a0d8     BTFSS     0xd8,0x0,0x0           btfss   STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0032a6   0632     DECF      0x32,0x1,0x0           decf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg5 macro Var0,Var1,Var2,Var3,Var4                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add32 macro AVar0,AVar1,AVar2, BVar0,BVar1                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add41 macro AVar0,AVar1,AVar2,AVar3, BVar0                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add42 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub2 macro AVar0,AVar1, BVar0,BVar1                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub3 macro AVar0,AVar1,AVar2, BVar0,BVar1,BVar2                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; (PRODL,PRODH) = AVar*Bvar                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Mul2 macro AVar,BVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   mulwf   AVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== R E L  B R A N C H E S ===================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit set                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braSet macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00328a   be32     BTFSC     0x32,0x7,0x0           btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00328e   be30     BTFSC     0x30,0x7,0x0                                                                                    
00328c   d7f0     BRA       0x326e                 bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003290   d00c     BRA       0x32aa                                                                                          
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit clear                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braClr macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00326e   ae3e     BTFSS     0x3e,0x7,0x0           btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0032b2   ae41     BTFSS     0x41,0x7,0x0                                                                                    
0032bc   a042     BTFSS     0x42,0x0,0x0                                                                                    
003270   d004     BRA       0x327a                 bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0032b4   d011     BRA       0x32d8                                                                                          
0032be   d00c     BRA       0x32d8                                                                                          
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqZ macro Var,jZero                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jZero                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneZ macro Var,jNotZero                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jNotZero                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var <= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfsgt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var >= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfslt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 == Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 != Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfslt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfsgt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFltF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   STATUS,Z                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bc      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== A B S O L U T E    B R A N C H E S =======================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit set                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoSet macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit clear                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoClr macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if F == Lit                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFeqL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F != Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFneL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F >= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFgeL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfslt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F <= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFleL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfsgt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     GLOBAL __FpPack                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     GLOBAL __FpReturnW                                                     C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     GLOBAL __FpReturnNaN                                                   C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     GLOBAL __FpReturnPosZero,__FpReturnNegZero,__FpReturnSignZero          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     GLOBAL __FpReturnPosInf, __FpReturnNegInf, __FpReturnSignInf           C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     GLOBAL __FpExit                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           PROG    CODE                                                                     C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;***********************************************************************         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;************ C O M M O M    E N T R I E S *****************************         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;***********************************************************************         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           __FpReturnNaN:                                                                   C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; return NaN                                                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003248   0e7f     MOVLW     0x7f                     movlw     0x7F                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
00324a   6e37     MOVWF     0x37,0x0                 movwf     fAexp                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
00324c   0eff     MOVLW     0xff                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
00324e   6e36     MOVWF     0x36,0x0                 movwf     fA0                                                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003250   6e35     MOVWF     0x35,0x0                 movwf     fA1                                                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003252   6e34     MOVWF     0x34,0x0                 movwf     fA2                                                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           __FpExit:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003254   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           __FpReturnSignInf:                                                               C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; return infinite with sign in FLG_SIGN_ABW                           C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003256   0e7f     MOVLW     0x7f                     movlw     0x7F                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003258   be3e     BTFSC     0x3e,0x7,0x0             btfsc     fFlg,FLG_SIGN_ABW                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           __FpReturnNegInf:            ;; return negative infinite                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
00325a   0eff     MOVLW     0xff                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
00325c   6e37     MOVWF     0x37,0x0                 movwf     fAexp                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
00325e   d002     BRA       0x3264                   bra       jReturnPosInf0                                               C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           __FpReturnPosInf:                                                                C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; return positive infinite                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003260   0e7f     MOVLW     0x7f                     movlw     0x7F                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003262   6e37     MOVWF     0x37,0x0                 movwf     fAexp                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           jReturnPosInf0:                                                                  C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003264   0e80     MOVLW     0x80                     movlw     0x80                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003266   6e36     MOVWF     0x36,0x0                 movwf     fA0                                                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           jZero1and2:                                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003268   6a35     CLRF      0x35,0x0                 clrf      fA1                                                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
00326a   6a34     CLRF      0x34,0x0                 clrf      fA2                                                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
00326c   d7f3     BRA       0x3254                   bra       __FpExit                                                     C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           __FpReturnSignZero:                                                              C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; return Zero with sign in FLG_SIGN_ABW                               C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     braClr    fFlg,FLG_SIGN_ABW,__FpReturnPosZero                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           __FpReturnNegZero:                                                               C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003272   0e80     MOVLW     0x80                     movlw     0x80                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003274   6e37     MOVWF     0x37,0x0                 movwf     fAexp                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003276   6a36     CLRF      0x36,0x0                 clrf      fA0                                                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003278   d7f7     BRA       0x3268                   bra       jZero1and2                                                   C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           __FpReturnPosZero:                                                               C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; return zero                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
00327a   6a37     CLRF      0x37,0x0                 clrf      fAexp                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
00327c   6a36     CLRF      0x36,0x0                 clrf      fA0                                                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
00327e   d7f4     BRA       0x3268                   bra       jZero1and2                                                   C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;***********************************************************************         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;***********************************************************************         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;-----------------------------------------------------------------------;        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ; __Fppack:                                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ; Description:                                                                   C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;       Rounds and packs a float                                                 C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ; Input:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;       Assumes significant, round bit and sticky bits in fW0 -> fW3.            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;       Biased exponent in fWexp,fWexpHi.                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;       Exponent must be adjusted for significant left-justified in fW0.         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;       Sign in FLAG_SIGN_ABW.                                                   C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ; Output:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;       Packed, signed float in fAexp...fA2                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ; Notes:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;---------------------------------------------------------------------------------------------- C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           __FpPack                                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003280   5030     MOVF      0x30,0x0,0x0             movf      fW0,W                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003282   102f     IORWF     0x2f,0x0,0x0             iorwf     fW1,W                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003284   1042     IORWF     0x42,0x0,0x0             iorwf     fW2,W                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003286   1041     IORWF     0x41,0x0,0x0             iorwf     fW3,W                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003288   e0f8     BZ        0x327a                   bz        __FpReturnPosZero             ;; Pure zero                   C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     braSet    fWexpHi,7,__FpReturnSignZero  ;; Subnormal. Treat as signed zero C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           jPkLoop:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     braSet    fW0,7,jPkShiftDone            ;; Significant left-justified  C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; if( fWexp == 0 && fWexpHi == 0 )goto __FpReturnZero;                C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003292   5031     MOVF      0x31,0x0,0x0             movf      fWexp,W                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003294   1032     IORWF     0x32,0x0,0x0             iorwf     fWexpHi,W                                                    C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003296   e0eb     BZ        0x326e                   bz        __FpReturnSignZero            ;; Subnormal                   C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003298   90d8     BCF       0xd8,0x0,0x0             bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ShiftL4C  fW3,fW2,fW1,fW0                                              C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     Dec2      fWexp,fWexpHi                 ;; corrected exponent          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
0032a8   d7f2     BRA       0x328e                   bra       jPkLoop                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           jPkShiftDone:                                                                    C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; if( fWexpHi ) goto __FpReturnSignInf                                C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
0032aa   5032     MOVF      0x32,0x0,0x0             movf      fWexpHi,W                                                    C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
0032ac   e1d4     BNZ       0x3256                   bnz       __FpReturnSignInf                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; if( fWexp == 0xFF ) goto __FpReturnSignInf                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
0032ae   2831     INCF      0x31,0x0,0x0             incf      fWexp,W                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
0032b0   e0d2     BZ        0x3256                   bz        __FpReturnSignInf                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;;------ Round up if (round && (sticky || (significand & 1)))          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; if( !(fW3 & 0x80)) goto jPkRoundDone;                               C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     braClr    fW3,7,jPkRoundDone  ;; No rounding required ...              C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; if(  fW3 & 0x7F)   goto jPkRoundIt;                                 C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
0032b6   0e7f     MOVLW     0x7f                     movlw     0x7F                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
0032b8   1441     ANDWF     0x41,0x0,0x0             andwf     fW3,W                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
0032ba   e102     BNZ       0x32c0                   bnz       jPkRoundIt          ;; Rounding required ...                 C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; if( !(fW2 & 0x01)) goto jPkRoundDone;                               C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     braClr    fW2,0,jPkRoundDone  ;; No rounding required ...              C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           jPkRoundIt:                                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; ---------- Do Rounding ----------------                             C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     Inc3      fW2,fW1,fW0         ;; Significand++                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
0032c8   e307     BNC       0x32d8                   bnc       jPkRoundDone        ;; No need to adjust exponent            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; Renormalize                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
0032ca   80d8     BSF       0xd8,0x0,0x0             bsf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ShiftR3C  fW2,fW1,fW0                                                  C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
0032d2   2a31     INCF      0x31,0x1,0x0             incf      fWexp,F                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; if( fWexp == 0xFF ) goto __FpReturnSignInf                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
0032d4   2831     INCF      0x31,0x0,0x0             incf      fWexp,W                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
0032d6   e0bf     BZ        0x3256                   bz        __FpReturnSignInf                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           jPkRoundDone:                                                                    C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           __FpReturnW:                                                                     C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
0032d8   5031     MOVF      0x31,0x0,0x0             movf      fWexp,W                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
0032da   e0c9     BZ        0x326e                   bz        __FpReturnSignZero            ;; Subnormal                   C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
0032dc   c042     MOVFF     0x42,0x34                movff     fW2,fA2                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
0032de   f034                                                                                                               
0032e0   c02f     MOVFF     0x2f,0x35                movff     fW1,fA1                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
0032e2   f035                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
0032e4   3430     RLCF      0x30,0x0,0x0             rlcf      fW0,W                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
0032e6   6e36     MOVWF     0x36,0x0                 movwf     fA0                                                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
0032e8   3031     RRCF      0x31,0x0,0x0             rrcf      fWexp,W                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
0032ea   6e37     MOVWF     0x37,0x0                 movwf     fAexp                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
0032ec   3236     RRCF      0x36,0x1,0x0             rrcf      fA0,F                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
0032ee   9e37     BCF       0x37,0x7,0x0             bcf       fAexp,7                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
0032f0   be3e     BTFSC     0x3e,0x7,0x0             btfsc     fFlg,FLG_SIGN_ABW                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
0032f2   8e37     BSF       0x37,0x7,0x0             bsf       fAexp,7                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
0032f4   ef2a     GOTO      0x3254                   goto      __FpExit                                                     C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
0032f6   f019                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     END                                                                    C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           #include <P18CXXX.INC>           ; general Golden Gate definitions               C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                           #include "fpmacros.inc"                                                          C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ; Macros, constants, defines and variable externs used by float routines.        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;        radix dec                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Uses traditional global names                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN FPFLAGS                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB7                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB6                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB5                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB4                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fFlg  FPFLAGS                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA3    AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA2    AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA1    AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA0    AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fAexp  AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB3    BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB2    BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB1    BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB0    BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fBexp  BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT1     TEMPB3                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT0     TEMPB2                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW3     TEMPB1                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW2     TEMPB0                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW1     AARGB7                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW0     AARGB6                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexp   AARGB5                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexpHi AARGB4                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA0 AARGB0   ;msb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA1 AARGB1                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA2 AARGB2                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA3 AARGB3   ;lsb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_BIAS        equ      127    ; exponent bias                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_SMIN        equ     -149    ; min unbiased subnormal exponent                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMIN        equ     -126    ; min unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMAX        equ      127    ; max unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Flags for both A and B arguments                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_A    0  ; A: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_A     1  ; A: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_A    2  ; A: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_NaN_AorB  3  ; A or B is a NaN  (A or B)                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_B    4  ; B: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_B     5  ; B: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_B    6  ; B: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_ABW  7  ; ABW: Sign (A xor B) or W                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Exchange macro Var0, Var1                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var0,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movff   Var1,Var0                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movwf   Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Clear4 macro Var0, Var1, Var2, Var3                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var2                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var3                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Logical shift                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4 macro Var0,Var1,Var2,Var3                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bcf     STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR2C macro Var0,Var1                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C invalid                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   infsnz  Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Decrement 2 bytes. WREG unchanged.                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Dec2 macro Var0, Var1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   decf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   decf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg5 macro Var0,Var1,Var2,Var3,Var4                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add32 macro AVar0,AVar1,AVar2, BVar0,BVar1                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add41 macro AVar0,AVar1,AVar2,AVar3, BVar0                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add42 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub2 macro AVar0,AVar1, BVar0,BVar1                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub3 macro AVar0,AVar1,AVar2, BVar0,BVar1,BVar2                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; (PRODL,PRODH) = AVar*Bvar                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Mul2 macro AVar,BVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   mulwf   AVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== R E L  B R A N C H E S ===================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit set                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braSet macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit clear                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braClr macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqZ macro Var,jZero                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jZero                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneZ macro Var,jNotZero                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jNotZero                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var <= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfsgt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var >= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfslt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 == Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 != Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfslt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfsgt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFltF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   STATUS,Z                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bc      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== A B S O L U T E    B R A N C H E S =======================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit set                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoSet macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit clear                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoClr macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if F == Lit                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFeqL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F != Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFneL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F >= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFgeL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfslt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F <= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFleL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfsgt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ; __FpUnPackA                                                                    C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ; __FpUnPackB                                                                    C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ; Description:                                                                   C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;         Unpack floats fA and fB                                                C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ; Input:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;         IEEE 754 format float in fAexp...fA2.                                  C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;         Same for fBexp...fB2.                                                  C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;         Requires flags to be zero on entry.                                    C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ; Output:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;         Unpacks exponent into fAexp and Significant into fA0,fA1,fA2.          C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;         Sets .0f => .1f, i.e. makes msb of Significant explict                 C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;         Sets Zero, Infinite and NaN flags.                                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ; On entry: IEEE 754 format                   Address increasing down            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;       f2     D7  D6  D5  D4  D3  D2  D1  D0              |                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;       f1     D15 D14 D13 D12 D11 D10 D9  D8              |                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;       f0     E0  D22 D21 D20 D19 D18 D17 D16             |                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;       fexp   Sn  E7  E6  E5  E4  E3  E2  E1              V                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ; On exit                                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;       f2     D7  D6  D5  D4  D3  D2  D1  D0                                    C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;       f1     D15 D14 D13 D12 D11 D10 D9  D8                                    C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;       f0     1   D22 D21 D20 D19 D18 D17 D16                                   C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;       fexp   E7  E6  E5  E4  E3  E2  E1  E0                                    C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;---------------------------------------------------------------------------------------------- C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     GLOBAL __FpUnPackA, __FpUnPackB                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           PROG    CODE                                                                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           __FpUnPackA:                                                                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0032f8   3636     RLCF      0x36,0x1,0x0             rlcf      fA0,F                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0032fa   3637     RLCF      0x37,0x1,0x0             rlcf      fAexp,F                                                      C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0032fc   e302     BNC       0x3302                   bnc       jUnpkA1                                                      C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; Negative                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0032fe   843e     BSF       0x3e,0x2,0x0             bsf       fFlg,FLG_SIGN_A    ; Signal negative                         C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003300   7e3e     BTG       0x3e,0x7,0x0             btg       fFlg,FLG_SIGN_ABW  ; Toggle combined sign                    C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           jUnpkA1:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003302   e106     BNZ       0x3310                   bnz       jUnpkANZ                                                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; Zero exponent => Zero value or subnormal                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003304   803e     BSF       0x3e,0x0,0x0             bsf       fFlg,FLG_ZERO_A    ; Signal Zero                             C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; for safety force all bytes to zero since subnormals not supported   C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003306   6a37     CLRF      0x37,0x0                 clrf      fAexp                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003308   6a36     CLRF      0x36,0x0                 clrf      fA0                                                          C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
00330a   6a35     CLRF      0x35,0x0                 clrf      fA1                                                          C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
00330c   6a34     CLRF      0x34,0x0                 clrf      fA2                                                          C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
00330e   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           jUnpkANZ:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; Test for NaN or infinity                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003310   2837     INCF      0x37,0x0,0x0             incf      fAexp,W                                                      C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003312   e003     BZ        0x331a                   bz        jUnpkA2            ; == 0xFF => either NaN or infinite       C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; set msb of Significand to get 1.f                                   C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003314   80d8     BSF       0xd8,0x0,0x0             bsf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003316   3236     RRCF      0x36,0x1,0x0             rrcf      fA0,F                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003318   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           jUnpkA2:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; either NaN or infinity                                              C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
00331a   90d8     BCF       0xd8,0x0,0x0             bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
00331c   3236     RRCF      0x36,0x1,0x0             rrcf      fA0,F                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
00331e   e102     BNZ       0x3324                   bnz       jUnpkNaN           ; NaN                                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; infinity                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003320   823e     BSF       0x3e,0x1,0x0             bsf       fFlg,FLG_INF_A      ; A: is infinity                         C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003322   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           jUnpkNaN:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; either A or B is a NaN                                              C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003324   863e     BSF       0x3e,0x3,0x0             bsf       fFlg,FLG_NaN_AorB   ; Signal NaN for A or B                  C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003326   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           __FpUnPackB                                                                      C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003328   363b     RLCF      0x3b,0x1,0x0             rlcf      fB0,F                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
00332a   363c     RLCF      0x3c,0x1,0x0             rlcf      fBexp,F                                                      C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
00332c   e302     BNC       0x3332                   bnc       jUnpkB1                                                      C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; Negative                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
00332e   8c3e     BSF       0x3e,0x6,0x0             bsf       fFlg,FLG_SIGN_B       ; Signal negative                      C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003330   7e3e     BTG       0x3e,0x7,0x0             btg       fFlg,FLG_SIGN_ABW     ; Toggle combined sign                 C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           jUnpkB1:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003332   e106     BNZ       0x3340                   bnz       jUnpkBNZ                                                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; Zero exponent => Zero value or subnormal                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003334   883e     BSF       0x3e,0x4,0x0             bsf       fFlg,FLG_ZERO_B       ; Signal Zero                          C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; for safety force all bytes to zero since subnormals not supported   C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003336   6a3c     CLRF      0x3c,0x0                 clrf      fBexp                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003338   6a3b     CLRF      0x3b,0x0                 clrf      fB0                                                          C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
00333a   6a3a     CLRF      0x3a,0x0                 clrf      fB1                                                          C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
00333c   6a39     CLRF      0x39,0x0                 clrf      fB2                                                          C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
00333e   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           jUnpkBNZ:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; Test for NaN or infinity                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003340   283c     INCF      0x3c,0x0,0x0             incf      fBexp,W                                                      C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003342   e003     BZ        0x334a                   bz        jUnpkB2            ; == 0xFF => either NaN or infinite       C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; set msb of Significand to get 1.f                                   C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003344   80d8     BSF       0xd8,0x0,0x0             bsf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003346   323b     RRCF      0x3b,0x1,0x0             rrcf      fB0,F                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003348   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           jUnpkB2:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; either NaN or infinity                                              C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
00334a   90d8     BCF       0xd8,0x0,0x0             bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
00334c   323b     RRCF      0x3b,0x1,0x0             rrcf      fB0,F                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
00334e   e1ea     BNZ       0x3324                   bnz       jUnpkNaN           ; NaN                                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; infinity                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003350   8a3e     BSF       0x3e,0x5,0x0             bsf       fFlg,FLG_INF_B      ; B: is infinity                         C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
003352   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     END                                                                    C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           #include <stdio.h>                                                               C:\mcc18\src\TRADIT~1\stdclib\printf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\printf.c
                                           /* printf() is a wrapper function which calls vfprintf() with stdout as the      C:\mcc18\src\TRADIT~1\stdclib\printf.c
                                              destination output stream. EOF is returned on error, else the number          C:\mcc18\src\TRADIT~1\stdclib\printf.c
                                              of characters output. */                                                      C:\mcc18\src\TRADIT~1\stdclib\printf.c
                                           int                                                                              C:\mcc18\src\TRADIT~1\stdclib\printf.c
00521c   cfd9     MOVFF     0xfd9,0xfe6    printf (const rom char *fmt, ...)                                                C:\mcc18\src\TRADIT~1\stdclib\printf.c
00521e   ffe6                                                                                                               
005220   cfda     MOVFF     0xfda,0xfe6                                                                                     
005222   ffe6                                                                                                               
005224   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
005226   ffd9                                                                                                               
005228   cfe2     MOVFF     0xfe2,0xfda                                                                                     
00522a   ffda                                                                                                               
00522c   52e6     MOVF      0xe6,0x1,0x0                                                                                    
00522e   52e6     MOVF      0xe6,0x1,0x0                                                                                    
005230   52e6     MOVF      0xe6,0x1,0x0                                                                                    
005232   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\mcc18\src\TRADIT~1\stdclib\printf.c
                                             va_list ap;                                                                    C:\mcc18\src\TRADIT~1\stdclib\printf.c
                                             int n;                                                                         C:\mcc18\src\TRADIT~1\stdclib\printf.c
005234   50d9     MOVF      0xd9,0x0,0x0     va_start (ap, fmt);                                                            C:\mcc18\src\TRADIT~1\stdclib\printf.c
005236   0ffb     ADDLW     0xfb                                                                                            
005238   6e00     MOVWF     0x0,0x0                                                                                         
00523a   0eff     MOVLW     0xff                                                                                            
00523c   20da     ADDWFC    0xda,0x0,0x0                                                                                    
00523e   6e01     MOVWF     0x1,0x0                                                                                         
005240   c000     MOVFF     0x0,0xfde                                                                                       
005242   ffde                                                                                                               
005244   6edd     MOVWF     0xdd,0x0                                                                                        
005246   cfde     MOVFF     0xfde,0xfe6      n = vfprintf (stdout, fmt, ap);                                                C:\mcc18\src\TRADIT~1\stdclib\printf.c
005248   ffe6                                                                                                               
00524a   cfdd     MOVFF     0xfdd,0xfe6                                                                                     
00524c   ffe6                                                                                                               
00524e   0efb     MOVLW     0xfb                                                                                            
005250   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
005252   ffe6                                                                                                               
005254   0efc     MOVLW     0xfc                                                                                            
005256   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
005258   ffe6                                                                                                               
00525a   0efd     MOVLW     0xfd                                                                                            
00525c   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00525e   ffe6                                                                                                               
005260   c26c     MOVFF     0x26c,0xfe6                                                                                     
005262   ffe6                                                                                                               
005264   c26d     MOVFF     0x26d,0xfe6                                                                                     
005266   ffe6                                                                                                               
005268   ecf1     CALL      0x15e2,0x0                                                                                      
00526a   f00a                                                                                                               
00526c   6ef5     MOVWF     0xf5,0x0                                                                                        
00526e   0e07     MOVLW     0x7                                                                                             
005270   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
005272   e202     BC        0x5278                                                                                          
005274   6ae1     CLRF      0xe1,0x0                                                                                        
005276   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005278   6ee1     MOVWF     0xe1,0x0                                                                                        
00527a   50f5     MOVF      0xf5,0x0,0x0                                                                                    
00527c   0e02     MOVLW     0x2                                                                                             
00527e   cff3     MOVFF     0xff3,0xfdb                                                                                     
005280   ffdb                                                                                                               
005282   0e03     MOVLW     0x3                                                                                             
005284   cff4     MOVFF     0xff4,0xfdb                                                                                     
005286   ffdb                                                                                                               
                                             va_end (ap);                                                                   C:\mcc18\src\TRADIT~1\stdclib\printf.c
005288   0e02     MOVLW     0x2              return n;                                                                      C:\mcc18\src\TRADIT~1\stdclib\printf.c
00528a   cfdb     MOVFF     0xfdb,0x0                                                                                       
00528c   f000                                                                                                               
00528e   0e03     MOVLW     0x3                                                                                             
005290   cfdb     MOVFF     0xfdb,0x1                                                                                       
005292   f001                                                                                                               
005294   c000     MOVFF     0x0,0xff3                                                                                       
005296   fff3                                                                                                               
005298   c001     MOVFF     0x1,0xff4                                                                                       
00529a   fff4                                                                                                               
00529c   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\mcc18\src\TRADIT~1\stdclib\printf.c
00529e   ffe1                                                                                                               
0052a0   cfda     MOVFF     0xfda,0xfe2                                                                                     
0052a2   ffe2                                                                                                               
0052a4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0052a6   cfe5     MOVFF     0xfe5,0xfda                                                                                     
0052a8   ffda                                                                                                               
0052aa   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0052ac   ffd9                                                                                                               
0052ae   0012     RETURN    0x0                                                                                             
                                           //---------------------------------------------------------------------------------------------- C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
                                           // float sqrt(float x)                                                           C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
                                           //                                                                               C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
                                           // Description:                                                                  C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
                                           //                                                                               C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
                                           //         square root                                                           C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
                                           //                                                                               C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
                                           // Input:                                                                        C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
                                           //         float x                                                               C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
                                           //                                                                               C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
                                           // Output:                                                                       C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
                                           //         square root of x                                                      C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
                                           //                                                                               C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
                                           //---------------------------------------------------------------------------------------------- C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
                                           #include <errno.h>                                                               C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
                                           #include <math.h>                                                                C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
                                           #include "_mathlib.h"                                                            C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
00395e   cfd9     MOVFF     0xfd9,0xfe6    float sqrt(float x)                                                              C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
003960   ffe6                                                                                                               
003962   cfda     MOVFF     0xfda,0xfe6                                                                                     
003964   ffe6                                                                                                               
003966   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
003968   ffd9                                                                                                               
00396a   cfe2     MOVFF     0xfe2,0xfda                                                                                     
00396c   ffda                                                                                                               
00396e   0e24     MOVLW     0x24                                                                                            
003970   24e1     ADDWF     0xe1,0x0,0x0                                                                                    
003972   e302     BNC       0x3978                                                                                          
003974   68e1     SETF      0xe1,0x0                                                                                        
003976   52e6     MOVF      0xe6,0x1,0x0                                                                                    
003978   6ee1     MOVWF     0xe1,0x0                                                                                        
                                           {                                                                                C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
                                               int n;                                                                       C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
                                               tUfloat32 Ret;                                                               C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
                                               tIEEE xIEEE;                                                                 C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
                                               FTYPE type;                                                                  C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
00397a   50d9     MOVF      0xd9,0x0,0x0       Ret.f = x;                                                                   C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
00397c   0ffa     ADDLW     0xfa                                                                                            
00397e   6ee9     MOVWF     0xe9,0x0                                                                                        
003980   0eff     MOVLW     0xff                                                                                            
003982   20da     ADDWFC    0xda,0x0,0x0                                                                                    
003984   6eea     MOVWF     0xea,0x0                                                                                        
003986   0e02     MOVLW     0x2                                                                                             
003988   cfee     MOVFF     0xfee,0xfdb                                                                                     
00398a   ffdb                                                                                                               
00398c   0e03     MOVLW     0x3                                                                                             
00398e   cfee     MOVFF     0xfee,0xfdb                                                                                     
003990   ffdb                                                                                                               
003992   0e04     MOVLW     0x4                                                                                             
003994   cfee     MOVFF     0xfee,0xfdb                                                                                     
003996   ffdb                                                                                                               
003998   0e05     MOVLW     0x5                                                                                             
00399a   cfee     MOVFF     0xfee,0xfdb                                                                                     
00399c   ffdb                                                                                                               
00399e   d9e8     RCALL     0x3d70             type = _UnpkMath(Ret, &xIEEE);                                               C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
0039a0   d9f2     RCALL     0x3d86                                                                                          
0039a2   eca4     CALL      0x4f48,0x0                                                                                      
0039a4   f027                                                                                                               
0039a6   6ef5     MOVWF     0xf5,0x0                                                                                        
0039a8   0e06     MOVLW     0x6                                                                                             
0039aa   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
0039ac   e202     BC        0x39b2                                                                                          
0039ae   6ae1     CLRF      0xe1,0x0                                                                                        
0039b0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0039b2   6ee1     MOVWF     0xe1,0x0                                                                                        
0039b4   50f5     MOVF      0xf5,0x0,0x0                                                                                    
0039b6   6ee7     MOVWF     0xe7,0x0                                                                                        
0039b8   0e0d     MOVLW     0xd                                                                                             
0039ba   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
0039bc   ffdb                                                                                                               
003d3a   cfee     MOVFF     0xfee,0xfe6                                                                                     
003d3c   ffe6                                                                                                               
003d3e   cfee     MOVFF     0xfee,0xfe6                                                                                     
003d40   ffe6                                                                                                               
003d42   cfee     MOVFF     0xfee,0xfe6                                                                                     
003d44   ffe6                                                                                                               
003d46   cfef     MOVFF     0xfef,0xfe6                                                                                     
003d48   ffe6                                                                                                               
003d4a   0012     RETURN    0x0                                                                                             
003d70   50d9     MOVF      0xd9,0x0,0x0                                                                                    
003d72   0f06     ADDLW     0x6                                                                                             
003d74   6ee6     MOVWF     0xe6,0x0                                                                                        
003d76   0e00     MOVLW     0x0                                                                                             
003d78   20da     ADDWFC    0xda,0x0,0x0                                                                                    
003d7a   6ee6     MOVWF     0xe6,0x0                                                                                        
003d7c   0012     RETURN    0x0                                                                                             
003d86   50d9     MOVF      0xd9,0x0,0x0                                                                                    
003d88   0f02     ADDLW     0x2                                                                                             
003d8a   dfb8     RCALL     0x3cfc                                                                                          
003d8c   ef9d     GOTO      0x3d3a                                                                                          
003d8e   f01e                                                                                                               
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
0039be   50db     MOVF      0xdb,0x0,0x0       if(type == _NANTYPE)                                                         C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
0039c0   0880     SUBLW     0x80                                                                                            
0039c2   e015     BZ        0x39ee                                                                                          
                                                   Ret.l = NaN;                                                             C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
0039c4   d9a0     RCALL     0x3d06             else if(Ret.f < 0)                                                           C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
0039c6   6a39     CLRF      0x39,0x0                                                                                        
0039c8   6a3a     CLRF      0x3a,0x0                                                                                        
0039ca   6a3b     CLRF      0x3b,0x0                                                                                        
0039cc   6a3c     CLRF      0x3c,0x0                                                                                        
0039ce   c000     MOVFF     0x0,0x34                                                                                        
0039d0   f034                                                                                                               
0039d2   c001     MOVFF     0x1,0x35                                                                                        
0039d4   f035                                                                                                               
0039d6   c002     MOVFF     0x2,0x36                                                                                        
0039d8   f036                                                                                                               
0039da   c003     MOVFF     0x3,0x37                                                                                        
0039dc   f037                                                                                                               
0039de   ecd0     CALL      0x33a0,0x0                                                                                      
0039e0   f019                                                                                                               
0039e2   0a01     XORLW     0x1                                                                                             
0039e4   e110     BNZ       0x3a06                                                                                          
003d06   0e02     MOVLW     0x2                                                                                             
003d08   cfdb     MOVFF     0xfdb,0x0                                                                                       
003d0a   f000                                                                                                               
003d0c   0e03     MOVLW     0x3                                                                                             
003d0e   cfdb     MOVFF     0xfdb,0x1                                                                                       
003d10   f001                                                                                                               
003d12   0e04     MOVLW     0x4                                                                                             
003d14   cfdb     MOVFF     0xfdb,0x2                                                                                       
003d16   f002                                                                                                               
003d18   0e05     MOVLW     0x5                                                                                             
003d1a   cfdb     MOVFF     0xfdb,0x3                                                                                       
003d1c   f003                                                                                                               
003d1e   0012     RETURN    0x0                                                                                             
                                                   {                                                                        C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
0039e6   0e21     MOVLW     0x21                   errno = EDOM;                                                            C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
0039e8   0102     MOVLB     0x2                                                                                             
0039ea   6f68     MOVWF     0x68,0x1                                                                                        
0039ec   6b69     CLRF      0x69,0x1                                                                                        
0039ee   0e02     MOVLW     0x2                    Ret.l = NaN;                                                             C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
0039f0   68db     SETF      0xdb,0x0                                                                                        
0039f2   0e03     MOVLW     0x3                                                                                             
0039f4   68db     SETF      0xdb,0x0                                                                                        
0039f6   0e04     MOVLW     0x4                                                                                             
0039f8   68db     SETF      0xdb,0x0                                                                                        
0039fa   0e7f     MOVLW     0x7f                                                                                            
0039fc   6ef3     MOVWF     0xf3,0x0                                                                                        
0039fe   0e05     MOVLW     0x5                                                                                             
003a00   cff3     MOVFF     0xff3,0xfdb                                                                                     
003a02   ffdb                                                                                                               
                                                   }                                                                        C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
003a04   d168     BRA       0x3cd6             else if(type & (_ZEROTYPE | _INFTYPE) )                                      C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
003a06   0e0d     MOVLW     0xd                                                                                             
003a08   50db     MOVF      0xdb,0x0,0x0                                                                                    
003a0a   0b05     ANDLW     0x5                                                                                             
003a0c   e001     BZ        0x3a10                                                                                          
003a0e   d163     BRA       0x3cd6                                                                                          
                                                   return Ret.f;                                                            C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
                                               else                                                                         C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
                                                   {                                                                        C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
                                                   int i;                                                                   C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
                                                   int round;                                                               C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
                                                   int sticky;                                                              C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
                                                   unsigned long q;                                                         C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
                                                   unsigned long r;                                                         C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
                                                   unsigned long b;                                                         C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
003a10   0e0a     MOVLW     0xa                    n = xIEEE.exp + (2 - FLT_BIAS);                                          C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
003a12   cfdb     MOVFF     0xfdb,0x0                                                                                       
003a14   f000                                                                                                               
003a16   0e0b     MOVLW     0xb                                                                                             
003a18   cfdb     MOVFF     0xfdb,0x1                                                                                       
003a1a   f001                                                                                                               
003a1c   0e83     MOVLW     0x83                                                                                            
003a1e   2600     ADDWF     0x0,0x1,0x0                                                                                     
003a20   0eff     MOVLW     0xff                                                                                            
003a22   2201     ADDWFC    0x1,0x1,0x0                                                                                     
003a24   c000     MOVFF     0x0,0xfde                                                                                       
003a26   ffde                                                                                                               
003a28   c001     MOVFF     0x1,0xfdd                                                                                       
003a2a   ffdd                                                                                                               
003a2c   50d9     MOVF      0xd9,0x0,0x0           r = xIEEE.sig;                                                           C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
003a2e   0f06     ADDLW     0x6                                                                                             
003a30   d965     RCALL     0x3cfc                                                                                          
003a32   d976     RCALL     0x3d20                                                                                          
003d20   0e18     MOVLW     0x18                                                                                            
003d22   cfee     MOVFF     0xfee,0xfdb                                                                                     
003d24   ffdb                                                                                                               
003d26   0e19     MOVLW     0x19                                                                                            
003d28   cfee     MOVFF     0xfee,0xfdb                                                                                     
003d2a   ffdb                                                                                                               
003d2c   0e1a     MOVLW     0x1a                                                                                            
003d2e   cfee     MOVFF     0xfee,0xfdb                                                                                     
003d30   ffdb                                                                                                               
003d32   0e1b     MOVLW     0x1b                                                                                            
003d34   cfee     MOVFF     0xfee,0xfdb                                                                                     
003d36   ffdb                                                                                                               
003d38   0012     RETURN    0x0                                                                                             
003a34   50df     MOVF      0xdf,0x0,0x0           if(n & 1)                                                                C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
003a36   0b01     ANDLW     0x1                                                                                             
003a38   e00f     BZ        0x3a58                                                                                          
                                                       {                                                                    C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
003a3a   06df     DECF      0xdf,0x1,0x0               n--;                                                                 C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
003a3c   0e01     MOVLW     0x1                                                                                             
003a3e   e201     BC        0x3a42                                                                                          
003a40   06db     DECF      0xdb,0x1,0x0                                                                                    
003a42   50d9     MOVF      0xd9,0x0,0x0               r <<= 1;                                                             C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
003a44   0f18     ADDLW     0x18                                                                                            
003a46   d95a     RCALL     0x3cfc                                                                                          
003a48   90d8     BCF       0xd8,0x0,0x0                                                                                    
003a4a   36ef     RLCF      0xef,0x1,0x0                                                                                    
003a4c   0e01     MOVLW     0x1                                                                                             
003a4e   36eb     RLCF      0xeb,0x1,0x0                                                                                    
003a50   0e02     MOVLW     0x2                                                                                             
003a52   36eb     RLCF      0xeb,0x1,0x0                                                                                    
003a54   0e03     MOVLW     0x3                                                                                             
003a56   36eb     RLCF      0xeb,0x1,0x0                                                                                    
                                                       }                                                                    C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
003a58   cfd9     MOVFF     0xfd9,0xfe9            n /= 2;                                                                  C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
003a5a   ffe9                                                                                                               
003a5c   cfda     MOVFF     0xfda,0xfea                                                                                     
003a5e   ffea                                                                                                               
003a60   0e02     MOVLW     0x2                                                                                             
003a62   6e3a     MOVWF     0x3a,0x0                                                                                        
003a64   6a3b     CLRF      0x3b,0x0                                                                                        
003a66   cfee     MOVFF     0xfee,0x35                                                                                      
003a68   f035                                                                                                               
003a6a   cfed     MOVFF     0xfed,0x36                                                                                      
003a6c   f036                                                                                                               
003a6e   ecaa     CALL      0x3354,0x0                                                                                      
003a70   f019                                                                                                               
003a72   c035     MOVFF     0x35,0xfee                                                                                      
003a74   ffee                                                                                                               
003a76   c036     MOVFF     0x36,0xfed                                                                                      
003a78   ffed                                                                                                               
003a7a   0e14     MOVLW     0x14                   q = 0;                                                                   C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
003a7c   6adb     CLRF      0xdb,0x0                                                                                        
003a7e   0e15     MOVLW     0x15                                                                                            
003a80   6adb     CLRF      0xdb,0x0                                                                                        
003a82   0e16     MOVLW     0x16                                                                                            
003a84   6adb     CLRF      0xdb,0x0                                                                                        
003a86   0e17     MOVLW     0x17                                                                                            
003a88   6adb     CLRF      0xdb,0x0                                                                                        
003a8a   0e1c     MOVLW     0x1c                   b = 0x04000000ul >> 2;                                                   C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
003a8c   6adb     CLRF      0xdb,0x0                                                                                        
003a8e   0e1d     MOVLW     0x1d                                                                                            
003a90   6adb     CLRF      0xdb,0x0                                                                                        
003a92   0e1e     MOVLW     0x1e                                                                                            
003a94   6adb     CLRF      0xdb,0x0                                                                                        
003a96   0e01     MOVLW     0x1                                                                                             
003a98   6ef3     MOVWF     0xf3,0x0                                                                                        
003a9a   0e1f     MOVLW     0x1f                                                                                            
003a9c   cff3     MOVFF     0xff3,0xfdb                                                                                     
003a9e   ffdb                                                                                                               
003aa0   0e01     MOVLW     0x1                    for(i = 1; i < 26; ++i)                                                  C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
003aa2   6ef3     MOVWF     0xf3,0x0                                                                                        
003aa4   0e0e     MOVLW     0xe                                                                                             
003aa6   cff3     MOVFF     0xff3,0xfdb                                                                                     
003aa8   ffdb                                                                                                               
003aaa   0e0f     MOVLW     0xf                                                                                             
003aac   6adb     CLRF      0xdb,0x0                                                                                        
003aae   0e0e     MOVLW     0xe                                                                                             
003ab0   cfdb     MOVFF     0xfdb,0x0                                                                                       
003ab2   f000                                                                                                               
003ab4   0e0f     MOVLW     0xf                                                                                             
003ab6   cfdb     MOVFF     0xfdb,0x1                                                                                       
003ab8   f001                                                                                                               
003aba   90d8     BCF       0xd8,0x0,0x0                                                                                    
003abc   5001     MOVF      0x1,0x0,0x0                                                                                     
003abe   e604     BN        0x3ac8                                                                                          
003ac0   0e1a     MOVLW     0x1a                                                                                            
003ac2   5c00     SUBWF     0x0,0x0,0x0                                                                                     
003ac4   0e00     MOVLW     0x0                                                                                             
003ac6   5801     SUBWFB    0x1,0x0,0x0                                                                                     
003ac8   e301     BNC       0x3acc                                                                                          
003aca   d09a     BRA       0x3c00                                                                                          
003bf2   0e0e     MOVLW     0xe                                                                                             
003bf4   2adb     INCF      0xdb,0x1,0x0                                                                                    
003bf6   0e0f     MOVLW     0xf                                                                                             
003bf8   e201     BC        0x3bfc                                                                                          
003bfa   d759     BRA       0x3aae                                                                                          
003bfc   2adb     INCF      0xdb,0x1,0x0                                                                                    
003bfe   d757     BRA       0x3aae                                                                                          
                                                       {                                                                    C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
                                                       long t;                                                              C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
003acc   0e18     MOVLW     0x18                       r = r << 1;                                                          C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
003ace   cfdb     MOVFF     0xfdb,0x0                                                                                       
003ad0   f000                                                                                                               
003ad2   0e19     MOVLW     0x19                                                                                            
003ad4   cfdb     MOVFF     0xfdb,0x1                                                                                       
003ad6   f001                                                                                                               
003ad8   0e1a     MOVLW     0x1a                                                                                            
003ada   cfdb     MOVFF     0xfdb,0x2                                                                                       
003adc   f002                                                                                                               
003ade   0e1b     MOVLW     0x1b                                                                                            
003ae0   cfdb     MOVFF     0xfdb,0x3                                                                                       
003ae2   f003                                                                                                               
003ae4   0e01     MOVLW     0x1                                                                                             
003ae6   0b1f     ANDLW     0x1f                                                                                            
003ae8   e007     BZ        0x3af8                                                                                          
003aea   90d8     BCF       0xd8,0x0,0x0                                                                                    
003aec   3600     RLCF      0x0,0x1,0x0                                                                                     
003aee   3601     RLCF      0x1,0x1,0x0                                                                                     
003af0   3602     RLCF      0x2,0x1,0x0                                                                                     
003af2   3603     RLCF      0x3,0x1,0x0                                                                                     
003af4   06e8     DECF      0xe8,0x1,0x0                                                                                    
003af6   e1f9     BNZ       0x3aea                                                                                          
003af8   0e18     MOVLW     0x18                                                                                            
003afa   c000     MOVFF     0x0,0xfdb                                                                                       
003afc   ffdb                                                                                                               
003afe   0e19     MOVLW     0x19                                                                                            
003b00   c001     MOVFF     0x1,0xfdb                                                                                       
003b02   ffdb                                                                                                               
003b04   0e1a     MOVLW     0x1a                                                                                            
003b06   c002     MOVFF     0x2,0xfdb                                                                                       
003b08   ffdb                                                                                                               
003b0a   0e1b     MOVLW     0x1b                                                                                            
003b0c   c003     MOVFF     0x3,0xfdb                                                                                       
003b0e   ffdb                                                                                                               
003b10   0e14     MOVLW     0x14                       t = r - ( (q<<1) + b);                                               C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
003b12   cfdb     MOVFF     0xfdb,0x8                                                                                       
003b14   f008                                                                                                               
003b16   0e15     MOVLW     0x15                                                                                            
003b18   cfdb     MOVFF     0xfdb,0x9                                                                                       
003b1a   f009                                                                                                               
003b1c   0e16     MOVLW     0x16                                                                                            
003b1e   cfdb     MOVFF     0xfdb,0xa                                                                                       
003b20   f00a                                                                                                               
003b22   0e17     MOVLW     0x17                                                                                            
003b24   cfdb     MOVFF     0xfdb,0xb                                                                                       
003b26   f00b                                                                                                               
003b28   0e01     MOVLW     0x1                                                                                             
003b2a   0b1f     ANDLW     0x1f                                                                                            
003b2c   e007     BZ        0x3b3c                                                                                          
003b2e   90d8     BCF       0xd8,0x0,0x0                                                                                    
003b30   3608     RLCF      0x8,0x1,0x0                                                                                     
003b32   3609     RLCF      0x9,0x1,0x0                                                                                     
003b34   360a     RLCF      0xa,0x1,0x0                                                                                     
003b36   360b     RLCF      0xb,0x1,0x0                                                                                     
003b38   06e8     DECF      0xe8,0x1,0x0                                                                                    
003b3a   e1f9     BNZ       0x3b2e                                                                                          
003b3c   50d9     MOVF      0xd9,0x0,0x0                                                                                    
003b3e   0f1c     ADDLW     0x1c                                                                                            
003b40   d8dd     RCALL     0x3cfc                                                                                          
003b42   5008     MOVF      0x8,0x0,0x0                                                                                     
003b44   24ee     ADDWF     0xee,0x0,0x0                                                                                    
003b46   6e04     MOVWF     0x4,0x0                                                                                         
003b48   5009     MOVF      0x9,0x0,0x0                                                                                     
003b4a   20ee     ADDWFC    0xee,0x0,0x0                                                                                    
003b4c   6e05     MOVWF     0x5,0x0                                                                                         
003b4e   500a     MOVF      0xa,0x0,0x0                                                                                     
003b50   20ee     ADDWFC    0xee,0x0,0x0                                                                                    
003b52   6e06     MOVWF     0x6,0x0                                                                                         
003b54   500b     MOVF      0xb,0x0,0x0                                                                                     
003b56   20ee     ADDWFC    0xee,0x0,0x0                                                                                    
003b58   6e07     MOVWF     0x7,0x0                                                                                         
003b5a   50d9     MOVF      0xd9,0x0,0x0                                                                                    
003b5c   0f18     ADDLW     0x18                                                                                            
003b5e   d8ce     RCALL     0x3cfc                                                                                          
003b60   5004     MOVF      0x4,0x0,0x0                                                                                     
003b62   5cee     SUBWF     0xee,0x0,0x0                                                                                    
003b64   6e00     MOVWF     0x0,0x0                                                                                         
003b66   5005     MOVF      0x5,0x0,0x0                                                                                     
003b68   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
003b6a   6e01     MOVWF     0x1,0x0                                                                                         
003b6c   5006     MOVF      0x6,0x0,0x0                                                                                     
003b6e   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
003b70   6e02     MOVWF     0x2,0x0                                                                                         
003b72   5007     MOVF      0x7,0x0,0x0                                                                                     
003b74   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
003b76   6e03     MOVWF     0x3,0x0                                                                                         
003b78   0e20     MOVLW     0x20                                                                                            
003b7a   c000     MOVFF     0x0,0xfdb                                                                                       
003b7c   ffdb                                                                                                               
003b7e   0e21     MOVLW     0x21                                                                                            
003b80   c001     MOVFF     0x1,0xfdb                                                                                       
003b82   ffdb                                                                                                               
003b84   0e22     MOVLW     0x22                                                                                            
003b86   c002     MOVFF     0x2,0xfdb                                                                                       
003b88   ffdb                                                                                                               
003b8a   0e23     MOVLW     0x23                                                                                            
003b8c   c003     MOVFF     0x3,0xfdb                                                                                       
003b8e   ffdb                                                                                                               
003b90   0e20     MOVLW     0x20                       if(t > 0)                                                            C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
003b92   cfdb     MOVFF     0xfdb,0x34                                                                                      
003b94   f034                                                                                                               
003b96   0e21     MOVLW     0x21                                                                                            
003b98   cfdb     MOVFF     0xfdb,0x35                                                                                      
003b9a   f035                                                                                                               
003b9c   0e22     MOVLW     0x22                                                                                            
003b9e   cfdb     MOVFF     0xfdb,0x36                                                                                      
003ba0   f036                                                                                                               
003ba2   0e23     MOVLW     0x23                                                                                            
003ba4   cfdb     MOVFF     0xfdb,0x37                                                                                      
003ba6   f037                                                                                                               
003ba8   0e00     MOVLW     0x0                                                                                             
003baa   1837     XORWF     0x37,0x0,0x0                                                                                    
003bac   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
003bae   d002     BRA       0x3bb4                                                                                          
003bb0   3437     RLCF      0x37,0x0,0x0                                                                                    
003bb2   d009     BRA       0x3bc6                                                                                          
003bb4   0e00     MOVLW     0x0                                                                                             
003bb6   80d8     BSF       0xd8,0x0,0x0                                                                                    
003bb8   5434     SUBFWB    0x34,0x0,0x0                                                                                    
003bba   0e00     MOVLW     0x0                                                                                             
003bbc   5435     SUBFWB    0x35,0x0,0x0                                                                                    
003bbe   0e00     MOVLW     0x0                                                                                             
003bc0   5436     SUBFWB    0x36,0x0,0x0                                                                                    
003bc2   0e00     MOVLW     0x0                                                                                             
003bc4   5437     SUBFWB    0x37,0x0,0x0                                                                                    
003bc6   e211     BC        0x3bea                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
003bc8   50d9     MOVF      0xd9,0x0,0x0                   r = t;                                                           C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
003bca   0f20     ADDLW     0x20                                                                                            
003bcc   d897     RCALL     0x3cfc                                                                                          
003bce   d8a8     RCALL     0x3d20                                                                                          
003bd0   d8d6     RCALL     0x3d7e                         q |= b;                                                          C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
003bd2   0e1c     MOVLW     0x1c                                                                                            
003bd4   50db     MOVF      0xdb,0x0,0x0                                                                                    
003bd6   12ee     IORWF     0xee,0x1,0x0                                                                                    
003bd8   0e1d     MOVLW     0x1d                                                                                            
003bda   50db     MOVF      0xdb,0x0,0x0                                                                                    
003bdc   12ee     IORWF     0xee,0x1,0x0                                                                                    
003bde   0e1e     MOVLW     0x1e                                                                                            
003be0   50db     MOVF      0xdb,0x0,0x0                                                                                    
003be2   12ee     IORWF     0xee,0x1,0x0                                                                                    
003be4   0e1f     MOVLW     0x1f                                                                                            
003be6   50db     MOVF      0xdb,0x0,0x0                                                                                    
003be8   12ee     IORWF     0xee,0x1,0x0                                                                                    
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
003bea   50d9     MOVF      0xd9,0x0,0x0               b >>= 1;                                                             C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
003bec   0f1c     ADDLW     0x1c                                                                                            
003bee   d886     RCALL     0x3cfc                                                                                          
003bf0   d8ad     RCALL     0x3d4c                                                                                          
003d4c   90d8     BCF       0xd8,0x0,0x0                                                                                    
003d4e   0e03     MOVLW     0x3                                                                                             
003d50   32eb     RRCF      0xeb,0x1,0x0                                                                                    
003d52   0e02     MOVLW     0x2                                                                                             
003d54   32eb     RRCF      0xeb,0x1,0x0                                                                                    
003d56   0e01     MOVLW     0x1                                                                                             
003d58   32eb     RRCF      0xeb,0x1,0x0                                                                                    
003d5a   32ef     RRCF      0xef,0x1,0x0                                                                                    
003d5c   0012     RETURN    0x0                                                                                             
                                                       }                                                                    C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
003c00   d8c7     RCALL     0x3d90                 round = q & 1;                                                           C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
003c02   0e10     MOVLW     0x10                                                                                            
003c04   c000     MOVFF     0x0,0xfdb                                                                                       
003c06   ffdb                                                                                                               
003c08   0e11     MOVLW     0x11                                                                                            
003c0a   c001     MOVFF     0x1,0xfdb                                                                                       
003c0c   ffdb                                                                                                               
003d5e   50ee     MOVF      0xee,0x0,0x0                                                                                    
003d60   1600     ANDWF     0x0,0x1,0x0                                                                                     
003d62   50ee     MOVF      0xee,0x0,0x0                                                                                    
003d64   1601     ANDWF     0x1,0x1,0x0                                                                                     
003d66   50ee     MOVF      0xee,0x0,0x0                                                                                    
003d68   1602     ANDWF     0x2,0x1,0x0                                                                                     
003d6a   50ee     MOVF      0xee,0x0,0x0                                                                                    
003d6c   1603     ANDWF     0x3,0x1,0x0                                                                                     
003d6e   0012     RETURN    0x0                                                                                             
003d90   0e01     MOVLW     0x1                                                                                             
003d92   6e00     MOVWF     0x0,0x0                                                                                         
003d94   6a01     CLRF      0x1,0x0                                                                                         
003d96   6a02     CLRF      0x2,0x0                                                                                         
003d98   6a03     CLRF      0x3,0x0                                                                                         
003d9a   dff1     RCALL     0x3d7e                                                                                          
003d9c   efaf     GOTO      0x3d5e                                                                                          
003d9e   f01e                                                                                                               
003c0e   0e18     MOVLW     0x18                   sticky = r;                                                              C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
003c10   cfdb     MOVFF     0xfdb,0x35                                                                                      
003c12   f035                                                                                                               
003c14   0e19     MOVLW     0x19                                                                                            
003c16   cfdb     MOVFF     0xfdb,0x36                                                                                      
003c18   f036                                                                                                               
003c1a   0e12     MOVLW     0x12                                                                                            
003c1c   c035     MOVFF     0x35,0xfdb                                                                                      
003c1e   ffdb                                                                                                               
003c20   0e13     MOVLW     0x13                                                                                            
003c22   c036     MOVFF     0x36,0xfdb                                                                                      
003c24   ffdb                                                                                                               
003c26   d8ab     RCALL     0x3d7e                 q >>= 1;                                                                 C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
003c28   d891     RCALL     0x3d4c                                                                                          
003c2a   50d9     MOVF      0xd9,0x0,0x0           if(round && (sticky || (q & 1)))                                         C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
003c2c   0f10     ADDLW     0x10                                                                                            
003c2e   d866     RCALL     0x3cfc                                                                                          
003c30   50ee     MOVF      0xee,0x0,0x0                                                                                    
003c32   10ed     IORWF     0xed,0x0,0x0                                                                                    
003c34   e012     BZ        0x3c5a                                                                                          
003c36   50d9     MOVF      0xd9,0x0,0x0                                                                                    
003c38   0f12     ADDLW     0x12                                                                                            
003c3a   d860     RCALL     0x3cfc                                                                                          
003c3c   50ee     MOVF      0xee,0x0,0x0                                                                                    
003c3e   10ed     IORWF     0xed,0x0,0x0                                                                                    
003c40   e106     BNZ       0x3c4e                                                                                          
003c42   d8a6     RCALL     0x3d90                                                                                          
003c44   5000     MOVF      0x0,0x0,0x0                                                                                     
003c46   1001     IORWF     0x1,0x0,0x0                                                                                     
003c48   1002     IORWF     0x2,0x0,0x0                                                                                     
003c4a   1003     IORWF     0x3,0x0,0x0                                                                                     
003c4c   e006     BZ        0x3c5a                                                                                          
                                                       {                                                                    C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
003c4e   d897     RCALL     0x3d7e                     q++;                                                                 C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
003c50   2aee     INCF      0xee,0x1,0x0                                                                                    
003c52   0e00     MOVLW     0x0                                                                                             
003c54   22ee     ADDWFC    0xee,0x1,0x0                                                                                    
003c56   22ee     ADDWFC    0xee,0x1,0x0                                                                                    
003c58   22ee     ADDWFC    0xee,0x1,0x0                                                                                    
                                                       }                                                                    C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
003c5a   0e0c     MOVLW     0xc                    xIEEE.sgn = 0;                                                           C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
003c5c   6adb     CLRF      0xdb,0x0                                                                                        
003c5e   d88f     RCALL     0x3d7e                 xIEEE.sig = q;                                                           C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
003c60   0e06     MOVLW     0x6                                                                                             
003c62   cfee     MOVFF     0xfee,0xfdb                                                                                     
003c64   ffdb                                                                                                               
003c66   0e07     MOVLW     0x7                                                                                             
003c68   cfee     MOVFF     0xfee,0xfdb                                                                                     
003c6a   ffdb                                                                                                               
003c6c   0e08     MOVLW     0x8                                                                                             
003c6e   cfee     MOVFF     0xfee,0xfdb                                                                                     
003c70   ffdb                                                                                                               
003c72   0e09     MOVLW     0x9                                                                                             
003c74   cfee     MOVFF     0xfee,0xfdb                                                                                     
003c76   ffdb                                                                                                               
003d7e   50d9     MOVF      0xd9,0x0,0x0                                                                                    
003d80   0f14     ADDLW     0x14                                                                                            
003d82   ef7e     GOTO      0x3cfc                                                                                          
003d84   f01e                                                                                                               
003c78   0e7e     MOVLW     0x7e                   xIEEE.exp = - 1 + FLT_BIAS;                                              C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
003c7a   6ef3     MOVWF     0xf3,0x0                                                                                        
003c7c   0e0a     MOVLW     0xa                                                                                             
003c7e   cff3     MOVFF     0xff3,0xfdb                                                                                     
003c80   ffdb                                                                                                               
003c82   0e0b     MOVLW     0xb                                                                                             
003c84   6adb     CLRF      0xdb,0x0                                                                                        
003c86   50d9     MOVF      0xd9,0x0,0x0           _PackMath(&xIEEE, &Ret);                                                 C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
003c88   0f02     ADDLW     0x2                                                                                             
003c8a   6ee6     MOVWF     0xe6,0x0                                                                                        
003c8c   0e00     MOVLW     0x0                                                                                             
003c8e   20da     ADDWFC    0xda,0x0,0x0                                                                                    
003c90   6ee6     MOVWF     0xe6,0x0                                                                                        
003c92   d86e     RCALL     0x3d70                                                                                          
003c94   ec32     CALL      0x5064,0x0                                                                                      
003c96   f028                                                                                                               
003c98   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003c9a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003c9c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003c9e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003ca0   cfde     MOVFF     0xfde,0xfe6            Ret.f = ldexp( Ret.f, n);                                                C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
003ca2   ffe6                                                                                                               
003ca4   cfdd     MOVFF     0xfdd,0xfe6                                                                                     
003ca6   ffe6                                                                                                               
003ca8   d86e     RCALL     0x3d86                                                                                          
003caa   ec0a     CALL      0x4e14,0x0                                                                                      
003cac   f027                                                                                                               
003cae   6ef5     MOVWF     0xf5,0x0                                                                                        
003cb0   0e06     MOVLW     0x6                                                                                             
003cb2   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
003cb4   e202     BC        0x3cba                                                                                          
003cb6   6ae1     CLRF      0xe1,0x0                                                                                        
003cb8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003cba   6ee1     MOVWF     0xe1,0x0                                                                                        
003cbc   50f5     MOVF      0xf5,0x0,0x0                                                                                    
003cbe   0e02     MOVLW     0x2                                                                                             
003cc0   c033     MOVFF     0x33,0xfdb                                                                                      
003cc2   ffdb                                                                                                               
003cc4   0e03     MOVLW     0x3                                                                                             
003cc6   c034     MOVFF     0x34,0xfdb                                                                                      
003cc8   ffdb                                                                                                               
003cca   0e04     MOVLW     0x4                                                                                             
003ccc   c035     MOVFF     0x35,0xfdb                                                                                      
003cce   ffdb                                                                                                               
003cd0   0e05     MOVLW     0x5                                                                                             
003cd2   c036     MOVFF     0x36,0xfdb                                                                                      
003cd4   ffdb                                                                                                               
003cfc   6ee9     MOVWF     0xe9,0x0                                                                                        
003cfe   0e00     MOVLW     0x0                                                                                             
003d00   20da     ADDWFC    0xda,0x0,0x0                                                                                    
003d02   6eea     MOVWF     0xea,0x0                                                                                        
003d04   0012     RETURN    0x0                                                                                             
                                                   }                                                                        C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
003cd6   d817     RCALL     0x3d06             return(Ret.f);                                                               C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
003cd8   c000     MOVFF     0x0,0x33                                                                                        
003cda   f033                                                                                                               
003cdc   c001     MOVFF     0x1,0x34                                                                                        
003cde   f034                                                                                                               
003ce0   c002     MOVFF     0x2,0x35                                                                                        
003ce2   f035                                                                                                               
003ce4   c003     MOVFF     0x3,0x36                                                                                        
003ce6   f036                                                                                                               
003ce8   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
003cea   ffe1                                                                                                               
003cec   cfda     MOVFF     0xfda,0xfe2                                                                                     
003cee   ffe2                                                                                                               
003cf0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003cf2   cfe5     MOVFF     0xfe5,0xfda                                                                                     
003cf4   ffda                                                                                                               
003cf6   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
003cf8   ffd9                                                                                                               
003cfa   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\sqrt.c
                                           ;	RCS Header $Id: fxd1616s.asm,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $           C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;	$Revision: 1.2 $                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           	include <P18CXXX.INC>		; general Golden Gate definitions                        C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           	include <CMATH18.INC>		; Math library definitions                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;	RCS Header $Id: cmath18.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                           ;	$Revision: 1.2 $                                                               C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                               LIST                                                                         C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                           ; CMATH18.INC  v1.0  Microchip Technology, Inc. / F.J. Testa                     C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           	include <AARG.INC>		; AARG declarations                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;	RCS Header $Id: aarg.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $               C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN	AARGB0, AARGB1, AARGB2, AARGB3                                           C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                   EXTERN  AARGB4, AARGB5, AARGB6, AARGB7                                   C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN  AEXP                                                                    C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN  REMB3, REMB2, REMB1, REMB0                                              C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           	include <BARG.INC>		; BARG declarations                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;	RCS Header $Id: barg.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $               C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                   EXTERN  BARGB3, BARGB2, BARGB1, BARGB0                                   C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                   EXTERN  BEXP                                                             C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;       16/16 Bit Signed Fixed Point Divide 16/16 -> 16.16                       C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;       Input:  16 bit fixed point dividend in AARGB0, AARGB1                    C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;               16 bit fixed point divisor in BARGB0, BARGB1                     C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;       Use:    CALL    FXD1616S                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;       Output: 16 bit fixed point quotient in AARGB0, AARGB1                    C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;               16 bit fixed point remainder in REMB0, REMB1                     C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;       Result: AARG, REM  <--  AARG / BARG                                      C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;	Testing from 100000 trials:                                                    C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;		min	max	mean                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;	Timing:	28	149	85.17	clks                                                      C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;       PM: 33            DM: 8                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;---------------------------------------------------------------------------------------------- C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           PROG	CODE                                                                        C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           		EXTERN	FXD1616U                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           FXD1616S                                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           		GLOBAL		FXD1616S                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003354   6a3d     CLRF      0x3d,0x0       		CLRF		SIGN		; clear sign                                                       C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003356   ae3b     BTFSS     0x3b,0x7,0x0           BTFSS   	BARGB0,MSB                                                      C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003358   efb3     GOTO      0x3366                 GOTO    	DA1616S                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
00335a   f019                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
00335c   6c3a     NEGF      0x3a,0x0               NEGF    	BARGB1		; if BARG<0, negate and toggle sign                     C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
00335e   1e3b     COMF      0x3b,0x1,0x0           COMF    	BARGB0,F                                                        C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003360   6ae8     CLRF      0xe8,0x0               CLRF		WREG                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003362   223b     ADDWFC    0x3b,0x1,0x0   		ADDWFC		BARGB0,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003364   1e3d     COMF      0x3d,0x1,0x0   		COMF		SIGN,F                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           DA1616S                                                                          C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003366   ae36     BTFSS     0x36,0x7,0x0   		BTFSS       AARGB0,MSB                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003368   efbb     GOTO      0x3376                 GOTO        D1616S                                                       C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
00336a   f019                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
00336c   6c35     NEGF      0x35,0x0               NEGF        AARGB1		; if AARG<0, negate and toggle sign                  C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
00336e   1e36     COMF      0x36,0x1,0x0           COMF        AARGB0,F                                                     C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003370   6ae8     CLRF      0xe8,0x0               CLRF		WREG                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003372   2236     ADDWFC    0x36,0x1,0x0   		ADDWFC		AARGB0,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003374   1e3d     COMF      0x3d,0x1,0x0   		COMF		SIGN,F                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           D1616S                                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003376   ece1     CALL      0x55c2,0x0     		CALL		FXD1616U                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003378   f02a                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
00337a   be36     BTFSC     0x36,0x7,0x0   		BTFSC		AARGB0,MSB	; test for exception                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
00337c   efcb     GOTO      0x3396         		GOTO		D1616SX                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
00337e   f019                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           D1616SOK                                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003380   ae3d     BTFSS     0x3d,0x7,0x0   		BTFSS       SIGN,MSB                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003382   0c00     RETLW     0x0            		RETLW		0x00                                                                    C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           D1616SNEG                                                                        C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003384   6c35     NEGF      0x35,0x0               NEGF        AARGB1		; negate if result negative                          C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003386   1e36     COMF      0x36,0x1,0x0           COMF        AARGB0,F                                                     C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003388   6ae8     CLRF      0xe8,0x0               CLRF		WREG                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
00338a   2236     ADDWFC    0x36,0x1,0x0   		ADDWFC		AARGB0,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
00338c   6c31     NEGF      0x31,0x0       		NEGF        REMB1                                                              C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
00338e   1e32     COMF      0x32,0x1,0x0           COMF        REMB0,F                                                      C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003390   6ae8     CLRF      0xe8,0x0               CLRF		WREG                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003392   2232     ADDWFC    0x32,0x1,0x0   		ADDWFC		REMB0,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003394   0c00     RETLW     0x0                    RETLW       0x00                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           D1616SX                                                                          C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003396   be3d     BTFSC     0x3d,0x7,0x0   		BTFSC		SIGN,MSB                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003398   efc2     GOTO      0x3384         		GOTO		D1616SNEG                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
00339a   f019                                                                                                               
00339c   883e     BSF       0x3e,0x4,0x0   		BSF			FPFLAGS,NAN	; NAN exception if AARG=0x8000                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           								; with positive sign                                                     C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
00339e   0cff     RETLW     0xff           		RETLW		0xFF                                                                    C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           		END                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           /*** Unsigned Integer Division: 16-bit by 16-bit                                 C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                            ***                                                                             C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                            *** Optimized: Dec. 21, 2000                                                    C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                            ***        by: Daniel R. Madill, Quanser Consulting Inc.                        C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                            ***       for: Saved (for the worst case) at least 5*16 = 80 instruction cycles C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                            ***            over the code supplied with MCC18 v1.00.12                       C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                            ***/                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           void FXD1616U (/*unsigned arg0, unsigned arg1*/)                                 C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           {                                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                             // use INDF1 for the counter...                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                 _asm                                                                       C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                               // REM = 0                                                                   C:\mcc18\src\TRADIT~1\math\fxd1616u.c
0055c2   6a32     CLRF      0x32,0x0           clrf REMB0, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
0055c4   6a31     CLRF      0x31,0x0           clrf REMB1, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                               // INDF1 = 16                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
0055c6   0e10     MOVLW     0x10               movlw 16                                                                     C:\mcc18\src\TRADIT~1\math\fxd1616u.c
0055c8   6ee7     MOVWF     0xe7,0x0           movwf INDF1, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                               // Clear the carry                                                           C:\mcc18\src\TRADIT~1\math\fxd1616u.c
0055ca   90d8     BCF       0xd8,0x0,0x0   	bcf STATUS, 0, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           loop:                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           	//AARG16 <<= 1; Carry is always clear at this point.                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
0055cc   3635     RLCF      0x35,0x1,0x0   	rlcf AARGB1, 1, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd1616u.c
0055ce   3636     RLCF      0x36,0x1,0x0   	rlcf AARGB0, 1, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           	//PROD = (PROD << 1) | (AARG16 >> 16)                                           C:\mcc18\src\TRADIT~1\math\fxd1616u.c
0055d0   3631     RLCF      0x31,0x1,0x0   	rlcf REMB1, 1, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
0055d2   3632     RLCF      0x32,0x1,0x0   	rlcf REMB0, 1, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           	                                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           	//if (PROD >= BARG16)                                                           C:\mcc18\src\TRADIT~1\math\fxd1616u.c
0055d4   503a     MOVF      0x3a,0x0,0x0   	movf BARGB1, 0, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd1616u.c
0055d6   5c31     SUBWF     0x31,0x0,0x0   	subwf REMB1, 0, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd1616u.c
0055d8   503b     MOVF      0x3b,0x0,0x0   	movf BARGB0, 0, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd1616u.c
0055da   5832     SUBWFB    0x32,0x0,0x0   	subwfb REMB0, 0, 0                                                              C:\mcc18\src\TRADIT~1\math\fxd1616u.c
0055dc   e305     BNC       0x55e8         	bnc endloop                                                                     C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                               //{                                                                          C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           	    //PROD -= BARG16;                                                           C:\mcc18\src\TRADIT~1\math\fxd1616u.c
0055de   503a     MOVF      0x3a,0x0,0x0   	    movf BARGB1, 0, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd1616u.c
0055e0   5e31     SUBWF     0x31,0x1,0x0   	    subwf REMB1, 1, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd1616u.c
0055e2   503b     MOVF      0x3b,0x0,0x0   	    movf BARGB0, 0, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd1616u.c
0055e4   5a32     SUBWFB    0x32,0x1,0x0   	    subwfb REMB0, 1, 0                                                          C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           	    //++AARG16; Since AARG16 was shift to the left above, the increment will    C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                   //          simply set the LSbit. Using incf also clears the carry, which C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                   //          means we don't have to clear the carry at the top of the loop. C:\mcc18\src\TRADIT~1\math\fxd1616u.c
0055e6   2a35     INCF      0x35,0x1,0x0           incf AARGB1, 1, 0                                                        C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                               //}                                                                          C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           endloop:                                                                         C:\mcc18\src\TRADIT~1\math\fxd1616u.c
0055e8   2ee7     DECFSZ    0xe7,0x1,0x0       decfsz INDF1, 1, 0    // does not affect the carry bit                       C:\mcc18\src\TRADIT~1\math\fxd1616u.c
0055ea   d7f0     BRA       0x55cc             bra loop                                                                     C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                             _endasm                                                                        C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                             /* result in AARG already... */                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
0055ec   0012     RETURN    0x0            }                                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           #include <P18CXXX.INC>           ; general Golden Gate definitions               C:\MCC18\SRC\TRADIT~1\MATH\ltFP.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                           #include "fpmacros.inc"                                                          C:\MCC18\SRC\TRADIT~1\MATH\ltFP.asm
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ; Macros, constants, defines and variable externs used by float routines.        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;        radix dec                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Uses traditional global names                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN FPFLAGS                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB7                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB6                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB5                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB4                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fFlg  FPFLAGS                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA3    AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA2    AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA1    AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA0    AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fAexp  AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB3    BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB2    BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB1    BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB0    BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fBexp  BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT1     TEMPB3                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT0     TEMPB2                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW3     TEMPB1                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW2     TEMPB0                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW1     AARGB7                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW0     AARGB6                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexp   AARGB5                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexpHi AARGB4                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA0 AARGB0   ;msb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA1 AARGB1                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA2 AARGB2                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA3 AARGB3   ;lsb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_BIAS        equ      127    ; exponent bias                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_SMIN        equ     -149    ; min unbiased subnormal exponent                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMIN        equ     -126    ; min unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMAX        equ      127    ; max unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Flags for both A and B arguments                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_A    0  ; A: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_A     1  ; A: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_A    2  ; A: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_NaN_AorB  3  ; A or B is a NaN  (A or B)                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_B    4  ; B: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_B     5  ; B: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_B    6  ; B: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_ABW  7  ; ABW: Sign (A xor B) or W                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Exchange macro Var0, Var1                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var0,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movff   Var1,Var0                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movwf   Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Clear4 macro Var0, Var1, Var2, Var3                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var2                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var3                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Logical shift                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4 macro Var0,Var1,Var2,Var3                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bcf     STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR2C macro Var0,Var1                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C invalid                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   infsnz  Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Decrement 2 bytes. WREG unchanged.                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Dec2 macro Var0, Var1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   decf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   decf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg5 macro Var0,Var1,Var2,Var3,Var4                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add32 macro AVar0,AVar1,AVar2, BVar0,BVar1                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add41 macro AVar0,AVar1,AVar2,AVar3, BVar0                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add42 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub2 macro AVar0,AVar1, BVar0,BVar1                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub3 macro AVar0,AVar1,AVar2, BVar0,BVar1,BVar2                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; (PRODL,PRODH) = AVar*Bvar                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Mul2 macro AVar,BVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   mulwf   AVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== R E L  B R A N C H E S ===================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit set                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braSet macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit clear                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braClr macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqZ macro Var,jZero                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jZero                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneZ macro Var,jNotZero                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jNotZero                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var <= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfsgt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var >= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfslt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 == Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 != Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfslt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfsgt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFltF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   STATUS,Z                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bc      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== A B S O L U T E    B R A N C H E S =======================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit set                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoSet macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit clear                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoClr macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if F == Lit                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFeqL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F != Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFneL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F >= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFgeL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfslt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F <= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFleL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfsgt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\ltFP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\ltFP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\ltFP.asm
                                           ; TALTB32                                                                        C:\MCC18\SRC\TRADIT~1\MATH\ltFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\ltFP.asm
                                           ; Description:                                                                   C:\MCC18\SRC\TRADIT~1\MATH\ltFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\ltFP.asm
                                           ;         Test if fA < fB                                                        C:\MCC18\SRC\TRADIT~1\MATH\ltFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\ltFP.asm
                                           ; Input:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\ltFP.asm
                                           ;         IEEE 754 format floats fAexp...fA2, fBexp...fB2.                       C:\MCC18\SRC\TRADIT~1\MATH\ltFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\ltFP.asm
                                           ; Output:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\ltFP.asm
                                           ;         WREG = 1 if fA < fB                                                    C:\MCC18\SRC\TRADIT~1\MATH\ltFP.asm
                                           ;         WREG = 0 if fA >= fB or either fA or Fb is a NaN                       C:\MCC18\SRC\TRADIT~1\MATH\ltFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\ltFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\ltFP.asm
                                           ;---------------------------------------------------------------------------------------------- C:\MCC18\SRC\TRADIT~1\MATH\ltFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\ltFP.asm
                                                     GLOBAL TALTB32                                                         C:\MCC18\SRC\TRADIT~1\MATH\ltFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\ltFP.asm
                                                     EXTERN __FpCompare                                                     C:\MCC18\SRC\TRADIT~1\MATH\ltFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\ltFP.asm
                                           PROG    CODE                                                                     C:\MCC18\SRC\TRADIT~1\MATH\ltFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\ltFP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\ltFP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\ltFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\ltFP.asm
                                           TALTB32:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\ltFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\ltFP.asm
                                           ;------ Make comparison                                                          C:\MCC18\SRC\TRADIT~1\MATH\ltFP.asm
                                           ;         fFlgs set as follows:                                                  C:\MCC18\SRC\TRADIT~1\MATH\ltFP.asm
                                           ;         FLG_NaN_AorB        => NaN                                             C:\MCC18\SRC\TRADIT~1\MATH\ltFP.asm
                                           ;         FLG_ZERO_A          => A == B                                          C:\MCC18\SRC\TRADIT~1\MATH\ltFP.asm
                                           ;         FLG_SIGN_A          => A < B                                           C:\MCC18\SRC\TRADIT~1\MATH\ltFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\ltFP.asm
0033a0   ecd9     CALL      0x33b2,0x0               call      __FpCompare                                                  C:\MCC18\SRC\TRADIT~1\MATH\ltFP.asm
0033a2   f019                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\ltFP.asm
0033a4   b63e     BTFSC     0x3e,0x3,0x0             btfsc     fFlg,FLG_NaN_AorB                                            C:\MCC18\SRC\TRADIT~1\MATH\ltFP.asm
0033a6   0c00     RETLW     0x0                      retlw     0                   ; NaN detected                           C:\MCC18\SRC\TRADIT~1\MATH\ltFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\ltFP.asm
0033a8   b03e     BTFSC     0x3e,0x0,0x0             btfsc     fFlg,FLG_ZERO_A                                              C:\MCC18\SRC\TRADIT~1\MATH\ltFP.asm
0033aa   0c00     RETLW     0x0                      retlw     0                   ; fA == fB                               C:\MCC18\SRC\TRADIT~1\MATH\ltFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\ltFP.asm
0033ac   a43e     BTFSS     0x3e,0x2,0x0             btfss     fFlg,FLG_SIGN_A                                              C:\MCC18\SRC\TRADIT~1\MATH\ltFP.asm
0033ae   0c00     RETLW     0x0                      retlw     0                   ; fA > fB                                C:\MCC18\SRC\TRADIT~1\MATH\ltFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\ltFP.asm
0033b0   0c01     RETLW     0x1                      retlw     1                   ; fA < fB                                C:\MCC18\SRC\TRADIT~1\MATH\ltFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\ltFP.asm
                                                     END                                                                    C:\MCC18\SRC\TRADIT~1\MATH\ltFP.asm
                                           #include <errno.h>                                                               C:\mcc18\src\TRADIT~1\stdclib\PackMath.c
                                           #include <math.h>                                                                C:\mcc18\src\TRADIT~1\stdclib\PackMath.c
                                           #include "_mathlib.h"                                                            C:\mcc18\src\TRADIT~1\stdclib\PackMath.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\PackMath.c
005064   cfd9     MOVFF     0xfd9,0xfe6    void _PackMath( tIEEE *pIEEE, tUfloat32 *pX)                                     C:\mcc18\src\TRADIT~1\stdclib\PackMath.c
005066   ffe6                                                                                                               
005068   cfda     MOVFF     0xfda,0xfe6                                                                                     
00506a   ffe6                                                                                                               
00506c   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00506e   ffd9                                                                                                               
005070   cfe2     MOVFF     0xfe2,0xfda                                                                                     
005072   ffda                                                                                                               
                                           {                                                                                C:\mcc18\src\TRADIT~1\stdclib\PackMath.c
005074   d85b     RCALL     0x512c             if(pIEEE->exp > 0xFE )                                                       C:\mcc18\src\TRADIT~1\stdclib\PackMath.c
005076   3401     RLCF      0x1,0x0,0x0                                                                                     
005078   e211     BC        0x509c                                                                                          
00507a   5000     MOVF      0x0,0x0,0x0                                                                                     
00507c   08fe     SUBLW     0xfe                                                                                            
00507e   0e00     MOVLW     0x0                                                                                             
005080   5401     SUBFWB    0x1,0x0,0x0                                                                                     
005082   e20c     BC        0x509c                                                                                          
                                                   {                                                                        C:\mcc18\src\TRADIT~1\stdclib\PackMath.c
                                                   // Overflow - return +/- infinity                                        C:\mcc18\src\TRADIT~1\stdclib\PackMath.c
005084   d876     RCALL     0x5172                 errno = ERANGE;                                                          C:\mcc18\src\TRADIT~1\stdclib\PackMath.c
005172   0e22     MOVLW     0x22                                                                                            
005174   0102     MOVLB     0x2                                                                                             
005176   6f68     MOVWF     0x68,0x1                                                                                        
005178   6b69     CLRF      0x69,0x1                                                                                        
005086   e005     BZ        0x5092                 if(pIEEE->sgn)                                                           C:\mcc18\src\TRADIT~1\stdclib\PackMath.c
00517a   efa5     GOTO      0x514a                                                                                          
00517c   f028                                                                                                               
005088   d86c     RCALL     0x5162                     pX->l = NEGINF;                                                      C:\mcc18\src\TRADIT~1\stdclib\PackMath.c
00508a   0e80     MOVLW     0x80                                                                                            
00508c   6eee     MOVWF     0xee,0x0                                                                                        
00508e   68ee     SETF      0xee,0x0                                                                                        
005090   d047     BRA       0x5120                 else                                                                     C:\mcc18\src\TRADIT~1\stdclib\PackMath.c
005092   d867     RCALL     0x5162                     pX->l = POSINF;                                                      C:\mcc18\src\TRADIT~1\stdclib\PackMath.c
005094   0e80     MOVLW     0x80                                                                                            
005096   6eee     MOVWF     0xee,0x0                                                                                        
005098   0e7f     MOVLW     0x7f                                                                                            
005162   dfec     RCALL     0x513c                                                                                          
005164   6aee     CLRF      0xee,0x0                                                                                        
005166   6aee     CLRF      0xee,0x0                                                                                        
005168   0012     RETURN    0x0                                                                                             
                                                   }                                                                        C:\mcc18\src\TRADIT~1\stdclib\PackMath.c
00509a   d00e     BRA       0x50b8             else if(pIEEE->exp < 1 )                                                     C:\mcc18\src\TRADIT~1\stdclib\PackMath.c
00509c   d847     RCALL     0x512c                                                                                          
00509e   90d8     BCF       0xd8,0x0,0x0                                                                                    
0050a0   5001     MOVF      0x1,0x0,0x0                                                                                     
0050a2   e604     BN        0x50ac                                                                                          
0050a4   0e01     MOVLW     0x1                                                                                             
0050a6   5c00     SUBWF     0x0,0x0,0x0                                                                                     
0050a8   0e00     MOVLW     0x0                                                                                             
0050aa   5801     SUBWFB    0x1,0x0,0x0                                                                                     
0050ac   e20b     BC        0x50c4                                                                                          
                                                   {                                                                        C:\mcc18\src\TRADIT~1\stdclib\PackMath.c
                                                   // Underflow - return +/- Zero                                           C:\mcc18\src\TRADIT~1\stdclib\PackMath.c
0050ae   d861     RCALL     0x5172                 errno = ERANGE;                                                          C:\mcc18\src\TRADIT~1\stdclib\PackMath.c
0050b0   e005     BZ        0x50bc                 if(pIEEE->sgn)                                                           C:\mcc18\src\TRADIT~1\stdclib\PackMath.c
0050b2   d857     RCALL     0x5162                     pX->l = NEGZERO;                                                     C:\mcc18\src\TRADIT~1\stdclib\PackMath.c
0050b4   6aee     CLRF      0xee,0x0                                                                                        
0050b6   0e80     MOVLW     0x80                                                                                            
0050b8   6eee     MOVWF     0xee,0x0                                                                                        
0050ba   d032     BRA       0x5120                 else                                                                     C:\mcc18\src\TRADIT~1\stdclib\PackMath.c
0050bc   d852     RCALL     0x5162                     pX->l = POSZERO;                                                     C:\mcc18\src\TRADIT~1\stdclib\PackMath.c
0050be   6aee     CLRF      0xee,0x0                                                                                        
0050c0   6aee     CLRF      0xee,0x0                                                                                        
00513c   0efa     MOVLW     0xfa                                                                                            
00513e   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
005140   ffe9                                                                                                               
005142   0efb     MOVLW     0xfb                                                                                            
005144   cfdb     MOVFF     0xfdb,0xfea                                                                                     
005146   ffea                                                                                                               
005148   0012     RETURN    0x0                                                                                             
                                                   }                                                                        C:\mcc18\src\TRADIT~1\stdclib\PackMath.c
0050c2   d02e     BRA       0x5120             else                                                                         C:\mcc18\src\TRADIT~1\stdclib\PackMath.c
                                                   {                                                                        C:\mcc18\src\TRADIT~1\stdclib\PackMath.c
0050c4   d847     RCALL     0x5154                 pX->l = pIEEE->sig;                                                      C:\mcc18\src\TRADIT~1\stdclib\PackMath.c
0050c6   cfee     MOVFF     0xfee,0x0                                                                                       
0050c8   f000                                                                                                               
0050ca   cfee     MOVFF     0xfee,0x1                                                                                       
0050cc   f001                                                                                                               
0050ce   cfee     MOVFF     0xfee,0x2                                                                                       
0050d0   f002                                                                                                               
0050d2   cfef     MOVFF     0xfef,0x3                                                                                       
0050d4   f003                                                                                                               
0050d6   d832     RCALL     0x513c                                                                                          
0050d8   c000     MOVFF     0x0,0xfee                                                                                       
0050da   ffee                                                                                                               
0050dc   c001     MOVFF     0x1,0xfee                                                                                       
0050de   ffee                                                                                                               
0050e0   c002     MOVFF     0x2,0xfee                                                                                       
0050e2   ffee                                                                                                               
0050e4   c003     MOVFF     0x3,0xfee                                                                                       
0050e6   ffee                                                                                                               
0050e8   d821     RCALL     0x512c                 if(pIEEE->exp & 1)                                                       C:\mcc18\src\TRADIT~1\stdclib\PackMath.c
0050ea   5000     MOVF      0x0,0x0,0x0                                                                                     
0050ec   0b01     ANDLW     0x1                                                                                             
0050ee   e005     BZ        0x50fa                                                                                          
0050f0   d825     RCALL     0x513c                     pX->ub[2] |= 0x80;                                                   C:\mcc18\src\TRADIT~1\stdclib\PackMath.c
0050f2   0e02     MOVLW     0x2                                                                                             
0050f4   d83a     RCALL     0x516a                                                                                          
0050f6   8eef     BSF       0xef,0x7,0x0                                                                                    
0050f8   d004     BRA       0x5102                 else                                                                     C:\mcc18\src\TRADIT~1\stdclib\PackMath.c
0050fa   d820     RCALL     0x513c                     pX->ub[2] &= 0x7F;                                                   C:\mcc18\src\TRADIT~1\stdclib\PackMath.c
0050fc   0e02     MOVLW     0x2                                                                                             
0050fe   d835     RCALL     0x516a                                                                                          
005100   9eef     BCF       0xef,0x7,0x0                                                                                    
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\PackMath.c
005102   d814     RCALL     0x512c                 pX->ub[3] = pIEEE->exp >> 1;                                             C:\mcc18\src\TRADIT~1\stdclib\PackMath.c
005104   90d8     BCF       0xd8,0x0,0x0                                                                                    
005106   3201     RRCF      0x1,0x1,0x0                                                                                     
005108   3200     RRCF      0x0,0x1,0x0                                                                                     
00510a   d818     RCALL     0x513c                                                                                          
00510c   0e03     MOVLW     0x3                                                                                             
00510e   d82d     RCALL     0x516a                                                                                          
005110   c000     MOVFF     0x0,0xfef                                                                                       
005112   ffef                                                                                                               
00512c   d813     RCALL     0x5154                                                                                          
00512e   0e04     MOVLW     0x4                                                                                             
005130   d81c     RCALL     0x516a                                                                                          
005132   cfee     MOVFF     0xfee,0x0                                                                                       
005134   f000                                                                                                               
005136   cfef     MOVFF     0xfef,0x1                                                                                       
005138   f001                                                                                                               
00513a   0012     RETURN    0x0                                                                                             
005114   d81a     RCALL     0x514a                 if(pIEEE->sgn)                                                           C:\mcc18\src\TRADIT~1\stdclib\PackMath.c
005116   e004     BZ        0x5120                                                                                          
00514a   d804     RCALL     0x5154                                                                                          
00514c   0e06     MOVLW     0x6                                                                                             
00514e   d80d     RCALL     0x516a                                                                                          
005150   50ef     MOVF      0xef,0x0,0x0                                                                                    
005152   0012     RETURN    0x0                                                                                             
005154   0efc     MOVLW     0xfc                                                                                            
005156   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
005158   ffe9                                                                                                               
00515a   0efd     MOVLW     0xfd                                                                                            
00515c   cfdb     MOVFF     0xfdb,0xfea                                                                                     
00515e   ffea                                                                                                               
005160   0012     RETURN    0x0                                                                                             
005118   d811     RCALL     0x513c                     pX->ub[3] |= 0x80;                                                   C:\mcc18\src\TRADIT~1\stdclib\PackMath.c
00511a   0e03     MOVLW     0x3                                                                                             
00511c   d826     RCALL     0x516a                                                                                          
00511e   8eef     BSF       0xef,0x7,0x0                                                                                    
00516a   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
00516c   0e00     MOVLW     0x0                                                                                             
00516e   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
005170   0012     RETURN    0x0                                                                                             
                                                   }                                                                        C:\mcc18\src\TRADIT~1\stdclib\PackMath.c
005120   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mcc18\src\TRADIT~1\stdclib\PackMath.c
005122   cfe5     MOVFF     0xfe5,0xfda                                                                                     
005124   ffda                                                                                                               
005126   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
005128   ffd9                                                                                                               
00512a   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\PackMath.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\PackMath.c
                                           //---------------------------------------------------------------------------------------------- C:\mcc18\src\TRADIT~1\stdclib\UnpkMath.c
                                           // _UnpkMath(tUfloat32 X, tIEEE *pIEEE)                                          C:\mcc18\src\TRADIT~1\stdclib\UnpkMath.c
                                           //                                                                               C:\mcc18\src\TRADIT~1\stdclib\UnpkMath.c
                                           // Input: X is afloating point number to be unpacked                             C:\mcc18\src\TRADIT~1\stdclib\UnpkMath.c
                                           //                                                                               C:\mcc18\src\TRADIT~1\stdclib\UnpkMath.c
                                           // Output: X is unpacked into *pIEEE                                             C:\mcc18\src\TRADIT~1\stdclib\UnpkMath.c
                                           //      Special condition flags are returned as FTYPE                            C:\mcc18\src\TRADIT~1\stdclib\UnpkMath.c
                                           //                                                                               C:\mcc18\src\TRADIT~1\stdclib\UnpkMath.c
                                           // Description: _UnpkMath is a support routine for math library                  C:\mcc18\src\TRADIT~1\stdclib\UnpkMath.c
                                           //      X is analysed for special condition flags                                C:\mcc18\src\TRADIT~1\stdclib\UnpkMath.c
                                           //      If X is an NaN, either signalling or quiet, errno is set to EDOM         C:\mcc18\src\TRADIT~1\stdclib\UnpkMath.c
                                           //          and a quiet NaN is returned in *pIEEE.                               C:\mcc18\src\TRADIT~1\stdclib\UnpkMath.c
                                           //                                                                               C:\mcc18\src\TRADIT~1\stdclib\UnpkMath.c
                                           //      X is unpacked into *pIEEE such that                                      C:\mcc18\src\TRADIT~1\stdclib\UnpkMath.c
                                           //          sig: significant with leading 1 restored                             C:\mcc18\src\TRADIT~1\stdclib\UnpkMath.c
                                           //          exp: biased exponent,, i.e. bias not removed                         C:\mcc18\src\TRADIT~1\stdclib\UnpkMath.c
                                           //          sgn: if X has sign bit set => sgn = 1 else sgn = 0                   C:\mcc18\src\TRADIT~1\stdclib\UnpkMath.c
                                           //                                                                               C:\mcc18\src\TRADIT~1\stdclib\UnpkMath.c
                                           //---------------------------------------------------------------------------------------------- C:\mcc18\src\TRADIT~1\stdclib\UnpkMath.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\UnpkMath.c
                                           #include <errno.h>                                                               C:\mcc18\src\TRADIT~1\stdclib\UnpkMath.c
                                           #include <math.h>                                                                C:\mcc18\src\TRADIT~1\stdclib\UnpkMath.c
                                           #include "_mathlib.h"                                                            C:\mcc18\src\TRADIT~1\stdclib\UnpkMath.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\UnpkMath.c
004f48   cfd9     MOVFF     0xfd9,0xfe6    FTYPE _UnpkMath(tUfloat32 X, tIEEE *pIEEE)                                       C:\mcc18\src\TRADIT~1\stdclib\UnpkMath.c
004f4a   ffe6                                                                                                               
004f4c   cfda     MOVFF     0xfda,0xfe6                                                                                     
004f4e   ffe6                                                                                                               
004f50   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004f52   ffd9                                                                                                               
004f54   cfe2     MOVFF     0xfe2,0xfda                                                                                     
004f56   ffda                                                                                                               
004f58   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\mcc18\src\TRADIT~1\stdclib\UnpkMath.c
                                               FTYPE ftype;                                                                 C:\mcc18\src\TRADIT~1\stdclib\UnpkMath.c
004f5a   6800     SETF      0x0,0x0            pIEEE->sig = X.l & 0x007FFFFF;                                               C:\mcc18\src\TRADIT~1\stdclib\UnpkMath.c
004f5c   6801     SETF      0x1,0x0                                                                                         
004f5e   0e7f     MOVLW     0x7f                                                                                            
004f60   6e02     MOVWF     0x2,0x0                                                                                         
004f62   6a03     CLRF      0x3,0x0                                                                                         
004f64   50d9     MOVF      0xd9,0x0,0x0                                                                                    
004f66   0ffa     ADDLW     0xfa                                                                                            
004f68   6ee9     MOVWF     0xe9,0x0                                                                                        
004f6a   0eff     MOVLW     0xff                                                                                            
004f6c   20da     ADDWFC    0xda,0x0,0x0                                                                                    
004f6e   6eea     MOVWF     0xea,0x0                                                                                        
004f70   50ee     MOVF      0xee,0x0,0x0                                                                                    
004f72   1600     ANDWF     0x0,0x1,0x0                                                                                     
004f74   50ee     MOVF      0xee,0x0,0x0                                                                                    
004f76   1601     ANDWF     0x1,0x1,0x0                                                                                     
004f78   50ee     MOVF      0xee,0x0,0x0                                                                                    
004f7a   1602     ANDWF     0x2,0x1,0x0                                                                                     
004f7c   50ee     MOVF      0xee,0x0,0x0                                                                                    
004f7e   1603     ANDWF     0x3,0x1,0x0                                                                                     
004f80   d86a     RCALL     0x5056                                                                                          
004f82   c000     MOVFF     0x0,0xfee                                                                                       
004f84   ffee                                                                                                               
004f86   c001     MOVFF     0x1,0xfee                                                                                       
004f88   ffee                                                                                                               
004f8a   c002     MOVFF     0x2,0xfee                                                                                       
004f8c   ffee                                                                                                               
004f8e   c003     MOVFF     0x3,0xfee                                                                                       
004f90   ffee                                                                                                               
004f92   0efd     MOVLW     0xfd               pIEEE->sgn = X.ub[3]& 0x80                                                   C:\mcc18\src\TRADIT~1\stdclib\UnpkMath.c
004f94   50db     MOVF      0xdb,0x0,0x0                                                                                    
004fa2   d859     RCALL     0x5056                                                                                          
004fa4   0e06     MOVLW     0x6                                                                                             
004fa6   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
004fa8   0e00     MOVLW     0x0                                                                                             
004faa   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
004f96   0b80     ANDLW     0x80                            ? 1                                                             C:\mcc18\src\TRADIT~1\stdclib\UnpkMath.c
004f9a   0e01     MOVLW     0x1                                                                                             
004f98   e002     BZ        0x4f9e                          : 0;                                                            C:\mcc18\src\TRADIT~1\stdclib\UnpkMath.c
004f9c   d001     BRA       0x4fa0                                                                                          
004f9e   0e00     MOVLW     0x0                                                                                             
004fa0   6ee6     MOVWF     0xe6,0x0                                                                                        
004fac   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004fae   50e7     MOVF      0xe7,0x0,0x0                                                                                    
004fb0   6eef     MOVWF     0xef,0x0                                                                                        
004fb2   0efc     MOVLW     0xfc               X.us[1]  = X.us[1] << 1;                                                     C:\mcc18\src\TRADIT~1\stdclib\UnpkMath.c
004fb4   cfdb     MOVFF     0xfdb,0x0                                                                                       
004fb6   f000                                                                                                               
004fb8   0efd     MOVLW     0xfd                                                                                            
004fba   cfdb     MOVFF     0xfdb,0x1                                                                                       
004fbc   f001                                                                                                               
004fbe   90d8     BCF       0xd8,0x0,0x0                                                                                    
004fc0   3600     RLCF      0x0,0x1,0x0                                                                                     
004fc2   3601     RLCF      0x1,0x1,0x0                                                                                     
004fc4   0efc     MOVLW     0xfc                                                                                            
004fc6   c000     MOVFF     0x0,0xfdb                                                                                       
004fc8   ffdb                                                                                                               
004fca   0efd     MOVLW     0xfd                                                                                            
004fcc   c001     MOVFF     0x1,0xfdb                                                                                       
004fce   ffdb                                                                                                               
004fd0   50db     MOVF      0xdb,0x0,0x0       pIEEE->exp = X.ub[3];                                                        C:\mcc18\src\TRADIT~1\stdclib\UnpkMath.c
004fd2   6ee6     MOVWF     0xe6,0x0                                                                                        
004fd4   d840     RCALL     0x5056                                                                                          
004fd6   0e04     MOVLW     0x4                                                                                             
004fd8   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
004fda   0e00     MOVLW     0x0                                                                                             
004fdc   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
004fde   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004fe0   50e7     MOVF      0xe7,0x0,0x0                                                                                    
004fe2   6eee     MOVWF     0xee,0x0                                                                                        
004fe4   6aed     CLRF      0xed,0x0                                                                                        
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\UnpkMath.c
004fe6   0efd     MOVLW     0xfd               if (X.ub[3] == 255)                                                          C:\mcc18\src\TRADIT~1\stdclib\UnpkMath.c
004fe8   50db     MOVF      0xdb,0x0,0x0                                                                                    
004fea   6e00     MOVWF     0x0,0x0                                                                                         
004fec   6a01     CLRF      0x1,0x0                                                                                         
004fee   0eff     MOVLW     0xff                                                                                            
004ff0   1800     XORWF     0x0,0x0,0x0                                                                                     
004ff2   e118     BNZ       0x5024                                                                                          
004ff4   5001     MOVF      0x1,0x0,0x0                                                                                     
004ff6   e116     BNZ       0x5024                                                                                          
                                                   {                                                                        C:\mcc18\src\TRADIT~1\stdclib\UnpkMath.c
004ff8   d82e     RCALL     0x5056                 if (pIEEE->sig != 0)                                                     C:\mcc18\src\TRADIT~1\stdclib\UnpkMath.c
004ffa   cfee     MOVFF     0xfee,0x0                                                                                       
004ffc   f000                                                                                                               
004ffe   cfee     MOVFF     0xfee,0x1                                                                                       
005000   f001                                                                                                               
005002   cfee     MOVFF     0xfee,0x2                                                                                       
005004   f002                                                                                                               
005006   cfef     MOVFF     0xfef,0x3                                                                                       
005008   f003                                                                                                               
00500a   5000     MOVF      0x0,0x0,0x0                                                                                     
00500c   1001     IORWF     0x1,0x0,0x0                                                                                     
00500e   1002     IORWF     0x2,0x0,0x0                                                                                     
005010   1003     IORWF     0x3,0x0,0x0                                                                                     
005012   e006     BZ        0x5020                                                                                          
                                                       {                                                                    C:\mcc18\src\TRADIT~1\stdclib\UnpkMath.c
005014   0e21     MOVLW     0x21                       errno = EDOM;                                                        C:\mcc18\src\TRADIT~1\stdclib\UnpkMath.c
005016   0102     MOVLB     0x2                                                                                             
005018   6f68     MOVWF     0x68,0x1                                                                                        
00501a   6b69     CLRF      0x69,0x1                                                                                        
00501c   0e80     MOVLW     0x80                       ftype = _NANTYPE;                                                    C:\mcc18\src\TRADIT~1\stdclib\UnpkMath.c
                                                       }                                                                    C:\mcc18\src\TRADIT~1\stdclib\UnpkMath.c
00501e   d00b     BRA       0x5036                 else                                                                     C:\mcc18\src\TRADIT~1\stdclib\UnpkMath.c
005020   0e04     MOVLW     0x4                        ftype = _INFTYPE;                                                    C:\mcc18\src\TRADIT~1\stdclib\UnpkMath.c
                                                   }                                                                        C:\mcc18\src\TRADIT~1\stdclib\UnpkMath.c
005022   d009     BRA       0x5036             else if(X.ub[3] == 0)                                                        C:\mcc18\src\TRADIT~1\stdclib\UnpkMath.c
005024   0efd     MOVLW     0xfd                                                                                            
005026   50db     MOVF      0xdb,0x0,0x0                                                                                    
005028   e108     BNZ       0x503a                                                                                          
                                                   {                                                                        C:\mcc18\src\TRADIT~1\stdclib\UnpkMath.c
                                                   // Treat subnormals as zero                                              C:\mcc18\src\TRADIT~1\stdclib\UnpkMath.c
00502a   d815     RCALL     0x5056                 pIEEE->sig = 0;                                                          C:\mcc18\src\TRADIT~1\stdclib\UnpkMath.c
00502c   6aee     CLRF      0xee,0x0                                                                                        
00502e   6aee     CLRF      0xee,0x0                                                                                        
005030   6aee     CLRF      0xee,0x0                                                                                        
005032   6aee     CLRF      0xee,0x0                                                                                        
005034   0e01     MOVLW     0x1                    ftype = _ZEROTYPE;                                                       C:\mcc18\src\TRADIT~1\stdclib\UnpkMath.c
005036   6edf     MOVWF     0xdf,0x0                                                                                        
                                                   }                                                                        C:\mcc18\src\TRADIT~1\stdclib\UnpkMath.c
005038   d006     BRA       0x5046             else                                                                         C:\mcc18\src\TRADIT~1\stdclib\UnpkMath.c
                                                   {                                                                        C:\mcc18\src\TRADIT~1\stdclib\UnpkMath.c
00503a   0e02     MOVLW     0x2                    ftype = _FINITETYPE;                                                     C:\mcc18\src\TRADIT~1\stdclib\UnpkMath.c
00503c   6edf     MOVWF     0xdf,0x0                                                                                        
00503e   d80b     RCALL     0x5056                 pIEEE->sig |= 0x00800000;      // restore implicit leading 1             C:\mcc18\src\TRADIT~1\stdclib\UnpkMath.c
005040   52ee     MOVF      0xee,0x1,0x0                                                                                    
005042   52ee     MOVF      0xee,0x1,0x0                                                                                    
005044   8eee     BSF       0xee,0x7,0x0                                                                                    
005056   0ef8     MOVLW     0xf8                                                                                            
005058   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
00505a   ffe9                                                                                                               
00505c   0ef9     MOVLW     0xf9                                                                                            
00505e   cfdb     MOVFF     0xfdb,0xfea                                                                                     
005060   ffea                                                                                                               
005062   0012     RETURN    0x0                                                                                             
                                                   }                                                                        C:\mcc18\src\TRADIT~1\stdclib\UnpkMath.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\UnpkMath.c
005046   50df     MOVF      0xdf,0x0,0x0       return(ftype);                                                               C:\mcc18\src\TRADIT~1\stdclib\UnpkMath.c
005048   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mcc18\src\TRADIT~1\stdclib\UnpkMath.c
00504a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00504c   cfe5     MOVFF     0xfe5,0xfda                                                                                     
00504e   ffda                                                                                                               
005050   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
005052   ffd9                                                                                                               
005054   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\UnpkMath.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\UnpkMath.c
                                           #include <P18CXXX.INC>           ; general Golden Gate definitions               C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                           #include "fpmacros.inc"                                                          C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ; Macros, constants, defines and variable externs used by float routines.        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;        radix dec                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Uses traditional global names                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN FPFLAGS                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB7                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB6                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB5                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB4                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fFlg  FPFLAGS                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA3    AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA2    AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA1    AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA0    AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fAexp  AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB3    BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB2    BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB1    BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB0    BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fBexp  BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT1     TEMPB3                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT0     TEMPB2                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW3     TEMPB1                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW2     TEMPB0                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW1     AARGB7                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW0     AARGB6                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexp   AARGB5                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexpHi AARGB4                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA0 AARGB0   ;msb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA1 AARGB1                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA2 AARGB2                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA3 AARGB3   ;lsb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_BIAS        equ      127    ; exponent bias                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_SMIN        equ     -149    ; min unbiased subnormal exponent                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMIN        equ     -126    ; min unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMAX        equ      127    ; max unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Flags for both A and B arguments                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_A    0  ; A: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_A     1  ; A: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_A    2  ; A: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_NaN_AorB  3  ; A or B is a NaN  (A or B)                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_B    4  ; B: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_B     5  ; B: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_B    6  ; B: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_ABW  7  ; ABW: Sign (A xor B) or W                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Exchange macro Var0, Var1                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0033f8   5037     MOVF      0x37,0x0,0x0           movf    Var0,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003400   5036     MOVF      0x36,0x0,0x0                                                                                    
003408   5035     MOVF      0x35,0x0,0x0                                                                                    
003410   5034     MOVF      0x34,0x0,0x0                                                                                    
0033fa   c03c     MOVFF     0x3c,0x37              movff   Var1,Var0                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0033fc   f037                                                                                                               
003402   c03b     MOVFF     0x3b,0x36                                                                                       
003404   f036                                                                                                               
00340a   c03a     MOVFF     0x3a,0x35                                                                                       
00340c   f035                                                                                                               
003412   c039     MOVFF     0x39,0x34                                                                                       
003414   f034                                                                                                               
0033fe   6e3c     MOVWF     0x3c,0x0               movwf   Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003406   6e3b     MOVWF     0x3b,0x0                                                                                        
00340e   6e3a     MOVWF     0x3a,0x0                                                                                        
003416   6e39     MOVWF     0x39,0x0                                                                                        
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Clear4 macro Var0, Var1, Var2, Var3                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var2                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var3                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003450   3634     RLCF      0x34,0x1,0x0           rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003452   3635     RLCF      0x35,0x1,0x0           rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003454   3636     RLCF      0x36,0x1,0x0           rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Logical shift                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4 macro Var0,Var1,Var2,Var3                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bcf     STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR2C macro Var0,Var1                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003438   323b     RRCF      0x3b,0x1,0x0           rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00343a   323a     RRCF      0x3a,0x1,0x0           rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00343c   3239     RRCF      0x39,0x1,0x0           rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C invalid                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   infsnz  Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Decrement 2 bytes. WREG unchanged.                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Dec2 macro Var0, Var1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   decf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   decf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg5 macro Var0,Var1,Var2,Var3,Var4                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add32 macro AVar0,AVar1,AVar2, BVar0,BVar1                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add41 macro AVar0,AVar1,AVar2,AVar3, BVar0                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add42 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub2 macro AVar0,AVar1, BVar0,BVar1                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub3 macro AVar0,AVar1,AVar2, BVar0,BVar1,BVar2                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00343e   5039     MOVF      0x39,0x0,0x0           movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003440   5e34     SUBWF     0x34,0x1,0x0           subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003442   503a     MOVF      0x3a,0x0,0x0           movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003444   5a35     SUBWFB    0x35,0x1,0x0           subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003446   503b     MOVF      0x3b,0x0,0x0           movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003448   5a36     SUBWFB    0x36,0x1,0x0           subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; (PRODL,PRODH) = AVar*Bvar                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Mul2 macro AVar,BVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   mulwf   AVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== R E L  B R A N C H E S ===================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit set                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braSet macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003424   b43e     BTFSC     0x3e,0x2,0x0           btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00344a   be36     BTFSC     0x36,0x7,0x0                                                                                    
003426   d003     BRA       0x342e                 bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00344c   d7ea     BRA       0x3422                                                                                          
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit clear                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braClr macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0033c0   ae3e     BTFSS     0x3e,0x7,0x0           btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0033c4   a03e     BTFSS     0x3e,0x0,0x0                                                                                    
0033c8   a83e     BTFSS     0x3e,0x4,0x0                                                                                    
0033f0   a0d8     BTFSS     0xd8,0x0,0x0                                                                                    
0033c2   d008     BRA       0x33d4                 bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
0033c6   d004     BRA       0x33d0                                                                                          
0033ca   d002     BRA       0x33d0                                                                                          
0033f2   d002     BRA       0x33f8                                                                                          
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqZ macro Var,jZero                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jZero                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneZ macro Var,jNotZero                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jNotZero                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var <= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfsgt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var >= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfslt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 == Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 != Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfslt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfsgt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFltF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   STATUS,Z                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bc      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== A B S O L U T E    B R A N C H E S =======================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit set                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoSet macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit clear                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoClr macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if F == Lit                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFeqL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F != Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFneL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F >= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFgeL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfslt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F <= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFleL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfsgt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                           ;***********************************************************************         C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                           ;***********************************************************************         C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                           ;-----------------------------------------------------------------------;        C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                           ; __FpCompare                                                                    C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                           ; Description:                                                                   C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                           ;       Compares fA to fB                                                        C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                           ; Input:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                           ;         IEEE 754 format float in fAexp...fA2.                                  C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                           ;         Same for fBexp...fB2.                                                  C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                           ; Output:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                           ;         fFlgs set as follows:                                                  C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                           ;         FLG_NaN_AorB        => NaN                                             C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                           ;         FLG_ZERO_A          => A == B                                          C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                           ;         FLG_SIGN_A          => A < B                                           C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                           ; Notes:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                           ;         Flags must be checked in above order!                                  C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                           ;         If TEST_FOR_SUBNORMALS is defined differences will be tested           C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                           ;         for subnormals and treated as equal.                                   C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                           ;---------------------------------------------------------------------------------------------- C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                           #define TEST_FOR_SUBNORMALS                                                      C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                     GLOBAL __FpCompare                                                     C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                     EXTERN __FpUnPackA, __FpUnPackB                                        C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                           PROG    CODE                                                                     C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                           __FpCompare                                                                      C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                           ;------ Unpack the operand                                                       C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
0033b2   6a3e     CLRF      0x3e,0x0                 clrf      fFlg                                                         C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
0033b4   ec7c     CALL      0x32f8,0x0               call      __FpUnPackA                                                  C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
0033b6   f019                                                                                                               
0033b8   ec94     CALL      0x3328,0x0               call      __FpUnPackB                                                  C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
0033ba   f019                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
0033bc   b63e     BTFSC     0x3e,0x3,0x0             btfsc     fFlg,FLG_NaN_AorB                                            C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
0033be   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                     braClr    fFlg,FLG_SIGN_ABW,jSignsEQ                                   C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                     ;; Signs differ thus:                                                  C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                     ;; If both are (+/-0) then they are equal by IEEE                      C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                     ;;        if A >= 0 => A > B else A < B                                C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                     braClr    fFlg,FLG_ZERO_A,jBothNotZero                                 C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                     braClr    fFlg,FLG_ZERO_B,jBothNotZero                                 C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                     ;; Both are zero                                                       C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
0033cc   803e     BSF       0x3e,0x0,0x0             bsf       fFlg,FLG_ZERO_A                                              C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
0033ce   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                           jBothNotZero:                                                                    C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
0033d0   903e     BCF       0x3e,0x0,0x0             bcf       fFlg,FLG_ZERO_A                                              C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
0033d2   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                           #ifdef TEST_FOR_SUBNORMALS                                                       C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                           jSignsEQ:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
0033d4   503c     MOVF      0x3c,0x0,0x0             movf      fBexp,W                                                      C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
0033d6   5c37     SUBWF     0x37,0x0,0x0             subwf     fAexp,W                                                      C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
0033d8   e10b     BNZ       0x33f0                   bnz       jNE                                                          C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
0033da   503b     MOVF      0x3b,0x0,0x0             movf      fB0,W                                                        C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
0033dc   5c36     SUBWF     0x36,0x0,0x0             subwf     fA0,W                                                        C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
0033de   e108     BNZ       0x33f0                   bnz       jNE                                                          C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
0033e0   503a     MOVF      0x3a,0x0,0x0             movf      fB1,W                                                        C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
0033e2   5c35     SUBWF     0x35,0x0,0x0             subwf     fA1,W                                                        C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
0033e4   e105     BNZ       0x33f0                   bnz       jNE                                                          C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
0033e6   5039     MOVF      0x39,0x0,0x0             movf      fB2,W                                                        C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
0033e8   5c34     SUBWF     0x34,0x0,0x0             subwf     fA2,W                                                        C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
0033ea   e102     BNZ       0x33f0                   bnz       jNE                                                          C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                           jEQ:                                                                             C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                     ;; fA == fB                                                            C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
0033ec   803e     BSF       0x3e,0x0,0x0             bsf       fFlg,FLG_ZERO_A                                              C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
0033ee   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                           jNE:                                                                             C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                     ;; Preserve order. Set ABW flag if fA >= fB.                           C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                     ;; Note that ABW flag must be 0 to be here                             C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                     braClr    STATUS,C,jExch                                               C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
0033f4   8e3e     BSF       0x3e,0x7,0x0             bsf       fFlg,FLG_SIGN_ABW                                            C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
0033f6   d010     BRA       0x3418                   bra       jNoExch                                                      C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                           jExch:                                                                           C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                     ;; exchange so that |fA| >= |fB|                                       C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                     Exchange  fAexp,fBexp                                                  C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                     Exchange  fA0,  fB0                                                    C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                     Exchange  fA1,  fB1                                                    C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                     Exchange  fA2,  fB2                                                    C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                           jNoExch:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
003418   503c     MOVF      0x3c,0x0,0x0             movf      fBexp,W                                                      C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
00341a   5c37     SUBWF     0x37,0x0,0x0             subwf     fAexp,W                                                      C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
00341c   e010     BZ        0x343e                   bz        jExpEQ                                                       C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                     ;; Exp not equal. Do they differ by more than a subnormal amount?      C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
00341e   0fff     ADDLW     0xff                     addlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
003420   e009     BZ        0x3434                   bz        jShift              ; fAexp = fBexp + 1                      C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                     ;; Exponents differ by more than 1 thus fA != fB                       C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                           jFinal:                                                                          C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
003422   903e     BCF       0x3e,0x0,0x0             bcf       fFlg,FLG_ZERO_A                                              C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                     braSet    fFlg,FLG_SIGN_A,jAisNeg                                      C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                     ;; fA & fB are not negative                                            C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
003428   ae3e     BTFSS     0x3e,0x7,0x0             btfss     fFlg,FLG_SIGN_ABW                                            C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
00342a   843e     BSF       0x3e,0x2,0x0             bsf       fFlg,FLG_SIGN_A   ;; fA < fB                                 C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
00342c   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                           jAisNeg:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                     ;; fA & fB are negative                                                C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
00342e   ae3e     BTFSS     0x3e,0x7,0x0             btfss     fFlg,FLG_SIGN_ABW                                            C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
003430   943e     BCF       0x3e,0x2,0x0             bcf       fFlg,FLG_SIGN_A   ;; fA > fB                                 C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
003432   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                           jShift:                                                                          C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                     ;; fAexp = fBexp + 1                                                   C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                     ;; Adjust to have same exponent                                        C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                     ;; Increment fAexp and shift significant to right                      C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
003434   2a3c     INCF      0x3c,0x1,0x0             incf      fBexp,F                                                      C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
003436   90d8     BCF       0xd8,0x0,0x0             bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                     ShiftR3C  fB2,fB1,fB0                                                  C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                           jExpEQ:                                                                          C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                     ;; exponents equal and |fA| > |fB|                                     C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                     ;; Determine they differ by more than a subnormal amount               C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                     Sub3      fA2,fA1,fA0,fB2,fB1,fB0                                      C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                     ;; fA now contains the positive difference. Note that fA != 0.         C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                     ;; Normalize while watching exponent                                   C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                           jRotate:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                     braSet    fA0,7,jFinal    ;; normalized                                C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
00344e   90d8     BCF       0xd8,0x0,0x0             bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                     ShiftL3C  fA2,fA1,fA0                                                  C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
003456   2e37     DECFSZ    0x37,0x1,0x0             decfsz    fAexp,F                                                      C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
003458   d7f8     BRA       0x344a                   bra       jRotate                                                      C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                    ;; Difference is at subnormal level => consider equal                   C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
00345a   d7c8     BRA       0x33ec                   bra       jEQ;                                                         C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                           #else                                                                            C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                           jSignsEQ:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                     movf      fBexp,W                                                      C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                     subwf     fAexp,W                                                      C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                     bnz       jAneB                                                        C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                     movf      fB0,W                                                        C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                     subwf     fA0,W                                                        C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                     bnz       jAneB                                                        C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                     movf      fB1,W                                                        C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                     subwf     fA1,W                                                        C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                     bnz       jAneB                                                        C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                     movf      fB2,W                                                        C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                     subwf     fA2,W                                                        C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                     bnz       jAneB                                                        C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                     ;; fA == fB                                                            C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                     bsf       fFlg,FLG_ZERO_A                                              C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                     return                                                                 C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                           jAneB:                                                                           C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                     bcf       fFlg,FLG_ZERO_A                                              C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                     braSet    fFlg,FLG_SIGN_A,jAisNeg                                      C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                     ;; fA & fB are not negative                                            C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                     btfss     STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                     bsf       fFlg,FLG_SIGN_A   ;; fA < fB                                 C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                     return                                                                 C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                           jAisNeg:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                     ;; fA & fB are negative                                                C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                     btfss     STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                     bcf       fFlg,FLG_SIGN_A   ;; fA > fB                                 C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                     return                                                                 C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                           #endif                                                                           C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                                     END                                                                    C:\MCC18\SRC\TRADIT~1\MATH\compFP.asm
                                           int errno;                                                                       C:\mcc18\src\TRADIT~1\stdclib\errno.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\errno.c
                                           //---------------------------------------------------------------------------------------------- C:\mcc18\src\TRADIT~1\stdclib\ldexp.c
                                           // float ldexp(float x, int n)                                                   C:\mcc18\src\TRADIT~1\stdclib\ldexp.c
                                           //                                                                               C:\mcc18\src\TRADIT~1\stdclib\ldexp.c
                                           // Description:                                                                  C:\mcc18\src\TRADIT~1\stdclib\ldexp.c
                                           //                                                                               C:\mcc18\src\TRADIT~1\stdclib\ldexp.c
                                           //         Load exponent function.                                               C:\mcc18\src\TRADIT~1\stdclib\ldexp.c
                                           //                                                                               C:\mcc18\src\TRADIT~1\stdclib\ldexp.c
                                           // Input:                                                                        C:\mcc18\src\TRADIT~1\stdclib\ldexp.c
                                           //         float x                                                               C:\mcc18\src\TRADIT~1\stdclib\ldexp.c
                                           //         int   n                                                               C:\mcc18\src\TRADIT~1\stdclib\ldexp.c
                                           //                                                                               C:\mcc18\src\TRADIT~1\stdclib\ldexp.c
                                           // Output:                                                                       C:\mcc18\src\TRADIT~1\stdclib\ldexp.c
                                           //         x scaled by 2^n                                                       C:\mcc18\src\TRADIT~1\stdclib\ldexp.c
                                           //                                                                               C:\mcc18\src\TRADIT~1\stdclib\ldexp.c
                                           //---------------------------------------------------------------------------------------------- C:\mcc18\src\TRADIT~1\stdclib\ldexp.c
                                           #include <errno.h>                                                               C:\mcc18\src\TRADIT~1\stdclib\ldexp.c
                                           #include <math.h>                                                                C:\mcc18\src\TRADIT~1\stdclib\ldexp.c
                                           #include "_mathlib.h"                                                            C:\mcc18\src\TRADIT~1\stdclib\ldexp.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\ldexp.c
004e14   d894     RCALL     0x4f3e         float ldexp(float x, int n)                                                      C:\mcc18\src\TRADIT~1\stdclib\ldexp.c
004e16   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004e18   ffd9                                                                                                               
004e1a   cfe2     MOVFF     0xfe2,0xfda                                                                                     
004e1c   ffda                                                                                                               
004e1e   0e0c     MOVLW     0xc                                                                                             
004e20   24e1     ADDWF     0xe1,0x0,0x0                                                                                    
004e22   e302     BNC       0x4e28                                                                                          
004e24   68e1     SETF      0xe1,0x0                                                                                        
004e26   52e6     MOVF      0xe6,0x1,0x0                                                                                    
004e28   6ee1     MOVWF     0xe1,0x0                                                                                        
                                           {                                                                                C:\mcc18\src\TRADIT~1\stdclib\ldexp.c
                                               tIEEE xIEEE;                                                                 C:\mcc18\src\TRADIT~1\stdclib\ldexp.c
                                               FTYPE type;                                                                  C:\mcc18\src\TRADIT~1\stdclib\ldexp.c
                                               tUfloat32 Ret;                                                               C:\mcc18\src\TRADIT~1\stdclib\ldexp.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\ldexp.c
004e2a   50d9     MOVF      0xd9,0x0,0x0       Ret.f = x;                                                                   C:\mcc18\src\TRADIT~1\stdclib\ldexp.c
004e2c   0ffa     ADDLW     0xfa                                                                                            
004e2e   6ee9     MOVWF     0xe9,0x0                                                                                        
004e30   0eff     MOVLW     0xff                                                                                            
004e32   20da     ADDWFC    0xda,0x0,0x0                                                                                    
004e34   6eea     MOVWF     0xea,0x0                                                                                        
004e36   0e08     MOVLW     0x8                                                                                             
004e38   cfee     MOVFF     0xfee,0xfdb                                                                                     
004e3a   ffdb                                                                                                               
004e3c   0e09     MOVLW     0x9                                                                                             
004e3e   cfee     MOVFF     0xfee,0xfdb                                                                                     
004e40   ffdb                                                                                                               
004e42   0e0a     MOVLW     0xa                                                                                             
004e44   cfee     MOVFF     0xfee,0xfdb                                                                                     
004e46   ffdb                                                                                                               
004e48   0e0b     MOVLW     0xb                                                                                             
004e4a   cfee     MOVFF     0xfee,0xfdb                                                                                     
004e4c   ffdb                                                                                                               
004e4e   d877     RCALL     0x4f3e             type = _UnpkMath(Ret, &xIEEE);                                               C:\mcc18\src\TRADIT~1\stdclib\ldexp.c
004e50   50d9     MOVF      0xd9,0x0,0x0                                                                                    
004e52   0f08     ADDLW     0x8                                                                                             
004e54   6ee9     MOVWF     0xe9,0x0                                                                                        
004e56   0e00     MOVLW     0x0                                                                                             
004e58   20da     ADDWFC    0xda,0x0,0x0                                                                                    
004e5a   6eea     MOVWF     0xea,0x0                                                                                        
004e5c   cfee     MOVFF     0xfee,0xfe6                                                                                     
004e5e   ffe6                                                                                                               
004e60   cfee     MOVFF     0xfee,0xfe6                                                                                     
004e62   ffe6                                                                                                               
004e64   cfee     MOVFF     0xfee,0xfe6                                                                                     
004e66   ffe6                                                                                                               
004e68   cfef     MOVFF     0xfef,0xfe6                                                                                     
004e6a   ffe6                                                                                                               
004e6c   eca4     CALL      0x4f48,0x0                                                                                      
004e6e   f027                                                                                                               
004e70   6ef5     MOVWF     0xf5,0x0                                                                                        
004e72   0e06     MOVLW     0x6                                                                                             
004e74   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
004e76   e202     BC        0x4e7c                                                                                          
004e78   6ae1     CLRF      0xe1,0x0                                                                                        
004e7a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004e7c   6ee1     MOVWF     0xe1,0x0                                                                                        
004e7e   50f5     MOVF      0xf5,0x0,0x0                                                                                    
004e80   6ee7     MOVWF     0xe7,0x0                                                                                        
004e82   0e07     MOVLW     0x7                                                                                             
004e84   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
004e86   ffdb                                                                                                               
004e88   50db     MOVF      0xdb,0x0,0x0       if( (type & (_NANTYPE | _INFTYPE)) )                                         C:\mcc18\src\TRADIT~1\stdclib\ldexp.c
004e8a   0b84     ANDLW     0x84                                                                                            
004e8c   e13a     BNZ       0x4f02                                                                                          
                                                   return Ret.f;                                                            C:\mcc18\src\TRADIT~1\stdclib\ldexp.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\ldexp.c
004e8e   0e07     MOVLW     0x7                if( type == _ZEROTYPE )                                                      C:\mcc18\src\TRADIT~1\stdclib\ldexp.c
004e90   04db     DECF      0xdb,0x0,0x0                                                                                    
004e92   e11a     BNZ       0x4ec8                                                                                          
004e94   0e06     MOVLW     0x6                    Ret.l = xIEEE.sgn ? NEGZERO : POSZERO;                                   C:\mcc18\src\TRADIT~1\stdclib\ldexp.c
004e96   50db     MOVF      0xdb,0x0,0x0                                                                                    
004e98   e006     BZ        0x4ea6                                                                                          
004e9a   6a00     CLRF      0x0,0x0                                                                                         
004e9c   6a01     CLRF      0x1,0x0                                                                                         
004e9e   6a02     CLRF      0x2,0x0                                                                                         
004ea0   0e80     MOVLW     0x80                                                                                            
004ea2   6e03     MOVWF     0x3,0x0                                                                                         
004ea4   d004     BRA       0x4eae                                                                                          
004ea6   6a00     CLRF      0x0,0x0                                                                                         
004ea8   6a01     CLRF      0x1,0x0                                                                                         
004eaa   6a02     CLRF      0x2,0x0                                                                                         
004eac   6a03     CLRF      0x3,0x0                                                                                         
004eae   0e08     MOVLW     0x8                                                                                             
004eb0   c000     MOVFF     0x0,0xfdb                                                                                       
004eb2   ffdb                                                                                                               
004eb4   0e09     MOVLW     0x9                                                                                             
004eb6   c001     MOVFF     0x1,0xfdb                                                                                       
004eb8   ffdb                                                                                                               
004eba   0e0a     MOVLW     0xa                                                                                             
004ebc   c002     MOVFF     0x2,0xfdb                                                                                       
004ebe   ffdb                                                                                                               
004ec0   0e0b     MOVLW     0xb                                                                                             
004ec2   c003     MOVFF     0x3,0xfdb                                                                                       
004ec4   ffdb                                                                                                               
004ec6   d01d     BRA       0x4f02             else                                                                         C:\mcc18\src\TRADIT~1\stdclib\ldexp.c
                                                   {                                                                        C:\mcc18\src\TRADIT~1\stdclib\ldexp.c
004ec8   0ef8     MOVLW     0xf8                   xIEEE.exp += n;                                                          C:\mcc18\src\TRADIT~1\stdclib\ldexp.c
004eca   cfdb     MOVFF     0xfdb,0x0                                                                                       
004ecc   f000                                                                                                               
004ece   0ef9     MOVLW     0xf9                                                                                            
004ed0   cfdb     MOVFF     0xfdb,0x1                                                                                       
004ed2   f001                                                                                                               
004ed4   50d9     MOVF      0xd9,0x0,0x0                                                                                    
004ed6   0f04     ADDLW     0x4                                                                                             
004ed8   6ee9     MOVWF     0xe9,0x0                                                                                        
004eda   0e00     MOVLW     0x0                                                                                             
004edc   20da     ADDWFC    0xda,0x0,0x0                                                                                    
004ede   6eea     MOVWF     0xea,0x0                                                                                        
004ee0   5000     MOVF      0x0,0x0,0x0                                                                                     
004ee2   26ee     ADDWF     0xee,0x1,0x0                                                                                    
004ee4   5001     MOVF      0x1,0x0,0x0                                                                                     
004ee6   22ed     ADDWFC    0xed,0x1,0x0                                                                                    
004ee8   50d9     MOVF      0xd9,0x0,0x0           _PackMath(&xIEEE, &Ret);                                                 C:\mcc18\src\TRADIT~1\stdclib\ldexp.c
004eea   0f08     ADDLW     0x8                                                                                             
004eec   6ee6     MOVWF     0xe6,0x0                                                                                        
004eee   0e00     MOVLW     0x0                                                                                             
004ef0   20da     ADDWFC    0xda,0x0,0x0                                                                                    
004ef2   6ee6     MOVWF     0xe6,0x0                                                                                        
004ef4   d824     RCALL     0x4f3e                                                                                          
004ef6   ec32     CALL      0x5064,0x0                                                                                      
004ef8   f028                                                                                                               
004efa   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004efc   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004efe   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004f00   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004f3e   cfd9     MOVFF     0xfd9,0xfe6                                                                                     
004f40   ffe6                                                                                                               
004f42   cfda     MOVFF     0xfda,0xfe6                                                                                     
004f44   ffe6                                                                                                               
004f46   0012     RETURN    0x0                                                                                             
                                                   }                                                                        C:\mcc18\src\TRADIT~1\stdclib\ldexp.c
004f02   0e08     MOVLW     0x8                return Ret.f;                                                                C:\mcc18\src\TRADIT~1\stdclib\ldexp.c
004f04   cfdb     MOVFF     0xfdb,0x0                                                                                       
004f06   f000                                                                                                               
004f08   0e09     MOVLW     0x9                                                                                             
004f0a   cfdb     MOVFF     0xfdb,0x1                                                                                       
004f0c   f001                                                                                                               
004f0e   0e0a     MOVLW     0xa                                                                                             
004f10   cfdb     MOVFF     0xfdb,0x2                                                                                       
004f12   f002                                                                                                               
004f14   0e0b     MOVLW     0xb                                                                                             
004f16   cfdb     MOVFF     0xfdb,0x3                                                                                       
004f18   f003                                                                                                               
004f1a   c000     MOVFF     0x0,0x33                                                                                        
004f1c   f033                                                                                                               
004f1e   c001     MOVFF     0x1,0x34                                                                                        
004f20   f034                                                                                                               
004f22   c002     MOVFF     0x2,0x35                                                                                        
004f24   f035                                                                                                               
004f26   c003     MOVFF     0x3,0x36                                                                                        
004f28   f036                                                                                                               
004f2a   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\mcc18\src\TRADIT~1\stdclib\ldexp.c
004f2c   ffe1                                                                                                               
004f2e   cfda     MOVFF     0xfda,0xfe2                                                                                     
004f30   ffe2                                                                                                               
004f32   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004f34   cfe5     MOVFF     0xfe5,0xfda                                                                                     
004f36   ffda                                                                                                               
004f38   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004f3a   ffd9                                                                                                               
004f3c   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\ldexp.c
                                           #include <stdio.h>                                                               C:\mcc18\src\TRADIT~1\stdclib\stdout.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\stdout.c
                                           /* by default stdout issues to the USART */                                      C:\mcc18\src\TRADIT~1\stdclib\stdout.c
                                           FILE *stdout = _H_USART;                                                         C:\mcc18\src\TRADIT~1\stdclib\stdout.c
                                           #include <stdio.h>                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #include <ctype.h>                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #include <string.h>                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FLAG_MINUS 0x1                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FLAG_PLUS  0x2                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FLAG_SPACE 0x4                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FLAG_OCTO  0x8                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FLAG_ZERO  0x10                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FLAG_SIGNED 0x80                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           static const rom char s_digits[] = "0123456789abcdef";                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           static unsigned char                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0015b6   ec17     CALL      0x202e,0x0     s_put_n_chars (FILE * handle, unsigned char n, char c)                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0015b8   f010                                                                                                               
00202e   cfd9     MOVFF     0xfd9,0xfe6                                                                                     
002030   ffe6                                                                                                               
002032   cfda     MOVFF     0xfda,0xfe6                                                                                     
002034   ffe6                                                                                                               
002036   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
002038   ffd9                                                                                                               
00203a   cfe2     MOVFF     0xfe2,0xfda                                                                                     
00203c   ffda                                                                                                               
00203e   0012     RETURN    0x0                                                                                             
                                           {                                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0015ba   0efb     MOVLW     0xfb             while (n--)                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0015bc   cfdb     MOVFF     0xfdb,0xff3                                                                                     
0015be   fff3                                                                                                               
0015c0   06db     DECF      0xdb,0x1,0x0                                                                                    
0015c2   50f3     MOVF      0xf3,0x0,0x0                                                                                    
0015c4   0900     IORLW     0x0                                                                                             
0015c6   e00a     BZ        0x15dc                                                                                          
0015c8   ec65     CALL      0x20ca,0x0         if (putc (c, handle) == EOF)                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0015ca   f010                                                                                                               
0015cc   0efa     MOVLW     0xfa                                                                                            
0015ce   ecd0     CALL      0x21a0,0x0                                                                                      
0015d0   f010                                                                                                               
0015d2   e1f3     BNZ       0x15ba                                                                                          
0015d4   1c01     COMF      0x1,0x0,0x0                                                                                     
0015d6   e1f1     BNZ       0x15ba                                                                                          
0015d8   0e01     MOVLW     0x1                  return 1;                                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0015da   d001     BRA       0x15de                                                                                          
0015dc   0e00     MOVLW     0x0              return 0;                                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0015de   ef46     GOTO      0x208c         }                                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0015e0   f010                                                                                                               
00208c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00208e   cfe5     MOVFF     0xfe5,0xfda                                                                                     
002090   ffda                                                                                                               
002092   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
002094   ffd9                                                                                                               
002096   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FMT_UNSPECIFIED 0                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FMT_LONG 1                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FMT_SHLONG 2                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FMT_BYTE   3                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           int                                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0015e2   ec17     CALL      0x202e,0x0     vfprintf (auto FILE *handle, auto const rom char *f, auto va_list ap)            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0015e4   f010                                                                                                               
0015e6   0e3b     MOVLW     0x3b                                                                                            
0015e8   24e1     ADDWF     0xe1,0x0,0x0                                                                                    
0015ea   e302     BNC       0x15f0                                                                                          
0015ec   68e1     SETF      0xe1,0x0                                                                                        
0015ee   52e6     MOVF      0xe6,0x1,0x0                                                                                    
0015f0   6ee1     MOVWF     0xe1,0x0                                                                                        
                                           {                                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                             unsigned char c;                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0015f2   0e01     MOVLW     0x1              int count = 0;                                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0015f4   6adb     CLRF      0xdb,0x0                                                                                        
0015f6   0e02     MOVLW     0x2                                                                                             
0015f8   6adb     CLRF      0xdb,0x0                                                                                        
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0015fa   0ef9     MOVLW     0xf9             for (c = *f; c; c = *++f)                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0015fc   cfdb     MOVFF     0xfdb,0xff6                                                                                     
0015fe   fff6                                                                                                               
001600   0efa     MOVLW     0xfa                                                                                            
001602   cfdb     MOVFF     0xfdb,0xff7                                                                                     
001604   fff7                                                                                                               
001606   0efb     MOVLW     0xfb                                                                                            
001608   cfdb     MOVFF     0xfdb,0xff8                                                                                     
00160a   fff8                                                                                                               
00160c   0008     TBLRD                                                                                                     
00160e   50f5     MOVF      0xf5,0x0,0x0                                                                                    
001610   6edf     MOVWF     0xdf,0x0                                                                                        
001612   50df     MOVF      0xdf,0x0,0x0                                                                                    
001614   e102     BNZ       0x161a                                                                                          
001616   ef6c     GOTO      0x1ed8                                                                                          
001618   f00f                                                                                                               
001ed2   d977     RCALL     0x21c2                                                                                          
001ed4   ef06     GOTO      0x160c                                                                                          
001ed6   f00b                                                                                                               
0021c2   50d9     MOVF      0xd9,0x0,0x0                                                                                    
0021c4   0ff9     ADDLW     0xf9                                                                                            
0021c6   6ee9     MOVWF     0xe9,0x0                                                                                        
0021c8   0eff     MOVLW     0xff                                                                                            
0021ca   ef7a     GOTO      0x20f4                                                                                          
0021cc   f010                                                                                                               
                                               {                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00161a   0e25     MOVLW     0x25                 if (c == '%')                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00161c   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
00161e   e002     BZ        0x1624                                                                                          
001620   ef5f     GOTO      0x1ebe                                                                                          
001622   f00f                                                                                                               
                                                   {                                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001624   0e03     MOVLW     0x3                      unsigned char flags = 0;                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001626   6adb     CLRF      0xdb,0x0                                                                                        
001628   0e04     MOVLW     0x4                      unsigned char width = 0;                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00162a   6adb     CLRF      0xdb,0x0                                                                                        
00162c   0e05     MOVLW     0x5                      unsigned char precision = 0;                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00162e   6adb     CLRF      0xdb,0x0                                                                                        
001630   0e06     MOVLW     0x6                      unsigned char have_precision = 0;                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001632   6adb     CLRF      0xdb,0x0                                                                                        
001634   0e07     MOVLW     0x7                      unsigned char size = 0;                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001636   6adb     CLRF      0xdb,0x0                                                                                        
                                                     unsigned char space_cnt;                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     unsigned char cval;                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     unsigned long larg;                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     far rom char *romstring;                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     char *ramstring;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     int n;                                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* get the first character of the conversion specifier */              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001638   ec7f     CALL      0x1efe,0x0               c = *++f;                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00163a   f00f                                                                                                               
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /**  The conversion specification has, after the '%' character:        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         7.9.6.1                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        * Zero or more flags (in any order) that modify the meaning of the  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversion specification.                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        * An optional minimum field width. If the converted value has       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          fewer characters than the field width, it will be padded with     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          spaces (by default) on the left (or right, if the left            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          adjustment flag, described later, has been given) to the field    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          width. The field width takes the form of an asterisk *            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          (described later) or a decimal integer.                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        * An optional precision that gives the minimum number of digits     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          to appear for the d, i, o, u, x, and X conversions, the           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          maximum number of digits to appear after the decimal point        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          character for e, E, and f conversions, the maximum number         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          of significant digits for the g and G conversions, or the         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          maximum number of characters to be written from a string in       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          s conversion. The precision takes the form of a period (.)        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          followed by an asterisk * (described later) or by an optional     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          decimal integer; if only the period is specified, the precision   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          is taken as zero. If a precision appears with any other           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversion specifier, the behaviour is undefined.                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        * An optional h specifying that a following d, i, o, u, x, or X     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversion specifier applies to a short int or unsigned short     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          int argument (the argument will have been promoted according      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          to the integer promotions, and its value shall be converted       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          to short int or unsigned short int before printing); an           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          optional h specifying that a following n conversion specifier     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          applies to a pointer to a short int argument; an optional l       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          (ell) specifying that a following d, i, o, u, x, or X             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversion specifier applies to a long int or unsigned long int   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          argument; or an optional L specifying that a following e, E,      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          f, g, or G conversion specifier applies to a long double          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          argument. If an h, l, or L appears with any other conversion      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          specifier, the behaviour is undefined.                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        * A character that specifies the type of conversion to be applied.  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       */                                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /** check for a flag.                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        7.9.6.1                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        The flag characters and their meanings are:                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        - The result of the conversion will be left-justified within        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          the field. (It will be right justified if this flag is not        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          specified.)                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        + The result of a signed conversion will always begin with a        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          plus or a minus sign. (It will begin with a sign only when        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          a negative value is converted if this flag is not specified.)     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        space  If the first character of a signed conversion is not a       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          sign, or if a signed conversion results in no characters, a       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          space will be prefixed to the result. If the space and + flags    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          both appear, the space flag will be ignored.                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        # The result is to be converted to an "alternate form." For o       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversion, it increases the precision to force the first digit   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          of the result to be a zero. For x (or X) conversion, a nonzero    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          result will have 0x (or 0X) prefixed to it. For e, E, f, g,       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          and G conversions, the result will always contain a decimal-      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          point character, even if no digits follow it. (Normally, a        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          decimal point character appears in the result of these            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversions only if a digit follows it.) For g and G              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversions, trailing zeros will not be removed from the          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          result. For other conversions the behaviour is undefined.         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        0 For d, i, o, u, x, X, e, E, f, g, and G conversions, leading      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          zeros (following any indication of sign or base) are used to      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          pad to the field width; no space padding is performed. If         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          the 0 and - flags both appear, the 0 flag will be ignored.        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          For other conversions, the behaviour is undefined.                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       */                                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00163c   0e2d     MOVLW     0x2d                     while (c == '-' || c == '+' || c == ' ' || c == '#'                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00163e   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001640   e00c     BZ        0x165a                                                                                          
001642   0e2b     MOVLW     0x2b                                                                                            
001644   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001646   e009     BZ        0x165a                                                                                          
001648   0e20     MOVLW     0x20                                                                                            
00164a   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
00164c   e006     BZ        0x165a                                                                                          
00164e   0e23     MOVLW     0x23                                                                                            
00168c   d7d5     BRA       0x1638                                                                                          
001650   5cdf     SUBWF     0xdf,0x0,0x0                    || c == '0')                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001652   e003     BZ        0x165a                                                                                          
001654   0e30     MOVLW     0x30                                                                                            
001656   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001658   e11a     BNZ       0x168e                                                                                          
                                                       {                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00165a   50df     MOVF      0xdf,0x0,0x0                 switch (c)                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00165c   0a30     XORLW     0x30                                                                                            
00165e   e014     BZ        0x1688                                                                                          
001660   0a13     XORLW     0x13                                                                                            
001662   e00f     BZ        0x1682                                                                                          
001664   0a03     XORLW     0x3                                                                                             
001666   e00a     BZ        0x167c                                                                                          
001668   0a0b     XORLW     0xb                                                                                             
00166a   e005     BZ        0x1676                                                                                          
00166c   0a06     XORLW     0x6                                                                                             
00166e   e1e4     BNZ       0x1638                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case '-':                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001670   0e03     MOVLW     0x3                              flags |= _FLAG_MINUS;                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001672   80db     BSF       0xdb,0x0,0x0                                                                                    
001674   d7e1     BRA       0x1638                           break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case '+':                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001676   0e03     MOVLW     0x3                              flags |= _FLAG_PLUS;                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001678   82db     BSF       0xdb,0x1,0x0                                                                                    
00167a   d7de     BRA       0x1638                           break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case ' ':                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00167c   0e03     MOVLW     0x3                              flags |= _FLAG_SPACE;                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00167e   84db     BSF       0xdb,0x2,0x0                                                                                    
001680   d7db     BRA       0x1638                           break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case '#':                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001682   0e03     MOVLW     0x3                              flags |= _FLAG_OCTO;                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001684   86db     BSF       0xdb,0x3,0x0                                                                                    
001686   d7d8     BRA       0x1638                           break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case '0':                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001688   0e03     MOVLW     0x3                              flags |= _FLAG_ZERO;                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00168a   88db     BSF       0xdb,0x4,0x0                                                                                    
                                                             break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         c = *++f;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       }                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* the optional width field is next */                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00168e   0e2a     MOVLW     0x2a                     if (c == '*')                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001690   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001692   e11b     BNZ       0x16ca                                                                                          
                                                       {                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001694   ec7b     CALL      0x1ef6,0x0                   n = va_arg (ap, int);                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001696   f00f                                                                                                               
001698   ecc9     CALL      0x1f92,0x0                                                                                      
00169a   f00f                                                                                                               
001f92   0e13     MOVLW     0x13                                                                                            
001f94   cfee     MOVFF     0xfee,0xfdb                                                                                     
001f96   ffdb                                                                                                               
001f98   0e14     MOVLW     0x14                                                                                            
001f9a   cfed     MOVFF     0xfed,0xfdb                                                                                     
001f9c   ffdb                                                                                                               
00169c   e010     BZ        0x16be                       if (n < 0)                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f9e   0e13     MOVLW     0x13                                                                                            
001fa0   cfdb     MOVFF     0xfdb,0x0                                                                                       
001fa2   f000                                                                                                               
001fa4   0e14     MOVLW     0x14                                                                                            
001fa6   cfdb     MOVFF     0xfdb,0x1                                                                                       
001fa8   f001                                                                                                               
001faa   0100     MOVLB     0x0                                                                                             
001fac   0e80     MOVLW     0x80                                                                                            
001fae   1401     ANDWF     0x1,0x0,0x0                                                                                     
001fb0   0012     RETURN    0x0                                                                                             
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00169e   0e03     MOVLW     0x3                              flags |= _FLAG_MINUS;                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0016a0   80db     BSF       0xdb,0x0,0x0                                                                                    
0016a2   6835     SETF      0x35,0x0                         width = -n;                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0016a4   6836     SETF      0x36,0x0                                                                                        
0016a6   0e13     MOVLW     0x13                                                                                            
0016a8   cfdb     MOVFF     0xfdb,0x3a                                                                                      
0016aa   f03a                                                                                                               
0016ac   0e14     MOVLW     0x14                                                                                            
0016ae   cfdb     MOVFF     0xfdb,0x3b                                                                                      
0016b0   f03b                                                                                                               
0016b2   ec2e     CALL      0x345c,0x0                                                                                      
0016b4   f01a                                                                                                               
0016b6   0e04     MOVLW     0x4                                                                                             
0016b8   c033     MOVFF     0x33,0xfdb                                                                                      
0016ba   ffdb                                                                                                               
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0016bc   d003     BRA       0x16c4                       else                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0016be   0e13     MOVLW     0x13                           width = n;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0016c0   ecb2     CALL      0x1f64,0x0                                                                                      
0016c2   f00f                                                                                                               
0016c4   ec7f     CALL      0x1efe,0x0                   c = *++f;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0016c6   f00f                                                                                                               
                                                       }                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0016c8   d00b     BRA       0x16e0                   else                                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       {                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0016ca   0e09     MOVLW     0x9                          cval = 0;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0016cc   6adb     CLRF      0xdb,0x0                                                                                        
0016ce   ec20     CALL      0x2040,0x0                   while ((unsigned char) isdigit (c))                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0016d0   f010                                                                                                               
0016d2   e003     BZ        0x16da                                                                                          
0016d8   d7fa     BRA       0x16ce                                                                                          
002040   cfdf     MOVFF     0xfdf,0xfe6                                                                                     
002042   ffe6                                                                                                               
002044   6ae6     CLRF      0xe6,0x0                                                                                        
002046   ec21     CALL      0x5642,0x0                                                                                      
002048   f02b                                                                                                               
00204a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00204c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00204e   50f3     MOVF      0xf3,0x0,0x0                                                                                    
002050   0012     RETURN    0x0                                                                                             
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0016d4   ec94     CALL      0x2128,0x0                       cval = cval * 10 + c - '0';                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0016d6   f010                                                                                                               
002128   0e09     MOVLW     0x9                                                                                             
00212a   50db     MOVF      0xdb,0x0,0x0                                                                                    
00212c   0d0a     MULLW     0xa                                                                                             
00212e   50f3     MOVF      0xf3,0x0,0x0                                                                                    
002130   24df     ADDWF     0xdf,0x0,0x0                                                                                    
002132   0fd0     ADDLW     0xd0                                                                                            
002134   6ee7     MOVWF     0xe7,0x0                                                                                        
002136   0e09     MOVLW     0x9                                                                                             
002138   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
00213a   ffdb                                                                                                               
00213c   ef7f     GOTO      0x1efe                           c = *++f;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00213e   f00f                                                                                                               
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0016da   0e09     MOVLW     0x9                          width = cval;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0016dc   ecb2     CALL      0x1f64,0x0                                                                                      
0016de   f00f                                                                                                               
                                                       }                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* if '-' is specified, '0' is ignored */                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0016e0   0e03     MOVLW     0x3                      if (flags & _FLAG_MINUS)                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0016e2   b0db     BTFSC     0xdb,0x0,0x0                                                                                    
0016e4   98db     BCF       0xdb,0x4,0x0               flags &= ~_FLAG_ZERO;                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* the optional precision field is next */                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0016e6   0e2e     MOVLW     0x2e                     if (c == '.')                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0016e8   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0016ea   e11b     BNZ       0x1722                                                                                          
                                                       {                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0016ec   ec7f     CALL      0x1efe,0x0                   c = *++f;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0016ee   f00f                                                                                                               
0016f0   0e2a     MOVLW     0x2a                         if (c == '*')                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0016f2   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0016f4   e10b     BNZ       0x170c                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0016f6   ec7b     CALL      0x1ef6,0x0                       n = va_arg (ap, int);                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0016f8   f00f                                                                                                               
0016fa   ecc9     CALL      0x1f92,0x0                                                                                      
0016fc   f00f                                                                                                               
001ef6   d929     RCALL     0x214a                                                                                          
001ef8   0e02     MOVLW     0x2                                                                                             
001efa   ef6c     GOTO      0x20d8                                                                                          
001efc   f010                                                                                                               
0020d8   5e00     SUBWF     0x0,0x1,0x0                                                                                     
0020da   0e00     MOVLW     0x0                                                                                             
0020dc   5a01     SUBWFB    0x1,0x1,0x0                                                                                     
0020de   0ef7     MOVLW     0xf7                                                                                            
0020e0   c000     MOVFF     0x0,0xfdb                                                                                       
0020e2   ffdb                                                                                                               
0020e4   0ef8     MOVLW     0xf8                                                                                            
0020e6   c001     MOVFF     0x1,0xfdb                                                                                       
0020e8   ffdb                                                                                                               
0020ea   c000     MOVFF     0x0,0xfe9                                                                                       
0020ec   ffe9                                                                                                               
0020ee   c001     MOVFF     0x1,0xfea                                                                                       
0020f0   ffea                                                                                                               
0020f2   0012     RETURN    0x0                                                                                             
00214a   0ef7     MOVLW     0xf7                                                                                            
00214c   cfdb     MOVFF     0xfdb,0x0                                                                                       
00214e   f000                                                                                                               
002150   0ef8     MOVLW     0xf8                                                                                            
002152   cfdb     MOVFF     0xfdb,0x1                                                                                       
002154   f001                                                                                                               
002156   0012     RETURN    0x0                                                                                             
0016fe   e103     BNZ       0x1706                           if (n >= 0)                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                               {                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001700   0e13     MOVLW     0x13                                 precision = n;                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001702   ec04     CALL      0x2008,0x0                                                                                      
001704   f010                                                                                                               
002008   50db     MOVF      0xdb,0x0,0x0                                                                                    
00200a   d8ce     RCALL     0x21a8                                                                                          
0021a8   6ee7     MOVWF     0xe7,0x0                                                                                        
0021aa   0e05     MOVLW     0x5                                                                                             
0021ac   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
0021ae   ffdb                                                                                                               
0021b0   0012     RETURN    0x0                                                                                             
00200c   0e01     MOVLW     0x1                                  have_precision = 1;                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00200e   6ef3     MOVWF     0xf3,0x0                                                                                        
002010   0e06     MOVLW     0x6                                                                                             
002012   cff3     MOVFF     0xff3,0xfdb                                                                                     
002014   ffdb                                                                                                               
002016   0012     RETURN    0x0                                                                                             
                                                               }                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001706   ec7f     CALL      0x1efe,0x0                       c = *++f;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001708   f00f                                                                                                               
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00170a   d00b     BRA       0x1722                       else                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00170c   0e09     MOVLW     0x9                              cval = 0;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00170e   6adb     CLRF      0xdb,0x0                                                                                        
001710   ec20     CALL      0x2040,0x0                       while ((unsigned char) isdigit (c))                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001712   f010                                                                                                               
001714   e003     BZ        0x171c                                                                                          
00171a   d7fa     BRA       0x1710                                                                                          
                                                               {                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001716   ec94     CALL      0x2128,0x0                           cval = cval * 10 + c - '0';                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001718   f010                                                                                                               
                                                                 c = *++f;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                               }                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00171c   0e09     MOVLW     0x9                              precision = cval;                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00171e   ec04     CALL      0x2008,0x0                                                                                      
001720   f010                                                                                                               
                                                             have_precision = 1;                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       }                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* the optional 'h' specifier. since int and short int are             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        the same size for MPLAB C18, this is a NOP for us. */               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001722   0e68     MOVLW     0x68                     if (c == 'h')                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001724   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001726   e107     BNZ       0x1736                                                                                          
                                                       {                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001728   ec7f     CALL      0x1efe,0x0                   c = *++f;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00172a   f00f                                                                                                               
                                                         /* if 'c' is another 'h' character, this is an 'hh'                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            specifier and the size is 8 bits */                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00172c   0e68     MOVLW     0x68                         if (c == 'h')                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00172e   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001730   e11d     BNZ       0x176c                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001732   0e03     MOVLW     0x3                              size = _FMT_BYTE;                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             c = *++f;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       }                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* 'z' and 't' are both 16-bit and so are NOPs */                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001734   d018     BRA       0x1766                   else if (c == 't' || c == 'z')                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001736   0e74     MOVLW     0x74                                                                                            
001738   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
00173a   e017     BZ        0x176a                                                                                          
00173c   0e7a     MOVLW     0x7a                                                                                            
00173e   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001740   e014     BZ        0x176a                                                                                          
                                                       c = *++f;                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* the 'H' specifier tells us to deal with 24-bit integers.            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        the 'T' and 'Z' specifiers are also 24 bit */                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001742   0e48     MOVLW     0x48                     else if (c == 'H' || c == 'T' || c == 'Z')                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001744   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001746   e006     BZ        0x1754                                                                                          
001748   0e54     MOVLW     0x54                                                                                            
00174a   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
00174c   e003     BZ        0x1754                                                                                          
00174e   0e5a     MOVLW     0x5a                                                                                            
001750   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001752   e102     BNZ       0x1758                                                                                          
                                                       {                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001754   0e02     MOVLW     0x2                          size = _FMT_SHLONG;                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         c = *++f;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       }                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* the 'l' specifier tells us to deal with 32-bit integers             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        'j' specifies intmax_t (long in our case). */                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001756   d007     BRA       0x1766                   else if (c == 'l' || c == 'j')                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001758   0e6c     MOVLW     0x6c                                                                                            
00175a   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
00175c   e003     BZ        0x1764                                                                                          
00175e   0e6a     MOVLW     0x6a                                                                                            
001760   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001762   e104     BNZ       0x176c                                                                                          
                                                       {                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001764   0e01     MOVLW     0x1                          size = _FMT_LONG;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001766   ec57     CALL      0x20ae,0x0                                                                                      
001768   f010                                                                                                               
00176a   dbc9     RCALL     0x1efe                       c = *++f;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001efe   d961     RCALL     0x21c2                                                                                          
001f00   0008     TBLRD                                                                                                     
001f02   50f5     MOVF      0xf5,0x0,0x0                                                                                    
001f04   6edf     MOVWF     0xdf,0x0                                                                                        
001f06   0012     RETURN    0x0                                                                                             
0020f4   20da     ADDWFC    0xda,0x0,0x0                                                                                    
0020f6   6eea     MOVWF     0xea,0x0                                                                                        
0020f8   2aef     INCF      0xef,0x1,0x0                                                                                    
0020fa   cfee     MOVFF     0xfee,0xff6                                                                                     
0020fc   fff6                                                                                                               
0020fe   0e00     MOVLW     0x0                                                                                             
002100   22ef     ADDWFC    0xef,0x1,0x0                                                                                    
002102   cfee     MOVFF     0xfee,0xff7                                                                                     
002104   fff7                                                                                                               
002106   22ef     ADDWFC    0xef,0x1,0x0                                                                                    
002108   cfee     MOVFF     0xfee,0xff8                                                                                     
00210a   fff8                                                                                                               
00210c   0012     RETURN    0x0                                                                                             
                                                       }                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00176c   50df     MOVF      0xdf,0x0,0x0             switch (c)                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00176e   0a6e     XORLW     0x6e                                                                                            
001770   e101     BNZ       0x1774                                                                                          
001772   d381     BRA       0x1e76                                                                                          
001774   0a1e     XORLW     0x1e                                                                                            
001776   e101     BNZ       0x177a                                                                                          
001778   d192     BRA       0x1a9e                                                                                          
00177a   0a20     XORLW     0x20                                                                                            
00177c   e101     BNZ       0x1780                                                                                          
00177e   d18f     BRA       0x1a9e                                                                                          
001780   0a3f     XORLW     0x3f                                                                                            
001782   e101     BNZ       0x1786                                                                                          
001784   d149     BRA       0x1a18                                                                                          
001786   0a1a     XORLW     0x1a                                                                                            
001788   e101     BNZ       0x178c                                                                                          
00178a   d146     BRA       0x1a18                                                                                          
00178c   0a0d     XORLW     0xd                                                                                             
00178e   e101     BNZ       0x1792                                                                                          
001790   d143     BRA       0x1a18                                                                                          
001792   0a20     XORLW     0x20                                                                                            
001794   e101     BNZ       0x1798                                                                                          
001796   d140     BRA       0x1a18                                                                                          
001798   0a3a     XORLW     0x3a                                                                                            
00179a   e101     BNZ       0x179e                                                                                          
00179c   d13d     BRA       0x1a18                                                                                          
00179e   0a20     XORLW     0x20                                                                                            
0017a0   e101     BNZ       0x17a4                                                                                          
0017a2   d13a     BRA       0x1a18                                                                                          
0017a4   0a26     XORLW     0x26                                                                                            
0017a6   e101     BNZ       0x17aa                                                                                          
0017a8   d135     BRA       0x1a14                                                                                          
0017aa   0a0d     XORLW     0xd                                                                                             
0017ac   e101     BNZ       0x17b0                                                                                          
0017ae   d132     BRA       0x1a14                                                                                          
0017b0   0a1a     XORLW     0x1a                                                                                            
0017b2   e101     BNZ       0x17b6                                                                                          
0017b4   d0d9     BRA       0x1968                                                                                          
0017b6   0a20     XORLW     0x20                                                                                            
0017b8   e04a     BZ        0x184e                                                                                          
0017ba   0a30     XORLW     0x30                                                                                            
0017bc   e01f     BZ        0x17fc                                                                                          
0017be   0a46     XORLW     0x46                                                                                            
0017c0   e00e     BZ        0x17de                                                                                          
0017c2   0a25     XORLW     0x25                                                                                            
0017c4   e001     BZ        0x17c8                                                                                          
0017c6   d385     BRA       0x1ed2                                                                                          
                                                       {                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case '\0':                                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* this is undefined behaviour. we have a trailing '%' character   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            in the string, perhaps with some flags, width, precision        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            stuff as well, but no format specifier. We'll, arbitrarily,     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            back up a character so that the loop will terminate             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            properly when it loops back and we'll output a '%'              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            character. */                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0017c8   50d9     MOVF      0xd9,0x0,0x0                 --f;                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0017ca   0ff9     ADDLW     0xf9                                                                                            
0017cc   6ee9     MOVWF     0xe9,0x0                                                                                        
0017ce   0eff     MOVLW     0xff                                                                                            
0017d0   20da     ADDWFC    0xda,0x0,0x0                                                                                    
0017d2   6eea     MOVWF     0xea,0x0                                                                                        
0017d4   0e01     MOVLW     0x1                                                                                             
0017d6   5eee     SUBWF     0xee,0x1,0x0                                                                                    
0017d8   0e00     MOVLW     0x0                                                                                             
0017da   5aee     SUBWFB    0xee,0x1,0x0                                                                                    
0017dc   5aee     SUBWFB    0xee,0x1,0x0                                                                                    
                                                         /* fallthrough */                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case '%':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0017de   ec65     CALL      0x20ca,0x0                   if (putc ('%', handle) == EOF)                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0017e0   f010                                                                                                               
0017e2   0e25     MOVLW     0x25                                                                                            
0017e4   6ee6     MOVWF     0xe6,0x0                                                                                        
0017e6   db95     RCALL     0x1f12                                                                                          
0017e8   e103     BNZ       0x17f0                                                                                          
0017ea   1c01     COMF      0x1,0x0,0x0                                                                                     
0017ec   e101     BNZ       0x17f0                                                                                          
0017ee   d36b     BRA       0x1ec6                                                                                          
                                                           return EOF;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0017f0   ec61     CALL      0x20c2,0x0                   ++count;                                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0017f2   f010                                                                                                               
0017f4   e201     BC        0x17f8                                                                                          
0017f6   d36d     BRA       0x1ed2                                                                                          
0017f8   2adb     INCF      0xdb,0x1,0x0                                                                                    
0017fa   d36b     BRA       0x1ed2                       break;                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'c':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0017fc   0e08     MOVLW     0x8                          space_cnt = 0;                                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0017fe   6adb     CLRF      0xdb,0x0                                                                                        
001800   0e04     MOVLW     0x4                          if (width > 1)                                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001802   50db     MOVF      0xdb,0x0,0x0                                                                                    
001804   0801     SUBLW     0x1                                                                                             
001806   e206     BC        0x1814                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001808   0e04     MOVLW     0x4                              space_cnt = width - 1;                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00180a   04db     DECF      0xdb,0x0,0x0                                                                                    
00180c   ec29     CALL      0x2052,0x0                                                                                      
00180e   f010                                                                                                               
001810   50db     MOVF      0xdb,0x0,0x0                     count += space_cnt;                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001812   db8b     RCALL     0x1f2a                                                                                          
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001814   0e08     MOVLW     0x8                          if (space_cnt && !(flags & _FLAG_MINUS))                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001816   50db     MOVF      0xdb,0x0,0x0                                                                                    
001818   e009     BZ        0x182c                                                                                          
00181a   0e03     MOVLW     0x3                                                                                             
00181c   50db     MOVF      0xdb,0x0,0x0                                                                                    
00181e   0b01     ANDLW     0x1                                                                                             
001820   e105     BNZ       0x182c                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001822   db72     RCALL     0x1f08                           if (s_put_n_chars (handle, space_cnt, ' '))                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001824   e001     BZ        0x1828                                                                                          
001826   d34f     BRA       0x1ec6                                                                                          
                                                               return EOF;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001828   0e08     MOVLW     0x8                              space_cnt = 0;                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00182a   6adb     CLRF      0xdb,0x0                                                                                        
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00182c   db64     RCALL     0x1ef6                       c = va_arg (ap, int);                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00182e   cfef     MOVFF     0xfef,0xfdf                                                                                     
001830   ffdf                                                                                                               
001832   ecd9     CALL      0x21b2,0x0                   if (putc (c, handle) == EOF)                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001834   f010                                                                                                               
001836   e103     BNZ       0x183e                                                                                          
001838   1c01     COMF      0x1,0x0,0x0                                                                                     
00183a   e101     BNZ       0x183e                                                                                          
00183c   d344     BRA       0x1ec6                                                                                          
                                                           return EOF;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00183e   ec61     CALL      0x20c2,0x0                   ++count;                                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001840   f010                                                                                                               
001842   e301     BNC       0x1846                                                                                          
001844   2adb     INCF      0xdb,0x1,0x0                                                                                    
001846   db60     RCALL     0x1f08                       if (s_put_n_chars (handle, space_cnt, ' '))                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001848   e101     BNZ       0x184c                                                                                          
00184a   d343     BRA       0x1ed2                                                                                          
00184c   d33c     BRA       0x1ec6                         return EOF;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         break;                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'S':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00184e   0e07     MOVLW     0x7                          if (size == _FMT_SHLONG)                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001850   50db     MOVF      0xdb,0x0,0x0                                                                                    
001852   0802     SUBLW     0x2                                                                                             
001854   e10f     BNZ       0x1874                                                                                          
001856   eca5     CALL      0x214a,0x0                     romstring = va_arg (ap, rom far char *);                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001858   f010                                                                                                               
00185a   0e03     MOVLW     0x3                                                                                             
00185c   ec6c     CALL      0x20d8,0x0                                                                                      
00185e   f010                                                                                                               
001860   0e0e     MOVLW     0xe                                                                                             
001862   cfee     MOVFF     0xfee,0xfdb                                                                                     
001864   ffdb                                                                                                               
001866   0e0f     MOVLW     0xf                                                                                             
001868   cfee     MOVFF     0xfee,0xfdb                                                                                     
00186a   ffdb                                                                                                               
00186c   0e10     MOVLW     0x10                                                                                            
00186e   cfee     MOVFF     0xfee,0xfdb                                                                                     
001870   ffdb                                                                                                               
001872   d020     BRA       0x18b4                       else                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001874   0ef7     MOVLW     0xf7                           romstring = (far rom char*)va_arg (ap, rom near char *);         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001876   cfdb     MOVFF     0xfdb,0x3                                                                                       
001878   f003                                                                                                               
00187a   0ef8     MOVLW     0xf8                                                                                            
00187c   cfdb     MOVFF     0xfdb,0x4                                                                                       
00187e   f004                                                                                                               
001880   0e02     MOVLW     0x2                                                                                             
001882   5e03     SUBWF     0x3,0x1,0x0                                                                                     
001884   0e00     MOVLW     0x0                                                                                             
001886   5a04     SUBWFB    0x4,0x1,0x0                                                                                     
001888   0ef7     MOVLW     0xf7                                                                                            
00188a   c003     MOVFF     0x3,0xfdb                                                                                       
00188c   ffdb                                                                                                               
00188e   0ef8     MOVLW     0xf8                                                                                            
001890   c004     MOVFF     0x4,0xfdb                                                                                       
001892   ffdb                                                                                                               
001894   c003     MOVFF     0x3,0xfe9                                                                                       
001896   ffe9                                                                                                               
001898   c004     MOVFF     0x4,0xfea                                                                                       
00189a   ffea                                                                                                               
00189c   ec5c     CALL      0x20b8,0x0                                                                                      
00189e   f010                                                                                                               
0018a0   6a02     CLRF      0x2,0x0                                                                                         
0018a2   0e0e     MOVLW     0xe                                                                                             
0018a4   c000     MOVFF     0x0,0xfdb                                                                                       
0018a6   ffdb                                                                                                               
0018a8   0e0f     MOVLW     0xf                                                                                             
0018aa   c001     MOVFF     0x1,0xfdb                                                                                       
0018ac   ffdb                                                                                                               
0018ae   0e10     MOVLW     0x10                                                                                            
0018b0   c002     MOVFF     0x2,0xfdb                                                                                       
0018b2   ffdb                                                                                                               
0018b4   0e0e     MOVLW     0xe                          n = strlenpgm (romstring);                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018b6   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0018b8   ffe6                                                                                                               
0018ba   0e0f     MOVLW     0xf                                                                                             
0018bc   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0018be   ffe6                                                                                                               
0018c0   0e10     MOVLW     0x10                                                                                            
0018c2   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0018c4   ffe6                                                                                                               
0018c6   ec14     CALL      0x5428,0x0                                                                                      
0018c8   f02a                                                                                                               
0018ca   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0018cc   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0018ce   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0018d0   0e13     MOVLW     0x13                                                                                            
0018d2   c034     MOVFF     0x34,0xfdb                                                                                      
0018d4   ffdb                                                                                                               
0018d6   0e14     MOVLW     0x14                                                                                            
0018d8   c035     MOVFF     0x35,0xfdb                                                                                      
0018da   ffdb                                                                                                               
                                                         /* Normalize the width based on the length of the actual           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            string and the precision. */                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018dc   0e06     MOVLW     0x6                          if (have_precision && precision < (unsigned char) n)               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018de   50db     MOVF      0xdb,0x0,0x0                                                                                    
0018e0   e005     BZ        0x18ec                                                                                          
0018e2   0e13     MOVLW     0x13                                                                                            
0018e4   eca0     CALL      0x2140,0x0                                                                                      
0018e6   f010                                                                                                               
0018e8   e201     BC        0x18ec                                                                                          
0018ea   db6a     RCALL     0x1fc0                         n = precision;                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001fc0   0e05     MOVLW     0x5                                                                                             
001fc2   50db     MOVF      0xdb,0x0,0x0                                                                                    
001fc4   6ee6     MOVWF     0xe6,0x0                                                                                        
001fc6   50d9     MOVF      0xd9,0x0,0x0                                                                                    
001fc8   0f13     ADDLW     0x13                                                                                            
001fca   d901     RCALL     0x21ce                                                                                          
001fcc   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001fce   50e7     MOVF      0xe7,0x0,0x0                                                                                    
001fd0   6eee     MOVWF     0xee,0x0                                                                                        
001fd2   6aed     CLRF      0xed,0x0                                                                                        
001fd4   0012     RETURN    0x0                                                                                             
0018ec   ecc4     CALL      0x2188,0x0                   if (width < (unsigned char) n)                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018ee   f010                                                                                                               
0018f0   e202     BC        0x18f6                                                                                          
002188   0e13     MOVLW     0x13                                                                                            
00218a   50db     MOVF      0xdb,0x0,0x0                                                                                    
00218c   6ef3     MOVWF     0xf3,0x0                                                                                        
00218e   0e04     MOVLW     0x4                                                                                             
002190   efad     GOTO      0x1f5a                                                                                          
002192   f00f                                                                                                               
0018f2   0e13     MOVLW     0x13                           width = n;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018f4   db37     RCALL     0x1f64                                                                                          
0018f6   ec87     CALL      0x210e,0x0                   space_cnt = width - (unsigned char) n;                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018f8   f010                                                                                                               
00210e   0e04     MOVLW     0x4                                                                                             
002110   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
002112   ffe6                                                                                                               
002114   0e13     MOVLW     0x13                                                                                            
002116   50db     MOVF      0xdb,0x0,0x0                                                                                    
002118   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00211a   5ce7     SUBWF     0xe7,0x0,0x0                                                                                    
00211c   df9a     RCALL     0x2052                                                                                          
00211e   50db     MOVF      0xdb,0x0,0x0                 count += space_cnt;                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002120   df04     RCALL     0x1f2a                                                                                          
                                                         /* we've already calculated the space count that the width         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            will require. now we want the width field to have the           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            number of character to display from the string itself,          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            limited by the length of the actual string and the              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            specified precision. */                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018fa   e006     BZ        0x1908                       if (have_precision && precision < width)                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018fc   0e04     MOVLW     0x4                                                                                             
0018fe   eca0     CALL      0x2140,0x0                                                                                      
001900   f010                                                                                                               
001902   e202     BC        0x1908                                                                                          
002122   0e06     MOVLW     0x6                                                                                             
002124   50db     MOVF      0xdb,0x0,0x0                                                                                    
002126   0012     RETURN    0x0                                                                                             
001904   0e05     MOVLW     0x5                            width = precision;                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001906   db2e     RCALL     0x1f64                                                                                          
                                                         /* if right justified, we print the spaces before the              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            string */                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001908   0e03     MOVLW     0x3                          if (!(flags & _FLAG_MINUS))                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00190a   b0db     BTFSC     0xdb,0x0,0x0                                                                                    
00190c   d005     BRA       0x1918                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00190e   dafc     RCALL     0x1f08                           if (s_put_n_chars (handle, space_cnt, ' '))                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001910   e001     BZ        0x1914                                                                                          
001912   d2d9     BRA       0x1ec6                                                                                          
                                                               return EOF;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001914   0e08     MOVLW     0x8                              space_cnt = 0;                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001916   6adb     CLRF      0xdb,0x0                                                                                        
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001918   0e09     MOVLW     0x9                          cval = 0;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00191a   6adb     CLRF      0xdb,0x0                                                                                        
00191c   0e0e     MOVLW     0xe                          for (c = *romstring; c && cval < width; c = *++romstring)          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00191e   cfdb     MOVFF     0xfdb,0xff6                                                                                     
001920   fff6                                                                                                               
001922   0e0f     MOVLW     0xf                                                                                             
001924   cfdb     MOVFF     0xfdb,0xff7                                                                                     
001926   fff7                                                                                                               
001928   0e10     MOVLW     0x10                                                                                            
00192a   cfdb     MOVFF     0xfdb,0xff8                                                                                     
00192c   fff8                                                                                                               
00192e   0008     TBLRD                                                                                                     
001930   50f5     MOVF      0xf5,0x0,0x0                                                                                    
001932   6edf     MOVWF     0xdf,0x0                                                                                        
001934   50df     MOVF      0xdf,0x0,0x0                                                                                    
001936   e014     BZ        0x1960                                                                                          
001938   ecca     CALL      0x2194,0x0                                                                                      
00193a   f010                                                                                                               
00193c   e211     BC        0x1960                                                                                          
001954   50d9     MOVF      0xd9,0x0,0x0                                                                                    
001956   0f0e     ADDLW     0xe                                                                                             
001958   6ee9     MOVWF     0xe9,0x0                                                                                        
00195a   0e00     MOVLW     0x0                                                                                             
00195c   dbcb     RCALL     0x20f4                                                                                          
00195e   d7e7     BRA       0x192e                                                                                          
002194   0e04     MOVLW     0x4                                                                                             
002196   50db     MOVF      0xdb,0x0,0x0                                                                                    
002198   6ef3     MOVWF     0xf3,0x0                                                                                        
00219a   0e09     MOVLW     0x9                                                                                             
00219c   efad     GOTO      0x1f5a                                                                                          
00219e   f00f                                                                                                               
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00193e   ecd9     CALL      0x21b2,0x0                       if (putc (c, handle) == EOF)                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001940   f010                                                                                                               
001942   e103     BNZ       0x194a                                                                                          
001944   1c01     COMF      0x1,0x0,0x0                                                                                     
001946   e101     BNZ       0x194a                                                                                          
001948   d2be     BRA       0x1ec6                                                                                          
                                                               return EOF;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00194a   dbbb     RCALL     0x20c2                           ++count;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00194c   e301     BNC       0x1950                                                                                          
00194e   2adb     INCF      0xdb,0x1,0x0                                                                                    
001950   0e09     MOVLW     0x9                              ++cval;                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001952   2adb     INCF      0xdb,0x1,0x0                                                                                    
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* If there are spaces left, it's left justified.                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            Either way, calling the function unconditionally                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            is smaller code. */                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001960   dad3     RCALL     0x1f08                       if (s_put_n_chars (handle, space_cnt, ' '))                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001962   e101     BNZ       0x1966                                                                                          
001964   d2b6     BRA       0x1ed2                                                                                          
001966   d2af     BRA       0x1ec6                         return EOF;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         break;                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 's':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001968   dac6     RCALL     0x1ef6                       ramstring = va_arg (ap, char *);                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00196a   0e11     MOVLW     0x11                                                                                            
00196c   cfee     MOVFF     0xfee,0xfdb                                                                                     
00196e   ffdb                                                                                                               
001970   0e12     MOVLW     0x12                                                                                            
001972   cfed     MOVFF     0xfed,0xfdb                                                                                     
001974   ffdb                                                                                                               
001976   0e11     MOVLW     0x11                         n = strlen (ramstring);                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001978   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00197a   ffe6                                                                                                               
00197c   0e12     MOVLW     0x12                                                                                            
00197e   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001980   ffe6                                                                                                               
001982   ec06     CALL      0x540c,0x0                                                                                      
001984   f02a                                                                                                               
001986   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001988   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00198a   0e13     MOVLW     0x13                                                                                            
00198c   cff3     MOVFF     0xff3,0xfdb                                                                                     
00198e   ffdb                                                                                                               
001990   0e14     MOVLW     0x14                                                                                            
001992   cff4     MOVFF     0xff4,0xfdb                                                                                     
001994   ffdb                                                                                                               
                                                         /* Normalize the width based on the length of the actual           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            string and the precision. */                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001996   0e06     MOVLW     0x6                          if (have_precision && precision < (unsigned char) n)               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001998   50db     MOVF      0xdb,0x0,0x0                                                                                    
00199a   e004     BZ        0x19a4                                                                                          
00199c   0e13     MOVLW     0x13                                                                                            
00199e   dbd0     RCALL     0x2140                                                                                          
0019a0   e201     BC        0x19a4                                                                                          
0019a2   db0e     RCALL     0x1fc0                         n = precision;                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0019a4   ecc4     CALL      0x2188,0x0                   if (width < (unsigned char) n)                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0019a6   f010                                                                                                               
0019a8   e202     BC        0x19ae                                                                                          
0019aa   0e13     MOVLW     0x13                           width = n;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0019ac   dadb     RCALL     0x1f64                                                                                          
0019ae   dbaf     RCALL     0x210e                       space_cnt = width - (unsigned char) n;                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002052   6ee7     MOVWF     0xe7,0x0                                                                                        
002054   0e08     MOVLW     0x8                                                                                             
002056   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
002058   ffdb                                                                                                               
00205a   0012     RETURN    0x0                                                                                             
                                                         count += space_cnt;                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* we've already calculated the space count that the width         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            will require. now we want the width field to have the           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            number of character to display from the string itself,          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            limited by the length of the actual string and the              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            specified precision. */                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0019b0   e005     BZ        0x19bc                       if (have_precision && precision < width)                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0019b2   0e04     MOVLW     0x4                                                                                             
0019b4   dbc5     RCALL     0x2140                                                                                          
0019b6   e202     BC        0x19bc                                                                                          
002140   50db     MOVF      0xdb,0x0,0x0                                                                                    
002142   6ef3     MOVWF     0xf3,0x0                                                                                        
002144   0e05     MOVLW     0x5                                                                                             
002146   efad     GOTO      0x1f5a                                                                                          
002148   f00f                                                                                                               
0019b8   0e05     MOVLW     0x5                            width = precision;                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0019ba   dad4     RCALL     0x1f64                                                                                          
001f64   50db     MOVF      0xdb,0x0,0x0                                                                                    
001f66   6ee7     MOVWF     0xe7,0x0                                                                                        
001f68   0e04     MOVLW     0x4                                                                                             
001f6a   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
001f6c   ffdb                                                                                                               
001f6e   0012     RETURN    0x0                                                                                             
                                                         /* if right justified, we print the spaces before the              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            string */                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0019bc   0e03     MOVLW     0x3                          if (!(flags & _FLAG_MINUS))                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0019be   b0db     BTFSC     0xdb,0x0,0x0                                                                                    
0019c0   d005     BRA       0x19cc                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0019c2   daa2     RCALL     0x1f08                           if (s_put_n_chars (handle, space_cnt, ' '))                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0019c4   e001     BZ        0x19c8                                                                                          
0019c6   d27f     BRA       0x1ec6                                                                                          
                                                               return EOF;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0019c8   0e08     MOVLW     0x8                              space_cnt = 0;                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0019ca   6adb     CLRF      0xdb,0x0                                                                                        
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0019cc   0e09     MOVLW     0x9                          cval = 0;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0019ce   6adb     CLRF      0xdb,0x0                                                                                        
0019d0   0e11     MOVLW     0x11                         for (c = *ramstring; c && cval < width; c = *++ramstring)          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0019d2   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
0019d4   ffe9                                                                                                               
0019d6   0e12     MOVLW     0x12                                                                                            
0019d8   cfdb     MOVFF     0xfdb,0xfea                                                                                     
0019da   ffea                                                                                                               
0019dc   cfef     MOVFF     0xfef,0xfdf                                                                                     
0019de   ffdf                                                                                                               
0019e0   50df     MOVF      0xdf,0x0,0x0                                                                                    
0019e2   e014     BZ        0x1a0c                                                                                          
0019e4   dbd7     RCALL     0x2194                                                                                          
0019e6   e212     BC        0x1a0c                                                                                          
0019fc   0e11     MOVLW     0x11                                                                                            
0019fe   2adb     INCF      0xdb,0x1,0x0                                                                                    
001a00   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
001a02   ffe9                                                                                                               
001a04   0e12     MOVLW     0x12                                                                                            
001a06   e3e8     BNC       0x19d8                                                                                          
001a08   2adb     INCF      0xdb,0x1,0x0                                                                                    
001a0a   d7e6     BRA       0x19d8                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0019e8   dbe4     RCALL     0x21b2                           if (putc (c, handle) == EOF)                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0019ea   e103     BNZ       0x19f2                                                                                          
0019ec   1c01     COMF      0x1,0x0,0x0                                                                                     
0019ee   e101     BNZ       0x19f2                                                                                          
0019f0   d26a     BRA       0x1ec6                                                                                          
                                                               return EOF;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0019f2   db67     RCALL     0x20c2                           ++count;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0019f4   e301     BNC       0x19f8                                                                                          
0019f6   2adb     INCF      0xdb,0x1,0x0                                                                                    
0019f8   0e09     MOVLW     0x9                              ++cval;                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0019fa   2adb     INCF      0xdb,0x1,0x0                                                                                    
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* If there are spaces left, it's left justified.                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            Either way, calling the function unconditionally                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            is smaller code. */                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a0c   da7d     RCALL     0x1f08                       if (s_put_n_chars (handle, space_cnt, ' '))                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a0e   e101     BNZ       0x1a12                                                                                          
001a10   d260     BRA       0x1ed2                                                                                          
001a12   d259     BRA       0x1ec6                         return EOF;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         break;                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'd':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'i':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a14   0e03     MOVLW     0x3                          flags |= _FLAG_SIGNED;                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a16   8edb     BSF       0xdb,0x7,0x0                                                                                    
                                                         /* fall through */                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'o':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'u':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'x':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'X':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'b':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'B':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* This is a bit of a sneaky trick. The 'l' and 'hh' size          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            specifiers are valid only for the integer conversions,          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            not the 'p' or 'P' conversions, and are ignored for the         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            latter. By jumping over the additional size specifier           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            checks here we get the best code size since we can              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            limit the size checks in the remaining code. */                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a18   0e07     MOVLW     0x7                          if (size == _FMT_LONG)                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a1a   04db     DECF      0xdb,0x0,0x0                                                                                    
001a1c   e110     BNZ       0x1a3e                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a1e   db95     RCALL     0x214a                           larg = va_arg (ap, long int);                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a20   0e04     MOVLW     0x4                                                                                             
001a22   db5a     RCALL     0x20d8                                                                                          
001a24   0e0a     MOVLW     0xa                                                                                             
001a26   cfee     MOVFF     0xfee,0xfdb                                                                                     
001a28   ffdb                                                                                                               
001a2a   0e0b     MOVLW     0xb                                                                                             
001a2c   cfee     MOVFF     0xfee,0xfdb                                                                                     
001a2e   ffdb                                                                                                               
001a30   0e0c     MOVLW     0xc                                                                                             
001a32   cfee     MOVFF     0xfee,0xfdb                                                                                     
001a34   ffdb                                                                                                               
001a36   0e0d     MOVLW     0xd                                                                                             
001a38   cfee     MOVFF     0xfee,0xfdb                                                                                     
001a3a   ffdb                                                                                                               
001a3c   d06c     BRA       0x1b16                           goto _do_integer_conversion;                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a3e   0e07     MOVLW     0x7                          else if (size == _FMT_BYTE)                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a40   50db     MOVF      0xdb,0x0,0x0                                                                                    
001a42   0803     SUBLW     0x3                                                                                             
001a44   e12c     BNZ       0x1a9e                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a46   0e03     MOVLW     0x3                              if (flags & _FLAG_SIGNED)                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a48   aedb     BTFSS     0xdb,0x7,0x0                                                                                    
001a4a   d00d     BRA       0x1a66                                                                                          
001a4c   dab2     RCALL     0x1fb2                             larg = (signed char) va_arg (ap, int);                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a4e   0e02     MOVLW     0x2                                                                                             
001a50   da76     RCALL     0x1f3e                                                                                          
001a52   cfef     MOVFF     0xfef,0x0                                                                                       
001a54   f000                                                                                                               
001a56   6a01     CLRF      0x1,0x0                                                                                         
001a58   6a02     CLRF      0x2,0x0                                                                                         
001a5a   6a03     CLRF      0x3,0x0                                                                                         
001a5c   ae00     BTFSS     0x0,0x7,0x0                                                                                     
001a5e   d039     BRA       0x1ad2                                                                                          
001a60   6801     SETF      0x1,0x0                                                                                         
001a62   6802     SETF      0x2,0x0                                                                                         
001a64   d035     BRA       0x1ad0                           else                                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a66   0ef7     MOVLW     0xf7                               larg = (unsigned char) va_arg (ap, unsigned int);            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a68   cfdb     MOVFF     0xfdb,0x1                                                                                       
001a6a   f001                                                                                                               
001a6c   0ef8     MOVLW     0xf8                                                                                            
001a6e   cfdb     MOVFF     0xfdb,0x2                                                                                       
001a70   f002                                                                                                               
001a72   0e02     MOVLW     0x2                                                                                             
001a74   5e01     SUBWF     0x1,0x1,0x0                                                                                     
001a76   0e00     MOVLW     0x0                                                                                             
001a78   5a02     SUBWFB    0x2,0x1,0x0                                                                                     
001a7a   0ef7     MOVLW     0xf7                                                                                            
001a7c   c001     MOVFF     0x1,0xfdb                                                                                       
001a7e   ffdb                                                                                                               
001a80   0ef8     MOVLW     0xf8                                                                                            
001a82   c002     MOVFF     0x2,0xfdb                                                                                       
001a84   ffdb                                                                                                               
001a86   c001     MOVFF     0x1,0xfe9                                                                                       
001a88   ffe9                                                                                                               
001a8a   c002     MOVFF     0x2,0xfea                                                                                       
001a8c   ffea                                                                                                               
001a8e   cfef     MOVFF     0xfef,0x0                                                                                       
001a90   f000                                                                                                               
001a92   0e0a     MOVLW     0xa                                                                                             
001a94   c000     MOVFF     0x0,0xfdb                                                                                       
001a96   ffdb                                                                                                               
001a98   0e0b     MOVLW     0xb                                                                                             
001a9a   6adb     CLRF      0xdb,0x0                                                                                        
001a9c   d038     BRA       0x1b0e                           goto _do_integer_conversion;                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* fall through */                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'p':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'P':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a9e   0e07     MOVLW     0x7                          if (size == _FMT_SHLONG)                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001aa0   50db     MOVF      0xdb,0x0,0x0                                                                                    
001aa2   0802     SUBLW     0x2                                                                                             
001aa4   e109     BNZ       0x1ab8                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001aa6   0e03     MOVLW     0x3                              if (flags & _FLAG_SIGNED)                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001aa8   aedb     BTFSS     0xdb,0x7,0x0                                                                                    
001aaa   d004     BRA       0x1ab4                                                                                          
001aac   db59     RCALL     0x2160                             larg = va_arg (ap, short long int);                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001aae   ae02     BTFSS     0x2,0x7,0x0                                                                                     
001ab0   d010     BRA       0x1ad2                                                                                          
00205c   cfee     MOVFF     0xfee,0x0                                                                                       
00205e   f000                                                                                                               
002060   cfee     MOVFF     0xfee,0x1                                                                                       
002062   f001                                                                                                               
002064   cfef     MOVFF     0xfef,0x2                                                                                       
002066   f002                                                                                                               
002068   6a03     CLRF      0x3,0x0                                                                                         
00206a   0012     RETURN    0x0                                                                                             
002160   df28     RCALL     0x1fb2                                                                                          
002162   0e03     MOVLW     0x3                                                                                             
002164   deec     RCALL     0x1f3e                                                                                          
002166   ef2e     GOTO      0x205c                                                                                          
002168   f010                                                                                                               
001ab2   d00e     BRA       0x1ad0                           else                                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ab4   db55     RCALL     0x2160                             larg = va_arg (ap, unsigned short long int);                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ab6   d00d     BRA       0x1ad2                       else if (flags & _FLAG_SIGNED)                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ab8   0e03     MOVLW     0x3                                                                                             
001aba   aedb     BTFSS     0xdb,0x7,0x0                                                                                    
001abc   d012     BRA       0x1ae2                                                                                          
001abe   da79     RCALL     0x1fb2                         larg = va_arg (ap, int);                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ac0   0e02     MOVLW     0x2                                                                                             
001ac2   da3d     RCALL     0x1f3e                                                                                          
001ac4   daf9     RCALL     0x20b8                                                                                          
001ac6   6a02     CLRF      0x2,0x0                                                                                         
001ac8   6a03     CLRF      0x3,0x0                                                                                         
001aca   ae01     BTFSS     0x1,0x7,0x0                                                                                     
001acc   d002     BRA       0x1ad2                                                                                          
001ace   6802     SETF      0x2,0x0                                                                                         
001ad0   6803     SETF      0x3,0x0                                                                                         
001ad2   dae2     RCALL     0x2098                                                                                          
001ad4   0e0c     MOVLW     0xc                                                                                             
001ad6   c002     MOVFF     0x2,0xfdb                                                                                       
001ad8   ffdb                                                                                                               
001ada   0e0d     MOVLW     0xd                                                                                             
001adc   c003     MOVFF     0x3,0xfdb                                                                                       
001ade   ffdb                                                                                                               
001f3e   5e04     SUBWF     0x4,0x1,0x0                                                                                     
001f40   0e00     MOVLW     0x0                                                                                             
001f42   5a05     SUBWFB    0x5,0x1,0x0                                                                                     
001f44   0ef7     MOVLW     0xf7                                                                                            
001f46   c004     MOVFF     0x4,0xfdb                                                                                       
001f48   ffdb                                                                                                               
001f4a   0ef8     MOVLW     0xf8                                                                                            
001f4c   c005     MOVFF     0x5,0xfdb                                                                                       
001f4e   ffdb                                                                                                               
001f50   c004     MOVFF     0x4,0xfe9                                                                                       
001f52   ffe9                                                                                                               
001f54   c005     MOVFF     0x5,0xfea                                                                                       
001f56   ffea                                                                                                               
001f58   0012     RETURN    0x0                                                                                             
001fb2   0ef7     MOVLW     0xf7                                                                                            
001fb4   cfdb     MOVFF     0xfdb,0x4                                                                                       
001fb6   f004                                                                                                               
001fb8   0ef8     MOVLW     0xf8                                                                                            
001fba   cfdb     MOVFF     0xfdb,0x5                                                                                       
001fbc   f005                                                                                                               
001fbe   0012     RETURN    0x0                                                                                             
002098   0e0a     MOVLW     0xa                                                                                             
00209a   c000     MOVFF     0x0,0xfdb                                                                                       
00209c   ffdb                                                                                                               
00209e   0e0b     MOVLW     0xb                                                                                             
0020a0   c001     MOVFF     0x1,0xfdb                                                                                       
0020a2   ffdb                                                                                                               
0020a4   0012     RETURN    0x0                                                                                             
0020b8   cfee     MOVFF     0xfee,0x0                                                                                       
0020ba   f000                                                                                                               
0020bc   cfef     MOVFF     0xfef,0x1                                                                                       
0020be   f001                                                                                                               
0020c0   0012     RETURN    0x0                                                                                             
001ae0   d01a     BRA       0x1b16                       else                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ae2   0ef7     MOVLW     0xf7                           larg = va_arg (ap, unsigned int);                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ae4   cfdb     MOVFF     0xfdb,0x2                                                                                       
001ae6   f002                                                                                                               
001ae8   0ef8     MOVLW     0xf8                                                                                            
001aea   cfdb     MOVFF     0xfdb,0x3                                                                                       
001aec   f003                                                                                                               
001aee   0e02     MOVLW     0x2                                                                                             
001af0   5e02     SUBWF     0x2,0x1,0x0                                                                                     
001af2   0e00     MOVLW     0x0                                                                                             
001af4   5a03     SUBWFB    0x3,0x1,0x0                                                                                     
001af6   0ef7     MOVLW     0xf7                                                                                            
001af8   c002     MOVFF     0x2,0xfdb                                                                                       
001afa   ffdb                                                                                                               
001afc   0ef8     MOVLW     0xf8                                                                                            
001afe   c003     MOVFF     0x3,0xfdb                                                                                       
001b00   ffdb                                                                                                               
001b02   c002     MOVFF     0x2,0xfe9                                                                                       
001b04   ffe9                                                                                                               
001b06   c003     MOVFF     0x3,0xfea                                                                                       
001b08   ffea                                                                                                               
001b0a   dad6     RCALL     0x20b8                                                                                          
001b0c   dac5     RCALL     0x2098                                                                                          
001b0e   0e0c     MOVLW     0xc                                                                                             
001b10   6adb     CLRF      0xdb,0x0                                                                                        
001b12   0e0d     MOVLW     0xd                                                                                             
001b14   6adb     CLRF      0xdb,0x0                                                                                        
                                                       _do_integer_conversion:                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* default precision is 1 */                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b16   0e06     MOVLW     0x6                          if (!have_precision)                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b18   50db     MOVF      0xdb,0x0,0x0                                                                                    
001b1a   e105     BNZ       0x1b26                                                                                          
001b1c   0e01     MOVLW     0x1                            precision = 1;                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b1e   6ef3     MOVWF     0xf3,0x0                                                                                        
001b20   0e05     MOVLW     0x5                                                                                             
001b22   cff3     MOVFF     0xff3,0xfdb                                                                                     
001b24   ffdb                                                                                                               
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         {                                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b26   0e15     MOVLW     0x15                           unsigned char digit_cnt = 0;                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b28   6adb     CLRF      0xdb,0x0                                                                                        
001b2a   0e16     MOVLW     0x16                           unsigned char prefix_cnt = 0;                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b2c   6adb     CLRF      0xdb,0x0                                                                                        
                                                           unsigned char sign_char;                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* A 32 bit number will require at most 32 digits in the         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              string representation (binary format). */                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           char buf[33];                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* Start storing digits least-significant first */               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b2e   50d9     MOVF      0xd9,0x0,0x0                   char *q = &buf[31];                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b30   0f37     ADDLW     0x37                                                                                            
001b32   6e00     MOVWF     0x0,0x0                                                                                         
001b34   0e00     MOVLW     0x0                                                                                             
001b36   20da     ADDWFC    0xda,0x0,0x0                                                                                    
001b38   6e01     MOVWF     0x1,0x0                                                                                         
001b3a   0e39     MOVLW     0x39                                                                                            
001b3c   c000     MOVFF     0x0,0xfdb                                                                                       
001b3e   ffdb                                                                                                               
001b40   0e3a     MOVLW     0x3a                                                                                            
001b42   c001     MOVFF     0x1,0xfdb                                                                                       
001b44   ffdb                                                                                                               
                                                           /* null terminate the string */                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b46   0e38     MOVLW     0x38                           buf[32] = '\0';                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b48   6adb     CLRF      0xdb,0x0                                                                                        
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b4a   0e08     MOVLW     0x8                            space_cnt = 0;                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b4c   6adb     CLRF      0xdb,0x0                                                                                        
001b4e   0e0a     MOVLW     0xa                            size = 10;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b50   daae     RCALL     0x20ae                                                                                          
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b52   50df     MOVF      0xdf,0x0,0x0                   switch (c)                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b54   0a78     XORLW     0x78                                                                                            
001b56   e012     BZ        0x1b7c                                                                                          
001b58   0a20     XORLW     0x20                                                                                            
001b5a   e010     BZ        0x1b7c                                                                                          
001b5c   0a28     XORLW     0x28                                                                                            
001b5e   e00c     BZ        0x1b78                                                                                          
001b60   0a20     XORLW     0x20                                                                                            
001b62   e00a     BZ        0x1b78                                                                                          
001b64   0a3f     XORLW     0x3f                                                                                            
001b66   e006     BZ        0x1b74                                                                                          
001b68   0a0d     XORLW     0xd                                                                                             
001b6a   e002     BZ        0x1b70                                                                                          
001b6c   0a20     XORLW     0x20                                                                                            
001b6e   e108     BNZ       0x1b80                                                                                          
                                                             {                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'b':                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'B':                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b70   0e02     MOVLW     0x2                                size = 2;                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b72   d005     BRA       0x1b7e                             break;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'o':                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b74   0e08     MOVLW     0x8                                size = 8;                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b76   d003     BRA       0x1b7e                             break;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'p':                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'P':                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                               /* from here on out, treat 'p' conversions just              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                  like 'x' conversions. */                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b78   0e08     MOVLW     0x8                                c += 'x' - 'p';                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b7a   26df     ADDWF     0xdf,0x1,0x0                                                                                    
                                                               /* fall through */                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'x':                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'X':                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b7c   0e10     MOVLW     0x10                               size = 16;                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b7e   da97     RCALL     0x20ae                                                                                          
0020ae   6ef3     MOVWF     0xf3,0x0                                                                                        
0020b0   0e07     MOVLW     0x7                                                                                             
0020b2   cff3     MOVFF     0xff3,0xfdb                                                                                     
0020b4   ffdb                                                                                                               
0020b6   0012     RETURN    0x0                                                                                             
                                                               break;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             }                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* if it's an unsigned conversion, we should ignore the          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              ' ' and '+' flags */                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b80   0e03     MOVLW     0x3                            if (!(flags & _FLAG_SIGNED))                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b82   bedb     BTFSC     0xdb,0x7,0x0                                                                                    
001b84   d002     BRA       0x1b8a                                                                                          
001b86   92db     BCF       0xdb,0x1,0x0                     flags &= ~(_FLAG_PLUS | _FLAG_SPACE);                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b88   94db     BCF       0xdb,0x2,0x0                                                                                    
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* if it's a negative value, we need to negate the               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              unsigned version before we convert to text. Using             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              unsigned for this allows us to (ab)use the 2's                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              complement system to avoid overflow and be able to            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              adequately handle LONG_MIN.                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              We'll figure out what sign character to print, if             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              any, here as well. */                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b8a   50db     MOVF      0xdb,0x0,0x0                   if (flags & _FLAG_SIGNED && ((long) larg < 0))                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b8c   0b80     ANDLW     0x80                                                                                            
001b8e   e026     BZ        0x1bdc                                                                                          
001b90   da8a     RCALL     0x20a6                                                                                          
001b92   0e03     MOVLW     0x3                                                                                             
001b94   50eb     MOVF      0xeb,0x0,0x0                                                                                    
001b96   0a00     XORLW     0x0                                                                                             
001b98   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
001b9a   d002     BRA       0x1ba0                                                                                          
001b9c   90d8     BCF       0xd8,0x0,0x0                                                                                    
001b9e   d008     BRA       0x1bb0                                                                                          
001ba0   0e00     MOVLW     0x0                                                                                             
001ba2   5cee     SUBWF     0xee,0x0,0x0                                                                                    
001ba4   0e00     MOVLW     0x0                                                                                             
001ba6   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
001ba8   0e00     MOVLW     0x0                                                                                             
001baa   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
001bac   0e00     MOVLW     0x0                                                                                             
001bae   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
001bb0   e215     BC        0x1bdc                                                                                          
0020a6   50d9     MOVF      0xd9,0x0,0x0                                                                                    
0020a8   0f0a     ADDLW     0xa                                                                                             
0020aa   efe7     GOTO      0x21ce                                                                                          
0020ac   f010                                                                                                               
0021ce   6ee9     MOVWF     0xe9,0x0                                                                                        
0021d0   0e00     MOVLW     0x0                                                                                             
0021d2   20da     ADDWFC    0xda,0x0,0x0                                                                                    
0021d4   6eea     MOVWF     0xea,0x0                                                                                        
0021d6   0012     RETURN    0x0                                                                                             
                                                             {                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001bb2   da11     RCALL     0x1fd6                             larg = -(long) larg;                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001bb4   6838     SETF      0x38,0x0                                                                                        
001bb6   6839     SETF      0x39,0x0                                                                                        
001bb8   683a     SETF      0x3a,0x0                                                                                        
001bba   683b     SETF      0x3b,0x0                                                                                        
001bbc   ec9a     CALL      0x5334,0x0                                                                                      
001bbe   f029                                                                                                               
001bc0   0e0a     MOVLW     0xa                                                                                             
001bc2   c02f     MOVFF     0x2f,0xfdb                                                                                      
001bc4   ffdb                                                                                                               
001bc6   0e0b     MOVLW     0xb                                                                                             
001bc8   c030     MOVFF     0x30,0xfdb                                                                                      
001bca   ffdb                                                                                                               
001bcc   0e0c     MOVLW     0xc                                                                                             
001bce   c031     MOVFF     0x31,0xfdb                                                                                      
001bd0   ffdb                                                                                                               
001bd2   0e0d     MOVLW     0xd                                                                                             
001bd4   c032     MOVFF     0x32,0xfdb                                                                                      
001bd6   ffdb                                                                                                               
001fd6   0e0a     MOVLW     0xa                                                                                             
001fd8   cfdb     MOVFF     0xfdb,0x33                                                                                      
001fda   f033                                                                                                               
001fdc   0e0b     MOVLW     0xb                                                                                             
001fde   cfdb     MOVFF     0xfdb,0x34                                                                                      
001fe0   f034                                                                                                               
001fe2   0e0c     MOVLW     0xc                                                                                             
001fe4   cfdb     MOVFF     0xfdb,0x35                                                                                      
001fe6   f035                                                                                                               
001fe8   0e0d     MOVLW     0xd                                                                                             
001fea   cfdb     MOVFF     0xfdb,0x36                                                                                      
001fec   f036                                                                                                               
001fee   0012     RETURN    0x0                                                                                             
001bd8   0e2d     MOVLW     0x2d                               sign_char = '-';                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                               ++digit_cnt;                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             }                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001bda   d008     BRA       0x1bec                         else if (flags & _FLAG_PLUS)                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001bdc   0e03     MOVLW     0x3                                                                                             
001bde   a2db     BTFSS     0xdb,0x1,0x0                                                                                    
001be0   d002     BRA       0x1be6                                                                                          
                                                             {                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001be2   0e2b     MOVLW     0x2b                               sign_char = '+';                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                               ++digit_cnt;                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             }                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001be4   d003     BRA       0x1bec                         else if (flags & _FLAG_SPACE)                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001be6   a4db     BTFSS     0xdb,0x2,0x0                                                                                    
001be8   d008     BRA       0x1bfa                                                                                          
                                                             {                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001bea   0e20     MOVLW     0x20                               sign_char = ' ';                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001bec   6ef3     MOVWF     0xf3,0x0                                                                                        
001bee   0e17     MOVLW     0x17                                                                                            
001bf0   cff3     MOVFF     0xff3,0xfdb                                                                                     
001bf2   ffdb                                                                                                               
001bf4   0e15     MOVLW     0x15                               ++digit_cnt;                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001bf6   2adb     INCF      0xdb,0x1,0x0                                                                                    
                                                             }                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001bf8   d002     BRA       0x1bfe                         else                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001bfa   0e17     MOVLW     0x17                             sign_char = '\0';                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001bfc   6adb     CLRF      0xdb,0x0                                                                                        
                                                           /* get the digits for the actual number. If the                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              precision is zero and the value is zero, the result           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              is no characters. */                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001bfe   0e05     MOVLW     0x5                            if (precision || larg)                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c00   50db     MOVF      0xdb,0x0,0x0                                                                                    
001c02   e103     BNZ       0x1c0a                                                                                          
001c04   d9b5     RCALL     0x1f70                                                                                          
001c06   e101     BNZ       0x1c0a                                                                                          
001c08   d089     BRA       0x1d1c                                                                                          
001f70   0e0a     MOVLW     0xa                                                                                             
001f72   cfdb     MOVFF     0xfdb,0x0                                                                                       
001f74   f000                                                                                                               
001f76   0e0b     MOVLW     0xb                                                                                             
001f78   cfdb     MOVFF     0xfdb,0x1                                                                                       
001f7a   f001                                                                                                               
001f7c   0e0c     MOVLW     0xc                                                                                             
001f7e   cfdb     MOVFF     0xfdb,0x2                                                                                       
001f80   f002                                                                                                               
001f82   0e0d     MOVLW     0xd                                                                                             
001f84   cfdb     MOVFF     0xfdb,0x3                                                                                       
001f86   f003                                                                                                               
001f88   5000     MOVF      0x0,0x0,0x0                                                                                     
001f8a   1001     IORWF     0x1,0x0,0x0                                                                                     
001f8c   1002     IORWF     0x2,0x0,0x0                                                                                     
001f8e   1003     IORWF     0x3,0x0,0x0                                                                                     
001f90   0012     RETURN    0x0                                                                                             
                                                             {                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                               do                                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                 {                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c0a   0ee9     MOVLW     0xe9                                   cval = s_digits[larg % size];                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c0c   6e00     MOVWF     0x0,0x0                                                                                         
001c0e   0e56     MOVLW     0x56                                                                                            
001c10   6e01     MOVWF     0x1,0x0                                                                                         
001c12   0e00     MOVLW     0x0                                                                                             
001c14   6e02     MOVWF     0x2,0x0                                                                                         
001c16   0e07     MOVLW     0x7                                                                                             
001c18   cfdb     MOVFF     0xfdb,0x3                                                                                       
001c1a   f003                                                                                                               
001c1c   6a04     CLRF      0x4,0x0                                                                                         
001c1e   6a05     CLRF      0x5,0x0                                                                                         
001c20   6a06     CLRF      0x6,0x0                                                                                         
001c22   c003     MOVFF     0x3,0x38                                                                                        
001c24   f038                                                                                                               
001c26   c004     MOVFF     0x4,0x39                                                                                        
001c28   f039                                                                                                               
001c2a   c005     MOVFF     0x5,0x3a                                                                                        
001c2c   f03a                                                                                                               
001c2e   c006     MOVFF     0x6,0x3b                                                                                        
001c30   f03b                                                                                                               
001c32   d9d1     RCALL     0x1fd6                                                                                          
001c34   ec9e     CALL      0x553c,0x0                                                                                      
001c36   f02a                                                                                                               
001c38   5000     MOVF      0x0,0x0,0x0                                                                                     
001c3a   242f     ADDWF     0x2f,0x0,0x0                                                                                    
001c3c   6ef3     MOVWF     0xf3,0x0                                                                                        
001c3e   5001     MOVF      0x1,0x0,0x0                                                                                     
001c40   2030     ADDWFC    0x30,0x0,0x0                                                                                    
001c42   6ef4     MOVWF     0xf4,0x0                                                                                        
001c44   5002     MOVF      0x2,0x0,0x0                                                                                     
001c46   2031     ADDWFC    0x31,0x0,0x0                                                                                    
001c48   6ef8     MOVWF     0xf8,0x0                                                                                        
001c4a   cff4     MOVFF     0xff4,0xff7                                                                                     
001c4c   fff7                                                                                                               
001c4e   cff3     MOVFF     0xff3,0xff6                                                                                     
001c50   fff6                                                                                                               
001c52   0008     TBLRD                                                                                                     
001c54   0e09     MOVLW     0x9                                                                                             
001c56   cff5     MOVFF     0xff5,0xfdb                                                                                     
001c58   ffdb                                                                                                               
001c5a   0e58     MOVLW     0x58                                   if (c == 'X' && cval >= 'a')                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c5c   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001c5e   e10f     BNZ       0x1c7e                                                                                          
001c60   0e61     MOVLW     0x61                                                                                            
001c62   6ef3     MOVWF     0xf3,0x0                                                                                        
001c64   0e09     MOVLW     0x9                                                                                             
001c66   d979     RCALL     0x1f5a                                                                                          
001c68   e30a     BNC       0x1c7e                                                                                          
001f5a   cfdb     MOVFF     0xfdb,0xff4                                                                                     
001f5c   fff4                                                                                                               
001f5e   50f3     MOVF      0xf3,0x0,0x0                                                                                    
001f60   5cf4     SUBWF     0xf4,0x0,0x0                                                                                    
001f62   0012     RETURN    0x0                                                                                             
001c6a   0e20     MOVLW     0x20                                     cval -= 'a' - 'A';                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c6c   6e00     MOVWF     0x0,0x0                                                                                         
001c6e   0e09     MOVLW     0x9                                                                                             
001c70   cfdb     MOVFF     0xfdb,0xfe7                                                                                     
001c72   ffe7                                                                                                               
001c74   5000     MOVF      0x0,0x0,0x0                                                                                     
001c76   5ee7     SUBWF     0xe7,0x1,0x0                                                                                    
001c78   0e09     MOVLW     0x9                                                                                             
001c7a   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
001c7c   ffdb                                                                                                               
001c7e   0e07     MOVLW     0x7                                    larg /= size;                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c80   cfdb     MOVFF     0xfdb,0x0                                                                                       
001c82   f000                                                                                                               
001c84   6a01     CLRF      0x1,0x0                                                                                         
001c86   6a02     CLRF      0x2,0x0                                                                                         
001c88   6a03     CLRF      0x3,0x0                                                                                         
001c8a   da0d     RCALL     0x20a6                                                                                          
001c8c   c000     MOVFF     0x0,0x38                                                                                        
001c8e   f038                                                                                                               
001c90   c001     MOVFF     0x1,0x39                                                                                        
001c92   f039                                                                                                               
001c94   c002     MOVFF     0x2,0x3a                                                                                        
001c96   f03a                                                                                                               
001c98   c003     MOVFF     0x3,0x3b                                                                                        
001c9a   f03b                                                                                                               
001c9c   cfee     MOVFF     0xfee,0x33                                                                                      
001c9e   f033                                                                                                               
001ca0   cfee     MOVFF     0xfee,0x34                                                                                      
001ca2   f034                                                                                                               
001ca4   cfee     MOVFF     0xfee,0x35                                                                                      
001ca6   f035                                                                                                               
001ca8   cfef     MOVFF     0xfef,0x36                                                                                      
001caa   f036                                                                                                               
001cac   ec9e     CALL      0x553c,0x0                                                                                      
001cae   f02a                                                                                                               
001cb0   c036     MOVFF     0x36,0xfed                                                                                      
001cb2   ffed                                                                                                               
001cb4   c035     MOVFF     0x35,0xfed                                                                                      
001cb6   ffed                                                                                                               
001cb8   c034     MOVFF     0x34,0xfed                                                                                      
001cba   ffed                                                                                                               
001cbc   c033     MOVFF     0x33,0xfef                                                                                      
001cbe   ffef                                                                                                               
001cc0   0e39     MOVLW     0x39                                   *q-- = cval;                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001cc2   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
001cc4   ffe9                                                                                                               
001cc6   06db     DECF      0xdb,0x1,0x0                                                                                    
001cc8   0e3a     MOVLW     0x3a                                                                                            
001cca   cfdb     MOVFF     0xfdb,0xfea                                                                                     
001ccc   ffea                                                                                                               
001cce   e201     BC        0x1cd2                                                                                          
001cd0   06db     DECF      0xdb,0x1,0x0                                                                                    
001cd2   0e09     MOVLW     0x9                                                                                             
001cd4   cfdb     MOVFF     0xfdb,0xfef                                                                                     
001cd6   ffef                                                                                                               
001cd8   0e15     MOVLW     0x15                                   ++digit_cnt;                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001cda   2adb     INCF      0xdb,0x1,0x0                                                                                    
                                                                 }                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001cdc   d949     RCALL     0x1f70                             while (larg);                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001cde   e195     BNZ       0x1c0a                                                                                          
                                                               /* if the '#' flag was specified and we're dealing           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                  with an 'o', 'b', 'B', 'x', or 'X' conversion,            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                  we need a bit more. */                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ce0   0e03     MOVLW     0x3                                if (flags & _FLAG_OCTO)                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ce2   a6db     BTFSS     0xdb,0x3,0x0                                                                                    
001ce4   d01d     BRA       0x1d20                                                                                          
                                                                 {                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ce6   0e6f     MOVLW     0x6f                                   if (c == 'o')                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ce8   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001cea   e106     BNZ       0x1cf8                                                                                          
                                                                     {                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                       /* per the standard, for octal, the '#' flag         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                          makes the precision be at least one more          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                          than the number of digits in the number */        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001cec   d9bf     RCALL     0x206c                                     if (precision <= digit_cnt)                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001cee   e318     BNC       0x1d20                                                                                          
00206c   0e05     MOVLW     0x5                                                                                             
00206e   cfdb     MOVFF     0xfdb,0x0                                                                                       
002070   f000                                                                                                               
002072   0e15     MOVLW     0x15                                                                                            
002074   50db     MOVF      0xdb,0x0,0x0                                                                                    
002076   80d8     BSF       0xd8,0x0,0x0                                                                                    
002078   5400     SUBFWB    0x0,0x0,0x0                                                                                     
00207a   0012     RETURN    0x0                                                                                             
001cf0   0e15     MOVLW     0x15                                         precision = digit_cnt + 1;                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001cf2   28db     INCF      0xdb,0x0,0x0                                                                                    
001cf4   da59     RCALL     0x21a8                                                                                          
                                                                     }                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001cf6   d014     BRA       0x1d20                                 else if (c == 'x'                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001cf8   0e78     MOVLW     0x78                                                                                            
001cfa   5cdf     SUBWF     0xdf,0x0,0x0                                    || c == 'X' || c == 'b' || c == 'B')            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001cfc   e009     BZ        0x1d10                                                                                          
001cfe   0e58     MOVLW     0x58                                                                                            
001d00   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001d02   e006     BZ        0x1d10                                                                                          
001d04   0e62     MOVLW     0x62                                                                                            
001d06   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001d08   e003     BZ        0x1d10                                                                                          
001d0a   0e42     MOVLW     0x42                                                                                            
001d0c   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001d0e   e108     BNZ       0x1d20                                                                                          
001d10   0e02     MOVLW     0x2                                      prefix_cnt = 2;                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d12   6ef3     MOVWF     0xf3,0x0                                                                                        
001d14   0e16     MOVLW     0x16                                                                                            
001d16   cff3     MOVFF     0xff3,0xfdb                                                                                     
001d18   ffdb                                                                                                               
                                                                 }                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             }                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d1a   d002     BRA       0x1d20                         else                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d1c   0e15     MOVLW     0x15                             digit_cnt = 0;                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d1e   6adb     CLRF      0xdb,0x0                                                                                        
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* The leading zero count depends on whether the '0'             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              flag was specified or not. If it was not, then the            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              count is the difference between the specified                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              precision and the number of digits (including the             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              sign character, if any) to be printed; otherwise,             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              it's as if the precision were equal to the max of             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              the specified precision and the field width. If a             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              precision was specified, the '0' flag is ignored,             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              however. */                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d20   0e03     MOVLW     0x3                            if ((flags & _FLAG_ZERO) && (width > precision)                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d22   50db     MOVF      0xdb,0x0,0x0                                                                                    
001d24   0b10     ANDLW     0x10                                                                                            
001d28   0e04     MOVLW     0x4                                                                                             
001d2a   cfdb     MOVFF     0xfdb,0x0                                                                                       
001d2c   f000                                                                                                               
001d2e   0e05     MOVLW     0x5                                                                                             
001d30   50db     MOVF      0xdb,0x0,0x0                                                                                    
001d32   80d8     BSF       0xd8,0x0,0x0                                                                                    
001d34   5400     SUBFWB    0x0,0x0,0x0                                                                                     
001d26   e00e     BZ        0x1d44                             && !have_precision)                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d36   e206     BC        0x1d44                                                                                          
001d38   0e06     MOVLW     0x6                                                                                             
001d3a   50db     MOVF      0xdb,0x0,0x0                                                                                    
001d3c   e103     BNZ       0x1d44                                                                                          
001d3e   0e04     MOVLW     0x4                              precision = width;                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d40   50db     MOVF      0xdb,0x0,0x0                                                                                    
001d42   da32     RCALL     0x21a8                                                                                          
                                                           /* for the rest of the processing, precision contains            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              the leading zero count for the conversion. */                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d44   d993     RCALL     0x206c                         if (precision > digit_cnt)                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d46   e20a     BC        0x1d5c                                                                                          
001d48   0e05     MOVLW     0x5                              precision -= digit_cnt;                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d4a   cfdb     MOVFF     0xfdb,0xfe7                                                                                     
001d4c   ffe7                                                                                                               
001d4e   0e15     MOVLW     0x15                                                                                            
001d50   50db     MOVF      0xdb,0x0,0x0                                                                                    
001d52   5ee7     SUBWF     0xe7,0x1,0x0                                                                                    
001d54   0e05     MOVLW     0x5                                                                                             
001d56   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
001d58   ffdb                                                                                                               
001d5a   d002     BRA       0x1d60                         else                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d5c   0e05     MOVLW     0x5                              precision = 0;                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d5e   6adb     CLRF      0xdb,0x0                                                                                        
                                                           /* the space count is the difference between the field           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              width and the digit count plus the leading zero               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              count. If the width is less than the digit count              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              plus the leading zero count, the space count is               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              zero. */                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d60   0e04     MOVLW     0x4                            if (width > precision + digit_cnt + prefix_cnt)                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d62   cfdb     MOVFF     0xfdb,0x0                                                                                       
001d64   f000                                                                                                               
001d66   0e16     MOVLW     0x16                                                                                            
001d68   d943     RCALL     0x1ff0                                                                                          
001d6a   80d8     BSF       0xd8,0x0,0x0                                                                                    
001d6c   5400     SUBFWB    0x0,0x0,0x0                                                                                     
001d6e   e214     BC        0x1d98                                                                                          
001ff0   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001ff2   ffe6                                                                                                               
001ff4   0e15     MOVLW     0x15                                                                                            
001ff6   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001ff8   ffe6                                                                                                               
001ffa   0e05     MOVLW     0x5                                                                                             
001ffc   50db     MOVF      0xdb,0x0,0x0                                                                                    
001ffe   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002000   24e7     ADDWF     0xe7,0x0,0x0                                                                                    
002002   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002004   24e7     ADDWF     0xe7,0x0,0x0                                                                                    
002006   0012     RETURN    0x0                                                                                             
                                                             space_cnt =                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d70   0e16     MOVLW     0x16                               width - precision - digit_cnt - prefix_cnt;                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d72   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001d74   ffe6                                                                                                               
001d76   0e15     MOVLW     0x15                                                                                            
001d78   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001d7a   ffe6                                                                                                               
001d7c   0e04     MOVLW     0x4                                                                                             
001d7e   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001d80   ffe6                                                                                                               
001d82   0e05     MOVLW     0x5                                                                                             
001d84   50db     MOVF      0xdb,0x0,0x0                                                                                    
001d86   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001d88   5ce7     SUBWF     0xe7,0x0,0x0                                                                                    
001d8a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001d8c   80d8     BSF       0xd8,0x0,0x0                                                                                    
001d8e   54e7     SUBFWB    0xe7,0x0,0x0                                                                                    
001d90   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001d92   80d8     BSF       0xd8,0x0,0x0                                                                                    
001d94   54e7     SUBFWB    0xe7,0x0,0x0                                                                                    
001d96   d95d     RCALL     0x2052                                                                                          
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* for output, we check the justification, if it's               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              right justified and the space count is positive, we           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              emit the space characters first. */                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d98   0e03     MOVLW     0x3                            if (!(flags & _FLAG_MINUS) && space_cnt)                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d9a   50db     MOVF      0xdb,0x0,0x0                                                                                    
001d9c   0b01     ANDLW     0x1                                                                                             
001d9e   e10b     BNZ       0x1db6                                                                                          
001da0   0e08     MOVLW     0x8                                                                                             
001da2   50db     MOVF      0xdb,0x0,0x0                                                                                    
001da4   e008     BZ        0x1db6                                                                                          
                                                             {                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001da6   d8b0     RCALL     0x1f08                             if (s_put_n_chars (handle, space_cnt, ' '))                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001da8   e001     BZ        0x1dac                                                                                          
001daa   d08d     BRA       0x1ec6                                                                                          
                                                                 return EOF;                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001dac   0e08     MOVLW     0x8                                count += space_cnt;                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001dae   50db     MOVF      0xdb,0x0,0x0                                                                                    
001db0   d8bc     RCALL     0x1f2a                                                                                          
001db2   0e08     MOVLW     0x8                                space_cnt = 0;                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001db4   6adb     CLRF      0xdb,0x0                                                                                        
                                                             }                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* if we have a sign character to print, that comes              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              next */                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001db6   0e17     MOVLW     0x17                           if (sign_char)                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001db8   50db     MOVF      0xdb,0x0,0x0                                                                                    
001dba   e007     BZ        0x1dca                                                                                          
001dbc   d986     RCALL     0x20ca                           if (putc (sign_char, handle) == EOF)                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001dbe   0e17     MOVLW     0x17                                                                                            
001dc0   d9ef     RCALL     0x21a0                                                                                          
001dc2   e103     BNZ       0x1dca                                                                                          
001dc4   1c01     COMF      0x1,0x0,0x0                                                                                     
001dc6   e101     BNZ       0x1dca                                                                                          
001dc8   d07e     BRA       0x1ec6                                                                                          
                                                               return EOF;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* if we have a prefix (0b, 0B, 0x or 0X), that's next */        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001dca   0e16     MOVLW     0x16                           if (prefix_cnt)                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001dcc   50db     MOVF      0xdb,0x0,0x0                                                                                    
001dce   e016     BZ        0x1dfc                                                                                          
                                                             {                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001dd0   d97c     RCALL     0x20ca                             if (putc ('0', handle) == EOF)                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001dd2   0e30     MOVLW     0x30                                                                                            
001dd4   6ee6     MOVWF     0xe6,0x0                                                                                        
001dd6   d89d     RCALL     0x1f12                                                                                          
001dd8   e102     BNZ       0x1dde                                                                                          
001dda   1c01     COMF      0x1,0x0,0x0                                                                                     
001ddc   e074     BZ        0x1ec6                                                                                          
                                                                 return EOF;                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001dde   d975     RCALL     0x20ca                             if (putc (c, handle) == EOF)                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001de0   cfdf     MOVFF     0xfdf,0xfe6                                                                                     
001de2   ffe6                                                                                                               
001de4   ec58     CALL      0x52b0,0x0                                                                                      
001de6   f029                                                                                                               
001de8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001dea   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001dec   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001dee   cff4     MOVFF     0xff4,0x1                                                                                       
001df0   f001                                                                                                               
001df2   0100     MOVLB     0x0                                                                                             
001df4   1cf3     COMF      0xf3,0x0,0x0                                                                                    
001df6   e102     BNZ       0x1dfc                                                                                          
001df8   1c01     COMF      0x1,0x0,0x0                                                                                     
001dfa   e065     BZ        0x1ec6                                                                                          
                                                                 return EOF;                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             }                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* if we have leading zeros, they follow. the prefix, if any     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              is included in the number of digits when determining how      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              many leading zeroes are needed. */                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001dfc   0e05     MOVLW     0x5                            if (precision > prefix_cnt)                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001dfe   cfdb     MOVFF     0xfdb,0x0                                                                                       
001e00   f000                                                                                                               
001e02   0e16     MOVLW     0x16                                                                                            
001e04   50db     MOVF      0xdb,0x0,0x0                                                                                    
001e06   80d8     BSF       0xd8,0x0,0x0                                                                                    
001e08   5400     SUBFWB    0x0,0x0,0x0                                                                                     
001e0a   e209     BC        0x1e1e                                                                                          
001e0c   0e05     MOVLW     0x5                              precision -= prefix_cnt;                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e0e   cfdb     MOVFF     0xfdb,0xfe7                                                                                     
001e10   ffe7                                                                                                               
001e12   0e16     MOVLW     0x16                                                                                            
001e14   50db     MOVF      0xdb,0x0,0x0                                                                                    
001e16   5ee7     SUBWF     0xe7,0x1,0x0                                                                                    
001e18   0e05     MOVLW     0x5                                                                                             
001e1a   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
001e1c   ffdb                                                                                                               
001e1e   0e30     MOVLW     0x30                           if (s_put_n_chars (handle, precision, '0'))                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e20   6ee6     MOVWF     0xe6,0x0                                                                                        
001e22   0e05     MOVLW     0x5                                                                                             
001e24   d9c9     RCALL     0x21b8                                                                                          
001e26   e14f     BNZ       0x1ec6                                                                                          
00216a   ecdb     CALL      0x15b6,0x0                                                                                      
00216c   f00a                                                                                                               
00216e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002170   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002172   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002174   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002176   0900     IORLW     0x0                                                                                             
002178   0012     RETURN    0x0                                                                                             
0021b8   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0021ba   ffe6                                                                                                               
0021bc   df86     RCALL     0x20ca                                                                                          
0021be   efb5     GOTO      0x216a                                                                                          
0021c0   f010                                                                                                               
                                                             return EOF;                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* print the actual number */                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e28   0e39     MOVLW     0x39                           for (cval = *++q; cval; cval = *++q)                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e2a   2adb     INCF      0xdb,0x1,0x0                                                                                    
001e2c   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
001e2e   ffe9                                                                                                               
001e30   0e3a     MOVLW     0x3a                                                                                            
001e32   e301     BNC       0x1e36                                                                                          
001e34   2adb     INCF      0xdb,0x1,0x0                                                                                    
001e36   cfdb     MOVFF     0xfdb,0xfea                                                                                     
001e38   ffea                                                                                                               
001e3a   0e09     MOVLW     0x9                                                                                             
001e3c   cfef     MOVFF     0xfef,0xfdb                                                                                     
001e3e   ffdb                                                                                                               
001e40   50db     MOVF      0xdb,0x0,0x0                                                                                    
001e42   e00e     BZ        0x1e60                                                                                          
001e50   0e39     MOVLW     0x39                                                                                            
001e52   2adb     INCF      0xdb,0x1,0x0                                                                                    
001e54   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
001e56   ffe9                                                                                                               
001e58   0e3a     MOVLW     0x3a                                                                                            
001e5a   e3ed     BNC       0x1e36                                                                                          
001e5c   2adb     INCF      0xdb,0x1,0x0                                                                                    
001e5e   d7eb     BRA       0x1e36                                                                                          
001e44   d942     RCALL     0x20ca                           if (putc (cval, handle) == EOF)                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e46   0e09     MOVLW     0x9                                                                                             
001e48   d9ab     RCALL     0x21a0                                                                                          
001e4a   e102     BNZ       0x1e50                                                                                          
001e4c   1c01     COMF      0x1,0x0,0x0                                                                                     
001e4e   e03b     BZ        0x1ec6                                                                                          
0021a0   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0021a2   ffe6                                                                                                               
0021a4   ef89     GOTO      0x1f12                                                                                          
0021a6   f00f                                                                                                               
                                                               return EOF;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* if there are any spaces left, they go to right-pad            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              the field */                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e60   d853     RCALL     0x1f08                         if (s_put_n_chars (handle, space_cnt, ' '))                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e62   e131     BNZ       0x1ec6                                                                                          
001f08   0e20     MOVLW     0x20                                                                                            
001f0a   6ee6     MOVWF     0xe6,0x0                                                                                        
001f0c   0e08     MOVLW     0x8                                                                                             
001f0e   efdc     GOTO      0x21b8                                                                                          
001f10   f010                                                                                                               
0020ca   0efc     MOVLW     0xfc                                                                                            
0020cc   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0020ce   ffe6                                                                                                               
0020d0   0efd     MOVLW     0xfd                                                                                            
0020d2   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0020d4   ffe6                                                                                                               
0020d6   0012     RETURN    0x0                                                                                             
                                                             return EOF;                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e64   0e16     MOVLW     0x16                           count += precision + digit_cnt + space_cnt + prefix_cnt;         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e66   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001e68   ffe6                                                                                                               
001e6a   0e08     MOVLW     0x8                                                                                             
001e6c   d8c1     RCALL     0x1ff0                                                                                          
001e6e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001e70   24e7     ADDWF     0xe7,0x0,0x0                                                                                    
001e72   d85b     RCALL     0x1f2a                                                                                          
001f2a   6e00     MOVWF     0x0,0x0                                                                                         
001f2c   6a01     CLRF      0x1,0x0                                                                                         
001f2e   50d9     MOVF      0xd9,0x0,0x0                                                                                    
001f30   0f01     ADDLW     0x1                                                                                             
001f32   d94d     RCALL     0x21ce                                                                                          
001f34   5000     MOVF      0x0,0x0,0x0                                                                                     
001f36   26ee     ADDWF     0xee,0x1,0x0                                                                                    
001f38   5001     MOVF      0x1,0x0,0x0                                                                                     
001f3a   22ed     ADDWFC    0xed,0x1,0x0                                                                                    
001f3c   0012     RETURN    0x0                                                                                             
                                                         }                                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e74   d02e     BRA       0x1ed2                       break;                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'n':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e76   0e07     MOVLW     0x7                          switch (size)                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e78   50db     MOVF      0xdb,0x0,0x0                                                                                    
001e7a   0a03     XORLW     0x3                                                                                             
001e7c   e01c     BZ        0x1eb6                                                                                          
001e7e   0a01     XORLW     0x1                                                                                             
001e80   e014     BZ        0x1eaa                                                                                          
001e82   0a03     XORLW     0x3                                                                                             
001e84   e007     BZ        0x1e94                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case _FMT_LONG:                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e94   d8f3     RCALL     0x207c                           *(long *) va_arg (ap, long *) = count;                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e96   6a05     CLRF      0x5,0x0                                                                                         
001e98   ae03     BTFSS     0x3,0x7,0x0                                                                                     
001e9a   d002     BRA       0x1ea0                                                                                          
001e9c   6804     SETF      0x4,0x0                                                                                         
001e9e   6805     SETF      0x5,0x0                                                                                         
001ea0   d82a     RCALL     0x1ef6                                                                                          
001ea2   d8ba     RCALL     0x2018                                                                                          
001ea4   c005     MOVFF     0x5,0xfee                                                                                       
001ea6   ffee                                                                                                               
002018   50ee     MOVF      0xee,0x0,0x0                                                                                    
00201a   cfef     MOVFF     0xfef,0xfea                                                                                     
00201c   ffea                                                                                                               
00201e   6ee9     MOVWF     0xe9,0x0                                                                                        
002020   c002     MOVFF     0x2,0xfee                                                                                       
002022   ffee                                                                                                               
002024   c003     MOVFF     0x3,0xfee                                                                                       
002026   ffee                                                                                                               
002028   c004     MOVFF     0x4,0xfee                                                                                       
00202a   ffee                                                                                                               
00202c   0012     RETURN    0x0                                                                                             
00207c   0e01     MOVLW     0x1                                                                                             
00207e   cfdb     MOVFF     0xfdb,0x2                                                                                       
002080   f002                                                                                                               
002082   0e02     MOVLW     0x2                                                                                             
002084   cfdb     MOVFF     0xfdb,0x3                                                                                       
002086   f003                                                                                                               
002088   6a04     CLRF      0x4,0x0                                                                                         
00208a   0012     RETURN    0x0                                                                                             
001ea8   d014     BRA       0x1ed2                           break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case _FMT_SHLONG:                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001eaa   d8e8     RCALL     0x207c                           *(short long *) va_arg (ap, short long *) = count;             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001eac   be03     BTFSC     0x3,0x7,0x0                                                                                     
001eae   6804     SETF      0x4,0x0                                                                                         
001eb0   d822     RCALL     0x1ef6                                                                                          
001eb2   d8b2     RCALL     0x2018                                                                                          
001eb4   d00e     BRA       0x1ed2                           break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case _FMT_BYTE:                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001eb6   d961     RCALL     0x217a                           *(signed char *) va_arg (ap, signed char *) = count;           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001eb8   cfdb     MOVFF     0xfdb,0xfef                                                                                     
001eba   ffef                                                                                                               
001ebc   d00a     BRA       0x1ed2                           break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           default:                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e86   d979     RCALL     0x217a                           *(int *) va_arg (ap, int *) = count;                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e88   cfdb     MOVFF     0xfdb,0xfee                                                                                     
001e8a   ffee                                                                                                               
001e8c   0e02     MOVLW     0x2                                                                                             
001e8e   cfdb     MOVFF     0xfdb,0xfed                                                                                     
001e90   ffed                                                                                                               
00217a   debd     RCALL     0x1ef6                                                                                          
00217c   50ee     MOVF      0xee,0x0,0x0                                                                                    
00217e   cfef     MOVFF     0xfef,0xfea                                                                                     
002180   ffea                                                                                                               
002182   6ee9     MOVWF     0xe9,0x0                                                                                        
002184   0e01     MOVLW     0x1                                                                                             
002186   0012     RETURN    0x0                                                                                             
                                                             break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e92   d01f     BRA       0x1ed2                       break;                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       default:                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* undefined behaviour. we do nothing */                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         break;                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       }                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                   }                                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                 else                                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                   {                                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ebe   d979     RCALL     0x21b2                   if (putc (c, handle) == EOF)                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ec0   e105     BNZ       0x1ecc                                                                                          
001ec2   1c01     COMF      0x1,0x0,0x0                                                                                     
001ec4   e103     BNZ       0x1ecc                                                                                          
001f12   ec58     CALL      0x52b0,0x0                                                                                      
001f14   f029                                                                                                               
001f16   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001f18   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001f1a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001f1c   cff3     MOVFF     0xff3,0x0                                                                                       
001f1e   f000                                                                                                               
001f20   cff4     MOVFF     0xff4,0x1                                                                                       
001f22   f001                                                                                                               
001f24   0100     MOVLB     0x0                                                                                             
001f26   1cf3     COMF      0xf3,0x0,0x0                                                                                    
001f28   0012     RETURN    0x0                                                                                             
002158   cfdf     MOVFF     0xfdf,0xfe6                                                                                     
00215a   ffe6                                                                                                               
00215c   ef89     GOTO      0x1f12                                                                                          
00215e   f00f                                                                                                               
0021b2   df8b     RCALL     0x20ca                                                                                          
0021b4   efac     GOTO      0x2158                                                                                          
0021b6   f010                                                                                                               
001ec6   68f3     SETF      0xf3,0x0                   return EOF;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ec8   68f4     SETF      0xf4,0x0                                                                                        
001eca   d010     BRA       0x1eec                                                                                          
001ecc   d8fa     RCALL     0x20c2                   ++count;                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ece   e301     BNC       0x1ed2                                                                                          
001ed0   2adb     INCF      0xdb,0x1,0x0                                                                                    
0020c2   0e01     MOVLW     0x1                                                                                             
0020c4   2adb     INCF      0xdb,0x1,0x0                                                                                    
0020c6   0e02     MOVLW     0x2                                                                                             
0020c8   0012     RETURN    0x0                                                                                             
                                                   }                                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                               }                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ed8   0e01     MOVLW     0x1              return count;                                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001eda   cfdb     MOVFF     0xfdb,0x0                                                                                       
001edc   f000                                                                                                               
001ede   0e02     MOVLW     0x2                                                                                             
001ee0   cfdb     MOVFF     0xfdb,0x1                                                                                       
001ee2   f001                                                                                                               
001ee4   c000     MOVFF     0x0,0xff3                                                                                       
001ee6   fff3                                                                                                               
001ee8   c001     MOVFF     0x1,0xff4                                                                                       
001eea   fff4                                                                                                               
001eec   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001eee   ffe1                                                                                                               
001ef0   cfda     MOVFF     0xfda,0xfe2                                                                                     
001ef2   ffe2                                                                                                               
001ef4   d0cb     BRA       0x208c                                                                                          
                                           ;	RCS Header $Id: fxm1616s.asm,v 1.2 2004/10/01 19:13:23 GrosbaJ Exp $           C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;	$Revision: 1.2 $                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           	include <P18CXXX.INC>		; general Golden Gate definitions                        C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           	include <CMATH18.INC>		; Math library definitions                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;	RCS Header $Id: cmath18.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                           ;	$Revision: 1.2 $                                                               C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                               LIST                                                                         C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                           ; CMATH18.INC  v1.0  Microchip Technology, Inc. / F.J. Testa                     C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           	include <AARG.INC>		; AARG declarations                                         C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;	RCS Header $Id: aarg.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $               C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN	AARGB0, AARGB1, AARGB2, AARGB3                                           C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                   EXTERN  AARGB4, AARGB5, AARGB6, AARGB7                                   C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN  AEXP                                                                    C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN  REMB3, REMB2, REMB1, REMB0                                              C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           	include <BARG.INC>		; BARG declarations                                         C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;	RCS Header $Id: barg.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $               C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                   EXTERN  BARGB3, BARGB2, BARGB1, BARGB0                                   C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                   EXTERN  BEXP                                                             C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           	include <TEMPARG.INC>		; TEMPARG declarations                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;	RCS Header $Id: temparg.inc,v 1.2 2004/10/01 19:13:23 GrosbaJ Exp $            C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                                   EXTERN  TEMPB3, TEMPB2, TEMPB1, TEMPB0, TEMP                             C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       16x16 Bit Signed Fixed Point Multiply 16 x 16 -> 32                      C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       Input:  16 bit signed fixed point multiplicand in AARGB0, AARGB1         C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;               16 bit signed fixed point multiplier in BARGB0, BARGB1           C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       Use:    CALL    FXM1616S                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       Output: 32 bit signed fixed point product in AARGB0, AARGB1,             C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;               AARGB2, AARGB3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       Result: AARG  <--  AARG * BARG                                           C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       Max Timing:     39 clks                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       Min Timing:     31 clks                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       PM: 38              DM: 8                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           PROG	CODE                                                                        C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           FXM1616S                                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           		GLOBAL	FXM1616S                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
00345c   c036     MOVFF     0x36,0x42      		MOVFF	AARGB0,TEMPB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
00345e   f042                                                                                                               
003460   c035     MOVFF     0x35,0x41      		MOVFF	AARGB1,TEMPB1	                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003462   f041                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003464   5035     MOVF      0x35,0x0,0x0   		MOVF	AARGB1,W                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003466   023a     MULWF     0x3a,0x0       		MULWF	BARGB1                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003468   cff4     MOVFF     0xff4,0x34     		MOVFF	PRODH,AARGB2                                                             C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
00346a   f034                                                                                                               
00346c   cff3     MOVFF     0xff3,0x33     		MOVFF	PRODL,AARGB3                                                             C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
00346e   f033                                                                                                               
                                           		                                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003470   5036     MOVF      0x36,0x0,0x0   		MOVF	AARGB0,W                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003472   023b     MULWF     0x3b,0x0       		MULWF	BARGB0                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003474   cff4     MOVFF     0xff4,0x36     		MOVFF	PRODH,AARGB0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003476   f036                                                                                                               
003478   cff3     MOVFF     0xff3,0x35     		MOVFF	PRODL,AARGB1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
00347a   f035                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
00347c   023a     MULWF     0x3a,0x0       		MULWF	BARGB1                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
00347e   50f3     MOVF      0xf3,0x0,0x0   		MOVF	PRODL,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003480   2634     ADDWF     0x34,0x1,0x0   		ADDWF	AARGB2,F                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003482   50f4     MOVF      0xf4,0x0,0x0   		MOVF	PRODH,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003484   2235     ADDWFC    0x35,0x1,0x0   		ADDWFC	AARGB1,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003486   6ae8     CLRF      0xe8,0x0       		CLRF	WREG                                                                      C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003488   2236     ADDWFC    0x36,0x1,0x0   		ADDWFC	AARGB0,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
00348a   5041     MOVF      0x41,0x0,0x0   		MOVF	TEMPB1,W                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
00348c   023b     MULWF     0x3b,0x0       		MULWF	BARGB0                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
00348e   50f3     MOVF      0xf3,0x0,0x0   		MOVF	PRODL,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003490   2634     ADDWF     0x34,0x1,0x0   		ADDWF	AARGB2,F                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003492   50f4     MOVF      0xf4,0x0,0x0   		MOVF	PRODH,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003494   2235     ADDWFC    0x35,0x1,0x0   		ADDWFC	AARGB1,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003496   6ae8     CLRF      0xe8,0x0       		CLRF	WREG                                                                      C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003498   2236     ADDWFC    0x36,0x1,0x0   		ADDWFC	AARGB0,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
00349a   ae3b     BTFSS     0x3b,0x7,0x0   		BTFSS	BARGB0,MSB                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
00349c   ef54     GOTO      0x34a8         		GOTO	TSIGN1616A                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
00349e   f01a                                                                                                               
0034a0   5041     MOVF      0x41,0x0,0x0   		MOVF	TEMPB1,W                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
0034a2   5e35     SUBWF     0x35,0x1,0x0   		SUBWF	AARGB1,F                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
0034a4   5042     MOVF      0x42,0x0,0x0   		MOVF	TEMPB0,W                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
0034a6   5a36     SUBWFB    0x36,0x1,0x0   		SUBWFB	AARGB0,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           TSIGN1616A                                                                       C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
0034a8   ae42     BTFSS     0x42,0x7,0x0   		BTFSS	TEMPB0,MSB                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
0034aa   0c00     RETLW     0x0            		RETLW	0x00                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
0034ac   503a     MOVF      0x3a,0x0,0x0   		MOVF	BARGB1,W                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
0034ae   5e35     SUBWF     0x35,0x1,0x0   		SUBWF	AARGB1,F                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
0034b0   503b     MOVF      0x3b,0x0,0x0   		MOVF	BARGB0,W                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
0034b2   5a36     SUBWFB    0x36,0x1,0x0   		SUBWFB	AARGB0,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           		                                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
0034b4   0c00     RETLW     0x0            		RETLW	0x00                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           		END                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           #include "P18CXXX.INC"                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                           #include "P18MACRO.INC"                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ; $Id: p18macro.inc,v 1.1 2003/12/16 21:50:10 GrosbaJ Exp $                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;         MACROS                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkSetPtrToOffset macro Ptr,Offset                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Set pointer Ptr to argument in stack frame at Offset.                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005646   0eff     MOVLW     0xff                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005648   24e1     ADDWF     0xe1,0x0,0x0             addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00564a   6ee9     MOVWF     0xe9,0x0                 movwf     Ptr,ACCESS                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00564c   0eff     MOVLW     0xff                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00564e   20e2     ADDWFC    0xe2,0x0,0x0             addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005650   6eea     MOVWF     0xea,0x0                 movwf     Ptr+1                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkPushPtrToOffset macro Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Push pointer onto stack to point to Offset location in stack.                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Offset defined before push.                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     INDF1,ACCESS                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     PREINC1,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTINC1,F,ACCESS     ; increment FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkAddStackPtr macro N                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add N to FSR1                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(N)                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(N&0xFFFF)                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR0 and push on stack.  FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR0 and push on stack. FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR0 and push on stack. FSR0, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR2 and push on stack.  FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR2 and push on stack. FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR2 and push on stack. FSR2, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from Reg and push on stack.  WREG unchanged.                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from Reg and push on stack.  WREG unchanged.                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from Reg and push on stack.  WREG unchanged.                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR0 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR0 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR0 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS     ; restore FSR0                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR2 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR2 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR2 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS     ; restore FSR2                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at Reg without exposing stack.            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Ptr                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at Reg without exposing stack.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at Reg without exposing stack.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR0                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR0                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR2                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR2                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from stack frame at Offset to FSR2                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+3)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to Reg                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to Reg                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from stack frame at Offset to Reg                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR0 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR0 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from FSR0 to stack frame at Offset                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR0 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR2 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR2 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR2 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from Reg to stack frame at Offset                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from Reg to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from Reg to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc     STATUS,Z                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 1 byte at Offset.  Branch if zero.  Returns 0 in WREG if zero.          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 2 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 3 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR0. Pointer FSR0 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF0,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR0. Pointer FSR0 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR2. Pointer FSR2 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR2. Pointer FSR2 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 1 byte in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 2 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 4 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte in stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytesin stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 4 bytes in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte at FSR2.  FSR2 unchanged.                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytes at FSR2.  FSR2 unchanged.                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;====== These branches are short ==============                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWeqZ macro   Label        ; jmp if W == 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      WREG,F,ACCESS                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWneZ macro   Label        ; jmp if W != 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   tstfsz    WREG,ACCESS                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFleL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005656   0e2f     MOVLW     0x2f                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005658   64ef     CPFSGT    0xef,0x0                 cpfsgt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00565a   d004     BRA       0x5664                 bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFgeL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00565c   0e3a     MOVLW     0x3a                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00565e   60ef     CPFSLT    0xef,0x0                 cpfslt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005660   d001     BRA       0x5664                 bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpClr  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfss   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpSet  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ; @name isdigit                                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ;The {\bf isdigit} function tests the value of {\bf c} to determine if it        C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ;is a digit character. A digit character is defined as any decimal digit         C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ;character (0, 1, 2, 3, 4, 5, 6, 7, 8, 9).                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ; int isdigit (int c);                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           CTYPE CODE                                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           isdigit                                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                             global isdigit                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ; Proceedure: Use FSR0 as pointer to 'c'                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ;         Return with result in PROD                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                             ; Clear out result                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
005642   6af3     CLRF      0xf3,0x0                 clrf      PRODL, ACCESS                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
005644   6af4     CLRF      0xf4,0x0       	  clrf      PRODH, ACCESS                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                             ; Set FSR0 = FSR1 - 2 ( location of 'c')                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                     StkSetPtrToOffset FSR0L,-1                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
005652   66ed     TSTFSZ    0xed,0x0                 tstfsz    POSTDEC0,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
005654   d007     BRA       0x5664                   bra       jNoMatch            ; upper byte must be 0 to match          C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                             ; Test for condition                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                     jmpFleL   INDF0,ACCESS,'0'-1,jNoMatch                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                     jmpFgeL   INDF0,ACCESS,'9'+1,jNoMatch                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           jMatch:                                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
005662   2af3     INCF      0xf3,0x1,0x0             incf      PRODL,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           jNoMatch:                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
005664   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                             end                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           #include <stdio.h>                                                               C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                           int _user_putc (char c);                                                         C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                           int _usart_putc (char c);                                                        C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                           int                                                                              C:\mcc18\src\TRADIT~1\stdclib\putc.c
0052b0   cfd9     MOVFF     0xfd9,0xfe6    putc (char c, FILE * f)                                                          C:\mcc18\src\TRADIT~1\stdclib\putc.c
0052b2   ffe6                                                                                                               
0052b4   cfda     MOVFF     0xfda,0xfe6                                                                                     
0052b6   ffe6                                                                                                               
0052b8   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0052ba   ffd9                                                                                                               
0052bc   cfe2     MOVFF     0xfe2,0xfda                                                                                     
0052be   ffda                                                                                                               
                                           {                                                                                C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                             /* if the handle > 0 then it's a pointer to a string buffer address.           C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                specifically, a pointer to a pointer referencing the next available         C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                byte in the buffer, to which the character will be stored. */               C:\mcc18\src\TRADIT~1\stdclib\putc.c
0052c0   0efb     MOVLW     0xfb             if ((int) f >= 0)                                                              C:\mcc18\src\TRADIT~1\stdclib\putc.c
0052c2   cfdb     MOVFF     0xfdb,0x0                                                                                       
0052c4   f000                                                                                                               
0052c6   0efc     MOVLW     0xfc                                                                                            
0052c8   cfdb     MOVFF     0xfdb,0x1                                                                                       
0052ca   f001                                                                                                               
0052cc   0100     MOVLB     0x0                                                                                             
0052ce   0e80     MOVLW     0x80                                                                                            
0052d0   1401     ANDWF     0x1,0x0,0x0                                                                                     
0052d2   e11a     BNZ       0x5308                                                                                          
0052d4   0efb     MOVLW     0xfb               return (unsigned char) (*(*(char **) f)++ = c);                              C:\mcc18\src\TRADIT~1\stdclib\putc.c
0052d6   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
0052d8   ffe9                                                                                                               
0052da   0efc     MOVLW     0xfc                                                                                            
0052dc   cfdb     MOVFF     0xfdb,0xfea                                                                                     
0052de   ffea                                                                                                               
0052e0   cfee     MOVFF     0xfee,0xff3                                                                                     
0052e2   fff3                                                                                                               
0052e4   cfed     MOVFF     0xfed,0xff4                                                                                     
0052e6   fff4                                                                                                               
0052e8   2aee     INCF      0xee,0x1,0x0                                                                                    
0052ea   0e00     MOVLW     0x0                                                                                             
0052ec   22ef     ADDWFC    0xef,0x1,0x0                                                                                    
0052ee   cff3     MOVFF     0xff3,0xfe9                                                                                     
0052f0   ffe9                                                                                                               
0052f2   cff4     MOVFF     0xff4,0xfea                                                                                     
0052f4   ffea                                                                                                               
0052f6   0efd     MOVLW     0xfd                                                                                            
0052f8   cfdb     MOVFF     0xfdb,0xfef                                                                                     
0052fa   ffef                                                                                                               
0052fc   50ef     MOVF      0xef,0x0,0x0                                                                                    
0052fe   6a01     CLRF      0x1,0x0                                                                                         
005300   6ef3     MOVWF     0xf3,0x0                                                                                        
005302   c001     MOVFF     0x1,0xff4                                                                                       
005304   fff4                                                                                                               
005306   d010     BRA       0x5328                                                                                          
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\putc.c
005308   0efb     MOVLW     0xfb             if ((signed char) f == (signed char) _H_USART)                                 C:\mcc18\src\TRADIT~1\stdclib\putc.c
00530a   50db     MOVF      0xdb,0x0,0x0                                                                                    
00530c   08fe     SUBLW     0xfe                                                                                            
00530e   e106     BNZ       0x531c                                                                                          
                                               {                                                                            C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                 /* the invocation of the USART function is direct, as it's our             C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    default value and we want it to work without needing any                C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    direct initialization from the user */                                  C:\mcc18\src\TRADIT~1\stdclib\putc.c
005310   0efd     MOVLW     0xfd                 return _usart_putc (c);                                                    C:\mcc18\src\TRADIT~1\stdclib\putc.c
005312   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
005314   ffe6                                                                                                               
005316   ec53     CALL      0x56a6,0x0                                                                                      
005318   f02b                                                                                                               
00531a   d005     BRA       0x5326                                                                                          
                                               }                                                                            C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                             else                                                                           C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                               {                                                                            C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                 /* the invocation of the user function is direct, not via a                C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    function pointer. We just put an empty definition of the                C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    function in the library and if the user specifies their own             C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    version it will be found first and the library definition will          C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    be ignored. We do it this way because it's generally better to          C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    spend 2 bytes of program memory for the RETURN instruction of           C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    the empty function than three bytes of data memory for the              C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    function pointer. */                                                    C:\mcc18\src\TRADIT~1\stdclib\putc.c
00531c   0efd     MOVLW     0xfd                 return _user_putc (c);                                                     C:\mcc18\src\TRADIT~1\stdclib\putc.c
00531e   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
005320   ffe6                                                                                                               
005322   ece6     CALL      0x47cc,0x0                                                                                      
005324   f023                                                                                                               
005326   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                               }                                                                            C:\mcc18\src\TRADIT~1\stdclib\putc.c
005328   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mcc18\src\TRADIT~1\stdclib\putc.c
00532a   cfe5     MOVFF     0xfe5,0xfda                                                                                     
00532c   ffda                                                                                                               
00532e   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
005330   ffd9                                                                                                               
005332   0012     RETURN    0x0                                                                                             
                                             include <P18CXXX.INC>                                                          C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18F8722.INC
                                                                                                                            C:\MCC18\MPASM\P18F8722.INC
                                           ;==========================================================================      C:\MCC18\MPASM\P18F8722.INC
                                           ;  $Id: P18F8722.INC,v 1.2 2004/10/06 22:25:07 curtiss Exp $                     C:\MCC18\MPASM\P18F8722.INC
                                           ;  MPASM PIC18F8722 processor include                                            C:\MCC18\MPASM\P18F8722.INC
                                           ;                                                                                C:\MCC18\MPASM\P18F8722.INC
                                           ;  (c) Copyright 1999-2004 Microchip Technology, All rights reserved             C:\MCC18\MPASM\P18F8722.INC
                                           ;==========================================================================      C:\MCC18\MPASM\P18F8722.INC
                                                                                                                            C:\MCC18\MPASM\P18F8722.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18F8722.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #ifdef __18F1220                                                                 C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #define __USE_PORTB 1                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #endif                                                                           C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #ifdef __18F1320                                                                 C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #define __USE_PORTB 1                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #endif                                                                           C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                             GLOBAL _usart_putc                                                             C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           STDIO CODE                                                                       C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           _usart_putc                                                                      C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
0056a6   0eff     MOVLW     0xff                         MOVLW     0xff                                                     C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
0056a8   50e3     MOVF      0xe3,0x0,0x0                 MOVF      PLUSW1, w                                                C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
0056aa   baac     BTFSC     0xac,0x5,0x0                 BTFSC     TXSTA, 0x5                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
0056ac   d004     BRA       0x56b6                       BRA       loop                                                     C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
0056ae   6aaf     CLRF      0xaf,0x0                     CLRF      SPBRG                                                    C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
0056b0   8eab     BSF       0xab,0x7,0x0                 BSF       RCSTA, 0x7                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
0056b2   8aac     BSF       0xac,0x5,0x0                 BSF       TXSTA, 0x5                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #ifdef __USE_PORTB                                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                         BCF       TRISB, 0x1                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #else                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
0056b4   9c94     BCF       0x94,0x6,0x0                 BCF       TRISC, 0x6                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #endif                                                                           C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
0056b6   a2ac     BTFSS     0xac,0x1,0x0   loop:         BTFSS     TXSTA, 0x1                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
0056b8   d7fe     BRA       0x56b6                       BRA       loop                                                     C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
0056ba   6ead     MOVWF     0xad,0x0                     MOVWF     TXREG                                                    C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
0056bc   6ef3     MOVWF     0xf3,0x0                     MOVWF     PRODL                                                    C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
0056be   6af4     CLRF      0xf4,0x0                     CLRF      PRODL + 1                                                C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
0056c0   0012     RETURN    0x0                          RETURN                                                             C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                               END                                                                          C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           ; $Id: strlen.asm,v 1.1 2003/12/09 22:53:20 GrosbaJ Exp $                        C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           #include "P18CXXX.INC"                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                           #include "P18MACRO.INC"                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ; $Id: p18macro.inc,v 1.1 2003/12/16 21:50:10 GrosbaJ Exp $                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;         MACROS                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkSetPtrToOffset macro Ptr,Offset                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Set pointer Ptr to argument in stack frame at Offset.                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     Ptr,ACCESS                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     Ptr+1                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkPushPtrToOffset macro Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Push pointer onto stack to point to Offset location in stack.                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Offset defined before push.                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     INDF1,ACCESS                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     PREINC1,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTINC1,F,ACCESS     ; increment FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkAddStackPtr macro N                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add N to FSR1                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(N)                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(N&0xFFFF)                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR0 and push on stack.  FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR0 and push on stack. FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR0 and push on stack. FSR0, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR2 and push on stack.  FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR2 and push on stack. FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR2 and push on stack. FSR2, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from Reg and push on stack.  WREG unchanged.                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from Reg and push on stack.  WREG unchanged.                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from Reg and push on stack.  WREG unchanged.                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR0 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR0 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR0 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS     ; restore FSR0                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR2 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR2 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR2 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS     ; restore FSR2                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at Reg without exposing stack.            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Ptr                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at Reg without exposing stack.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at Reg without exposing stack.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR0                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR0                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR2                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR2                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from stack frame at Offset to FSR2                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+3)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to Reg                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to Reg                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00540c   0efe     MOVLW     0xfe                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00540e   cfe3     MOVFF     0xfe3,0xfe9              movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005410   ffe9                                                                                                               
005412   0eff     MOVLW     0xff                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005414   cfe3     MOVFF     0xfe3,0xfea              movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005416   ffea                                                                                                               
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from stack frame at Offset to Reg                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR0 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR0 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from FSR0 to stack frame at Offset                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR0 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR2 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR2 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR2 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from Reg to stack frame at Offset                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from Reg to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from Reg to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc     STATUS,Z                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 1 byte at Offset.  Branch if zero.  Returns 0 in WREG if zero.          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 2 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 3 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR0. Pointer FSR0 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF0,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR0. Pointer FSR0 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR2. Pointer FSR2 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR2. Pointer FSR2 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 1 byte in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 2 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 4 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte in stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytesin stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 4 bytes in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte at FSR2.  FSR2 unchanged.                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytes at FSR2.  FSR2 unchanged.                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;====== These branches are short ==============                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWeqZ macro   Label        ; jmp if W == 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      WREG,F,ACCESS                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWneZ macro   Label        ; jmp if W != 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   tstfsz    WREG,ACCESS                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFleL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     cpfsgt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFgeL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     cpfslt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpClr  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfss   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpSet  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ; @name strlen                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;``The {\bf strlen} function computes the length of the string pointed           C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;to by {\bf s}.''                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;Stack usage: 2 bytes. Re-entrant.                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;@param s pointer to the string                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;@return ``The {\bf strlen} function returns the number of characters            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;that precede the terminating null character.''                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ; size_t strlen (const char *s);                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           STRING CODE                                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           strlen                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             global strlen                                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ; Proceedure: Use FSR0 for 's' and use PROD for 'n'.                             C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             ; Load FSR0 by copying 's' off stack into FSR0.                                C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                     Stk2CpyToReg -2,FSR0L                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             ; Clear PROD                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
005418   6af3     CLRF      0xf3,0x0                 clrf      PRODL,ACCESS                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
00541a   6af4     CLRF      0xf4,0x0                 clrf      PRODH,ACCESS                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             ; Scan for '\0' while counting.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           jLoop:                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             ; Test for '\0'                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
00541c   52ee     MOVF      0xee,0x1,0x0             movf      POSTINC0,F,ACCESS   ; set Z flag                             C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
00541e   e003     BZ        0x5426                   bz        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             ; Count it                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
005420   4af3     INFSNZ    0xf3,0x1,0x0   	  infsnz    PRODL, F, ACCESS                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
005422   2af4     INCF      0xf4,0x1,0x0   	  incf      PRODH, F, ACCESS                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
005424   d7fb     BRA       0x541c                   bra       jLoop                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           jEnd                                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
005426   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             end                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ; $Id: slenpgm.asm,v 1.3 2004/04/01 17:25:11 kuhrtt Exp $                        C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #include "P18CXXX.INC"                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                           #include "P18MACRO.INC"                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; $Id: p18macro.inc,v 1.1 2003/12/16 21:50:10 GrosbaJ Exp $                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;         MACROS                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkSetPtrToOffset macro Ptr,Offset                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Set pointer Ptr to argument in stack frame at Offset.                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     Ptr,ACCESS                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     Ptr+1                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkPushPtrToOffset macro Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Push pointer onto stack to point to Offset location in stack.                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Offset defined before push.                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     INDF1,ACCESS                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     PREINC1,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTINC1,F,ACCESS     ; increment FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkAddStackPtr macro N                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add N to FSR1                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(N)                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(N&0xFFFF)                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR0 and push on stack.  FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR0 and push on stack. FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR0 and push on stack. FSR0, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR2 and push on stack.  FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR2 and push on stack. FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR2 and push on stack. FSR2, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from Reg and push on stack.  WREG unchanged.                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from Reg and push on stack.  WREG unchanged.                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from Reg and push on stack.  WREG unchanged.                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR0 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR0 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR0 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS     ; restore FSR0                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR2 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR2 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR2 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS     ; restore FSR2                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at Reg without exposing stack.            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Ptr                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at Reg without exposing stack.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at Reg without exposing stack.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005428   0eff     MOVLW     0xff                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00542a   cfe3     MOVFF     0xfe3,0xff8              movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00542c   fff8                                                                                                               
00542e   52e5     MOVF      0xe5,0x1,0x0             movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005430   0eff     MOVLW     0xff                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005432   cfe3     MOVFF     0xfe3,0xff7              movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005434   fff7                                                                                                               
005436   52e5     MOVF      0xe5,0x1,0x0             movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005438   0eff     MOVLW     0xff                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00543a   cfe3     MOVFF     0xfe3,0xff6              movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00543c   fff6                                                                                                               
00543e   52e5     MOVF      0xe5,0x1,0x0             movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR0                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR0                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR2                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR2                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from stack frame at Offset to FSR2                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+3)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to Reg                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to Reg                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from stack frame at Offset to Reg                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00545e   0efd     MOVLW     0xfd                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005460   cfe3     MOVFF     0xfe3,0x34               movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005462   f034                                                                                                               
005464   0efe     MOVLW     0xfe                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005466   cfe3     MOVFF     0xfe3,0x35               movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005468   f035                                                                                                               
00546a   0eff     MOVLW     0xff                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00546c   cfe3     MOVFF     0xfe3,0x36               movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00546e   f036                                                                                                               
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR0 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR0 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from FSR0 to stack frame at Offset                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR0 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR2 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR2 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR2 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from Reg to stack frame at Offset                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from Reg to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from Reg to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc     STATUS,Z                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00544c   0efd     MOVLW     0xfd                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00544e   2ae3     INCF      0xe3,0x1,0x0             incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005450   e105     BNZ       0x545c                   bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005452   0efe     MOVLW     0xfe                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005454   2ae3     INCF      0xe3,0x1,0x0             incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005456   e102     BNZ       0x545c                   bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005458   0eff     MOVLW     0xff                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00545a   2ae3     INCF      0xe3,0x1,0x0             incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 1 byte at Offset.  Branch if zero.  Returns 0 in WREG if zero.          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 2 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 3 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR0. Pointer FSR0 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF0,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR0. Pointer FSR0 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR2. Pointer FSR2 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR2. Pointer FSR2 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 1 byte in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 2 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 4 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte in stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytesin stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 4 bytes in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte at FSR2.  FSR2 unchanged.                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytes at FSR2.  FSR2 unchanged.                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;====== These branches are short ==============                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWeqZ macro   Label        ; jmp if W == 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      WREG,F,ACCESS                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWneZ macro   Label        ; jmp if W != 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   tstfsz    WREG,ACCESS                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFleL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     cpfsgt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFgeL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     cpfslt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpClr  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfss   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpSet  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; @name strlenpgm                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ;``The {\bf strlenpgm} function computes the length of the string pointed        C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ;to by {\bf s}.''                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ;@param s pointer to the string                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ;@return ``The {\bf strlenpgm} function returns the number of characters         C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ;that precede the terminating null character.''                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; sizerom_t strlenpgm (const rom char *s);                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             extern AARGB2                                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           STRING CODE                                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           strlenpgm                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             global strlenpgm                                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #ifdef __SMALL__                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                            messg "strlenpgm - SMALL"                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; Procedure: Use TBLPTR for 's' and create 'n' on stack.  Return 'n' in          C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; AARGB0:AARGB1:AARGB2.                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Load TBLPTR by POPing 's' off stack.                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     Stk2PopToReg TBLPTRL                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     clrf      POSTDEC1,ACCESS    ; provide extra byte below stack          C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Push 3 bytes of 0 onto stack. This is initial value of 'n'.                  C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     clrf      POSTINC1,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     clrf      POSTINC1,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     clrf      POSTINC1,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Scan for '\0' while counting.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           jLoop:                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Test for '\0'                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     tblrd     *+                  ; read & increment                       C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     movf      TABLAT, F, ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     bz        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Count it                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     Stk3Inc   -3                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     bra       jLoop                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           jEnd                                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     Stk3CpyToReg -3, AARGB2                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     return                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #else                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #ifdef __LARGE__                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                            messg "strlenpgm - LARGE"                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; Procedure: Use TBLPTR for 's' and create 'n' on stack.  Return 'n' in          C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; AARGB0:AARGB1:AARGB2.                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Load TBLPTR by POPing 's' off stack.                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     Stk3PopToReg TBLPTRL                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Push 3 bytes of 0 onto stack. This is initial value of 'n'.                  C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
005440   6ae6     CLRF      0xe6,0x0                 clrf      POSTINC1,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
005442   6ae6     CLRF      0xe6,0x0                 clrf      POSTINC1,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
005444   6ae6     CLRF      0xe6,0x0                 clrf      POSTINC1,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Scan for '\0' while counting.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           jLoop:                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Test for '\0'                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
005446   0009     TBLRDPOSTINC                       tblrd     *+                  ; read & increment                       C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
005448   52f5     MOVF      0xf5,0x1,0x0             movf      TABLAT, F, ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
00544a   e009     BZ        0x545e                   bz        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Count it                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     Stk3Inc   -3                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
00545c   d7f4     BRA       0x5446                   bra       jLoop                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           jEnd                                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     Stk3CpyToReg -3, AARGB2                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
005470   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #else                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                            error "No Model Specified"                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #endif                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #endif                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             end                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
